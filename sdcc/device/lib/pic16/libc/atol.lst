gpasm-0.14.1 (Aug 18 2017)   atol.asm           8-18-2017  19:21:49          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:21:49 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _atol
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021         extern  __mullong
                      00022 
                      00023 ;--------------------------------------------------------
                      00024 ;       Equates to used internal registers
                      00025 ;--------------------------------------------------------
  00000FD8            00026 STATUS  equ     0xfd8
  00000FE8            00027 WREG    equ     0xfe8
  00000FE9            00028 FSR0L   equ     0xfe9
  00000FE1            00029 FSR1L   equ     0xfe1
  00000FD9            00030 FSR2L   equ     0xfd9
  00000FE5            00031 POSTDEC1        equ     0xfe5
  00000FE4            00032 PREINC1 equ     0xfe4
  00000FDB            00033 PLUSW2  equ     0xfdb
  00000FF3            00034 PRODL   equ     0xff3
  00000FF4            00035 PRODH   equ     0xff4
                      00036 
                      00037 
                      00038 ; Internal registers
                      00039 .registers      udata_ovr       0x0000
000000                00040 r0x00   res     1
000001                00041 r0x01   res     1
000002                00042 r0x02   res     1
000003                00043 r0x03   res     1
000004                00044 r0x04   res     1
000005                00045 r0x05   res     1
000006                00046 r0x06   res     1
000007                00047 r0x07   res     1
000008                00048 r0x08   res     1
000009                00049 r0x09   res     1
00000A                00050 r0x0a   res     1
00000B                00051 r0x0b   res     1
00000C                00052 r0x0c   res     1
00000D                00053 r0x0d   res     1
gpasm-0.14.1 (Aug 18 2017)   atol.asm           8-18-2017  19:21:49          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00000E                00054 r0x0e   res     1
00000F                00055 r0x0f   res     1
                      00056 
                      00057 ;--------------------------------------------------------
                      00058 ; global & static initialisations
                      00059 ;--------------------------------------------------------
                      00060 ; I code from now on!
                      00061 ; ; Starting pCode block
                      00062 ; ;ic:1:  _entry($19) :
                      00063 ; ;ic:2:        proc _atol [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( char generic* fixed) fixed}
                      00064 S_atol__atol    code
000000                00065 _atol:
                      00066 ;       .line   29; stdlib/atol.c       long atol(char * s)
000000 CFD9 FFE5      00067         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00068         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00069         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00070         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00071         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00072         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00073         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00074         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00075         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00076         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00077         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00078         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00079         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00080         MOVFF   r0x0b, POSTDEC1
000038 C000 FFE5      00081         MOVFF   r0x0c, POSTDEC1
00003C C000 FFE5      00082         MOVFF   r0x0d, POSTDEC1
000040 C000 FFE5      00083         MOVFF   r0x0e, POSTDEC1
000044 C000 FFE5      00084         MOVFF   r0x0f, POSTDEC1
                      00085 ; ;ic:3: iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _atol_s_1_1}[r0x00 r0x01 r0x02 ] = recv _atol [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( char generic* fixed) fixed}
000048 0E02           00086         MOVLW   0x02
00004A CFDB F000      00087         MOVFF   PLUSW2, r0x00
00004E 0E03           00088         MOVLW   0x03
000050 CFDB F000      00089         MOVFF   PLUSW2, r0x01
000054 0E04           00090         MOVLW   0x04
000056 CFDB F000      00091         MOVFF   PLUSW2, r0x02
                      00092 ; ;ic:4:        iTemp1 [k4 lr4:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int register}{ sir@ _atol_rv_1_2}[r0x03 r0x04 r0x05 r0x06 ] := 0x0 {long-int literal}
                      00093 ;       .line   31; stdlib/atol.c       register long rv=0; 
00005A 6A00           00094         CLRF    r0x03
00005C 6A00           00095         CLRF    r0x04
00005E 6A00           00096         CLRF    r0x05
000060 6A00           00097         CLRF    r0x06
                      00098 ; ;ic:5:        iTemp18 [k23 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] := iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _atol_s_1_1}[r0x00 r0x01 r0x02 ]
                      00099 ;       .line   35; stdlib/atol.c       while (*s) {
000062 C000 F000      00100         MOVFF   r0x00, r0x07
000066 C000 F000      00101         MOVFF   r0x01, r0x08
00006A C000 F000      00102         MOVFF   r0x02, r0x09
                      00103 ; ;ic:7:  _whilecontinue_0($7) :
                      00104 ; ;ic:8:        iTemp4 [k9 lr8:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0a ] = @[iTemp18 [k23 lr5:24 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
00006E                00105 _00111_DS_:
00006E C000 FFE9      00106         MOVFF   r0x07, FSR0L
gpasm-0.14.1 (Aug 18 2017)   atol.asm           8-18-2017  19:21:49          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000072 C000 FFF3      00107         MOVFF   r0x08, PRODL
000076 5000           00108         MOVF    r0x09, W
000078 EC00 F000      00109         CALL    __gptrget1
00007C 6E00           00110         MOVWF   r0x0a
                      00111 ; ;ic:9:        if iTemp4 [k9 lr8:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0a ] == 0 goto loopExitLbl4($33)
00007E 5000           00112         MOVF    r0x0a, W
000080 E000           00113         BZ      _00137_DS_
                      00114 ; ;ic:10:       iTemp7 [k12 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp4 [k9 lr8:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0a ] > 0x39 {const-char literal}
                      00115 ;       .line   36; stdlib/atol.c       if (*s <= '9' && *s >= '0')
000082 5000           00116         MOVF    r0x0a, W
000084 0F80           00117         ADDLW   0x80
000086 0F46           00118         ADDLW   0x46
000088 E200           00119         BC      _00106_DS_
                      00120 ; ;ic:11:       if iTemp7 [k12 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_0($2)
                      00121 ; ;ic:12:       iTemp10 [k15 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp4 [k9 lr8:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0a ] < 0x30 {const-char literal}
00008A 5000           00122         MOVF    r0x0a, W
00008C 0F80           00123         ADDLW   0x80
00008E 0F50           00124         ADDLW   0x50
000090 E200           00125         BC      _00137_DS_
                      00126 ; ;ic:13:       if iTemp10 [k15 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto loopExitLbl4($33)
                      00127 ; ;ic:14:  _iffalse_0($2) :
                      00128 ; ;ic:15:       iTemp12 [k17 lr15:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0a ] = @[iTemp18 [k23 lr5:24 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
000092                00129 _00106_DS_:
                      00130 ;       .line   38; stdlib/atol.c       if (*s == '-' || *s == '+') 
000092 C000 FFE9      00131         MOVFF   r0x07, FSR0L
000096 C000 FFF3      00132         MOVFF   r0x08, PRODL
00009A 5000           00133         MOVF    r0x09, W
00009C EC00 F000      00134         CALL    __gptrget1
                      00135 ; #     MOVWF   r0x0a
                      00136 ; #;;ic:16:     iTemp13 [k18 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp12 [k17 lr15:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0a ] == 0x2d {const-char literal}
                      00137 ; #     MOVF    r0x0a, W
0000A0 6E00           00138         MOVWF   r0x0a
0000A2 0A2D           00139         XORLW   0x2d
0000A4 E000           00140         BZ      _00137_DS_
                      00141 ; ;ic:17:       if iTemp13 [k18 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto loopExitLbl4($33)
                      00142 ; ;ic:18:       iTemp16 [k21 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp12 [k17 lr15:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0a ] == 0x2b {const-char literal}
0000A6 5000           00143         MOVF    r0x0a, W
0000A8 0A2B           00144         XORLW   0x2b
0000AA E000           00145         BZ      _00137_DS_
                      00146 ; ;ic:19:       if iTemp16 [k21 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto loopExitLbl4($33)
                      00147 ; ;ic:20:       iTemp18 [k23 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp18 [k23 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x1 {const-unsigned-char literal}
                      00148 ;       .line   40; stdlib/atol.c       s++;
0000AC 2A00           00149         INCF    r0x07, F
0000AE E300           00150         BNC     _00156_DS_
0000B0 4A00           00151         INFSNZ  r0x08, F
0000B2 2A00           00152         INCF    r0x09, F
                      00153 ; ;ic:21:        goto _whilecontinue_0($7)
0000B4                00154 _00156_DS_:
0000B4 D000           00155         BRA     _00111_DS_
                      00156 ; ;ic:22:  loopExitLbl4($33) :
                      00157 ; ;ic:23:       iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _atol_s_1_1}[r0x00 r0x01 r0x02 ] := iTemp18 [k23 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ]
0000B6                00158 _00137_DS_:
0000B6 C000 F000      00159         MOVFF   r0x07, r0x00
gpasm-0.14.1 (Aug 18 2017)   atol.asm           8-18-2017  19:21:49          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000BA C000 F000      00160         MOVFF   r0x08, r0x01
0000BE C000 F000      00161         MOVFF   r0x09, r0x02
                      00162 ; ;ic:24:       iTemp20 [k25 lr24:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp18 [k23 lr5:24 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
                      00163 ;       .line   43; stdlib/atol.c       sign = (*s == '-');
0000C2 C000 FFE9      00164         MOVFF   r0x07, FSR0L
0000C6 C000 FFF3      00165         MOVFF   r0x08, PRODL
0000CA 5000           00166         MOVF    r0x09, W
0000CC EC00 F000      00167         CALL    __gptrget1
0000D0 6E00           00168         MOVWF   r0x07
                      00169 ; ;ic:25:       iTemp21 [k26 lr25:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _atol_sign_1_2}[r0x08 ] = iTemp20 [k25 lr24:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] == 0x2d {const-char literal}
0000D2 6A00           00170         CLRF    r0x08
0000D4 0A2D           00171         XORLW   0x2d
0000D6 E100           00172         BNZ     _00158_DS_
0000D8 2A00           00173         INCF    r0x08, F
                      00174 ; ;ic:26:       iTemp2 [k6 lr26:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char register}[r0x09 ] := iTemp21 [k26 lr25:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _atol_sign_1_2}[r0x08 ]
0000DA                00175 _00158_DS_:
0000DA C000 F000      00176         MOVFF   r0x08, r0x09
                      00177 ; ;ic:27:       if iTemp21 [k26 lr25:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _atol_sign_1_2}[r0x08 ] != 0 goto _iftrue_2($10)
                      00178 ;       .line   44; stdlib/atol.c       if (*s == '-' || *s == '+') s++;
0000DE 5000           00179         MOVF    r0x08, W
0000E0 E100           00180         BNZ     _00114_DS_
                      00181 ; ;ic:28:       iTemp27 [k32 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp20 [k25 lr24:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] == 0x2b {const-char literal}
0000E2 5000           00182         MOVF    r0x07, W
0000E4 0A2B           00183         XORLW   0x2b
0000E6 E100           00184         BNZ     _00135_DS_
                      00185 ; ;ic:29:       if iTemp27 [k32 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto preHeaderLbl3($31)
                      00186 ; ;ic:30:  _iftrue_2($10) :
                      00187 ; ;ic:31:       iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _atol_s_1_1}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _atol_s_1_1}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
0000E8                00188 _00114_DS_:
0000E8 2A00           00189         INCF    r0x00, F
0000EA E300           00190         BNC     _00135_DS_
0000EC 4A00           00191         INFSNZ  r0x01, F
0000EE 2A00           00192         INCF    r0x02, F
                      00193 ; ;ic:32:  preHeaderLbl3($31) :
                      00194 ; ;ic:33:       iTemp46 [k51 lr33:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] := iTemp0 [k2 lr3:33 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _atol_s_1_1}[r0x00 r0x01 r0x02 ]
                      00195 ; ;ic:35:  _whilecontinue_1($15) :
                      00196 ; ;ic:36:       iTemp31 [k36 lr36:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp46 [k51 lr33:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
0000F0                00197 _00161_DS_:
0000F0                00198 _00135_DS_:
0000F0                00199 _00119_DS_:
                      00200 ;       .line   46; stdlib/atol.c       while (*s && *s >= '0' && *s <= '9') {
0000F0 C000 FFE9      00201         MOVFF   r0x00, FSR0L
0000F4 C000 FFF3      00202         MOVFF   r0x01, PRODL
0000F8 5000           00203         MOVF    r0x02, W
0000FA EC00 F000      00204         CALL    __gptrget1
0000FE 6E00           00205         MOVWF   r0x07
                      00206 ; ;ic:37:       if iTemp31 [k36 lr36:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] == 0 goto _whilebreak_1($17)
000100 5000           00207         MOVF    r0x07, W
000102 B4D8           00208         BTFSC   STATUS, 2
000104 D000           00209         BRA     _00121_DS_
                      00210 ; ;ic:38:       iTemp34 [k39 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp31 [k36 lr36:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] < 0x30 {const-char literal}
000106 5000           00211         MOVF    r0x07, W
000108 0F80           00212         ADDLW   0x80
gpasm-0.14.1 (Aug 18 2017)   atol.asm           8-18-2017  19:21:49          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00010A 0F50           00213         ADDLW   0x50
00010C E300           00214         BNC     _00121_DS_
                      00215 ; ;ic:39:       if iTemp34 [k39 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _whilebreak_1($17)
                      00216 ; ;ic:40:       iTemp37 [k42 lr40:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp31 [k36 lr36:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] > 0x39 {const-char literal}
00010E 5000           00217         MOVF    r0x07, W
000110 0F80           00218         ADDLW   0x80
000112 0F46           00219         ADDLW   0x46
000114 E200           00220         BC      _00121_DS_
                      00221 ; ;ic:41:       if iTemp37 [k42 lr40:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _whilebreak_1($17)
                      00222 ; ;ic:42:       send 0xa {long-int literal}{argreg = 1}
                      00223 ; ;ic:43:       send iTemp1 [k4 lr4:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int register}{ sir@ _atol_rv_1_2}[r0x03 r0x04 r0x05 r0x06 ]{argreg = 2}
                      00224 ; ;ic:44:       iTemp38 [k43 lr44:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int register}[r0x08 r0x0a r0x0b r0x0c ] = call __mullong [k54 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
                      00225 ;       .line   47; stdlib/atol.c       rv = (rv * 10) + (*s - '0');
000116 5000           00226         MOVF    r0x06, W
000118 6EE5           00227         MOVWF   POSTDEC1
00011A 5000           00228         MOVF    r0x05, W
00011C 6EE5           00229         MOVWF   POSTDEC1
00011E 5000           00230         MOVF    r0x04, W
000120 6EE5           00231         MOVWF   POSTDEC1
000122 5000           00232         MOVF    r0x03, W
000124 6EE5           00233         MOVWF   POSTDEC1
000126 6AE5           00234         CLRF    POSTDEC1
000128 6AE5           00235         CLRF    POSTDEC1
00012A 6AE5           00236         CLRF    POSTDEC1
00012C 0E0A           00237         MOVLW   0x0a
00012E 6EE5           00238         MOVWF   POSTDEC1
000130 EC00 F000      00239         CALL    __mullong
000134 6E00           00240         MOVWF   r0x08
000136 CFF3 F000      00241         MOVFF   PRODL, r0x0a
00013A CFF4 F000      00242         MOVFF   PRODH, r0x0b
00013E CFE9 F000      00243         MOVFF   FSR0L, r0x0c
000142 0E08           00244         MOVLW   0x08
000144 26E1           00245         ADDWF   FSR1L, F
                      00246 ; ;ic:45:       iTemp41 [k46 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x07 r0x0d ] = (int fixed)iTemp31 [k36 lr36:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
000146 6A00           00247         CLRF    r0x0d
000148 BE00           00248         BTFSC   r0x07, 7
00014A 6800           00249         SETF    r0x0d
                      00250 ; ;ic:46:       iTemp42 [k47 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x07 r0x0d ] = iTemp41 [k46 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x07 r0x0d ] - 0x30 {int literal}
00014C 0ED0           00251         MOVLW   0xd0
00014E 2600           00252         ADDWF   r0x07, F
000150 A0D8           00253         BTFSS   STATUS, 0
000152 0600           00254         DECF    r0x0d, F
                      00255 ; ;ic:47:       iTemp43 [k48 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int register}[r0x07 r0x0d r0x0e r0x0f ] = (long-int register)iTemp42 [k47 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x07 r0x0d ]
000154 6AE8           00256         CLRF    WREG
000156 BE00           00257         BTFSC   r0x0d, 7
000158 0EFF           00258         MOVLW   0xff
00015A 6E00           00259         MOVWF   r0x0e
00015C 6E00           00260         MOVWF   r0x0f
                      00261 ; ;ic:48:       iTemp1 [k4 lr4:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int register}{ sir@ _atol_rv_1_2}[r0x03 r0x04 r0x05 r0x06 ] = iTemp38 [k43 lr44:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int register}[r0x08 r0x0a r0x0b r0x0c ] + iTemp43 [k48 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int register}[r0x07 r0x0d r0x0e r0x0f ]
00015E 5000           00262         MOVF    r0x07, W
000160 2400           00263         ADDWF   r0x08, W
000162 6E00           00264         MOVWF   r0x03
000164 5000           00265         MOVF    r0x0d, W
gpasm-0.14.1 (Aug 18 2017)   atol.asm           8-18-2017  19:21:49          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000166 2000           00266         ADDWFC  r0x0a, W
000168 6E00           00267         MOVWF   r0x04
00016A 5000           00268         MOVF    r0x0e, W
00016C 2000           00269         ADDWFC  r0x0b, W
00016E 6E00           00270         MOVWF   r0x05
000170 5000           00271         MOVF    r0x0f, W
000172 2000           00272         ADDWFC  r0x0c, W
000174 6E00           00273         MOVWF   r0x06
                      00274 ; ;ic:49:       iTemp46 [k51 lr33:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp46 [k51 lr33:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
                      00275 ;       .line   48; stdlib/atol.c       s++;
000176 2A00           00276         INCF    r0x00, F
000178 E300           00277         BNC     _00164_DS_
00017A 4A00           00278         INFSNZ  r0x01, F
00017C 2A00           00279         INCF    r0x02, F
                      00280 ; ;ic:50:        goto _whilecontinue_1($15)
00017E                00281 _00164_DS_:
00017E D000           00282         BRA     _00119_DS_
                      00283 ; ;ic:51:  _whilebreak_1($17) :
                      00284 ; ;ic:52:       if iTemp2 [k6 lr26:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char register}[r0x09 ] == 0 goto iTempLbl0($20)
000180                00285 _00121_DS_:
                      00286 ;       .line   51; stdlib/atol.c       return (sign ? -rv : rv);
000180 5000           00287         MOVF    r0x09, W
000182 E000           00288         BZ      _00124_DS_
                      00289 ; ;ic:53:       iTemp47 [k52 lr53:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int register}[r0x00 r0x01 r0x02 r0x07 ] = - iTemp1 [k4 lr4:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int register}{ sir@ _atol_rv_1_2}[r0x03 r0x04 r0x05 r0x06 ]
000184 1C00           00290         COMF    r0x06, W
000186 6E00           00291         MOVWF   r0x07
000188 1C00           00292         COMF    r0x05, W
00018A 6E00           00293         MOVWF   r0x02
00018C 1C00           00294         COMF    r0x04, W
00018E 6E00           00295         MOVWF   r0x01
000190 1C00           00296         COMF    r0x03, W
000192 6E00           00297         MOVWF   r0x00
000194 2A00           00298         INCF    r0x00, F
000196 E100           00299         BNZ     _00165_DS_
000198 2A00           00300         INCF    r0x01, F
00019A E100           00301         BNZ     _00165_DS_
00019C 4A00           00302         INFSNZ  r0x02, F
00019E 2A00           00303         INCF    r0x07, F
                      00304 ; ;ic:54:        goto iTempLbl1($21)
0001A0                00305 _00165_DS_:
0001A0 D000           00306         BRA     _00125_DS_
                      00307 ; ;ic:55:  iTempLbl0($20) :
                      00308 ; ;ic:56:       iTemp47 [k52 lr53:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int register}[r0x00 r0x01 r0x02 r0x07 ] := iTemp1 [k4 lr4:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int register}{ sir@ _atol_rv_1_2}[r0x03 r0x04 r0x05 r0x06 ]
0001A2                00309 _00124_DS_:
0001A2 C000 F000      00310         MOVFF   r0x03, r0x00
0001A6 C000 F000      00311         MOVFF   r0x04, r0x01
0001AA C000 F000      00312         MOVFF   r0x05, r0x02
0001AE C000 F000      00313         MOVFF   r0x06, r0x07
                      00314 ; ;ic:57:  iTempLbl1($21) :
                      00315 ; ;ic:58:       ret iTemp47 [k52 lr53:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int register}[r0x00 r0x01 r0x02 r0x07 ]
0001B2                00316 _00125_DS_:
0001B2 C000 FFE9      00317         MOVFF   r0x07, FSR0L
0001B6 C000 FFF4      00318         MOVFF   r0x02, PRODH
gpasm-0.14.1 (Aug 18 2017)   atol.asm           8-18-2017  19:21:49          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001BA C000 FFF3      00319         MOVFF   r0x01, PRODL
0001BE 5000           00320         MOVF    r0x00, W
                      00321 ; ;ic:59:  _return($18) :
                      00322 ; ;ic:60:       eproc _atol [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( char generic* fixed) fixed}
0001C0 CFE4 F000      00323         MOVFF   PREINC1, r0x0f
0001C4 CFE4 F000      00324         MOVFF   PREINC1, r0x0e
0001C8 CFE4 F000      00325         MOVFF   PREINC1, r0x0d
0001CC CFE4 F000      00326         MOVFF   PREINC1, r0x0c
0001D0 CFE4 F000      00327         MOVFF   PREINC1, r0x0b
0001D4 CFE4 F000      00328         MOVFF   PREINC1, r0x0a
0001D8 CFE4 F000      00329         MOVFF   PREINC1, r0x09
0001DC CFE4 F000      00330         MOVFF   PREINC1, r0x08
0001E0 CFE4 F000      00331         MOVFF   PREINC1, r0x07
0001E4 CFE4 F000      00332         MOVFF   PREINC1, r0x06
0001E8 CFE4 F000      00333         MOVFF   PREINC1, r0x05
0001EC CFE4 F000      00334         MOVFF   PREINC1, r0x04
0001F0 CFE4 F000      00335         MOVFF   PREINC1, r0x03
0001F4 CFE4 F000      00336         MOVFF   PREINC1, r0x02
0001F8 CFE4 F000      00337         MOVFF   PREINC1, r0x01
0001FC CFE4 F000      00338         MOVFF   PREINC1, r0x00
000200 CFE4 FFD9      00339         MOVFF   PREINC1, FSR2L
000204 0012           00340         RETURN  
                      00341 
                      00342 
                      00343 
                      00344 ; Statistics:
                      00345 ; code size:      518 (0x0206) bytes ( 0.40%)
                      00346 ;                 259 (0x0103) words
                      00347 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00348 ; access size:     16 (0x0010) bytes
                      00349 
                      00350 
                      00351         end
gpasm-0.14.1 (Aug 18 2017)   atol.asm           8-18-2017  19:21:49          PAGE  8


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00106_DS_                        00000092
_00111_DS_                        0000006E
_00114_DS_                        000000E8
_00119_DS_                        000000F0
_00121_DS_                        00000180
_00124_DS_                        000001A2
_00125_DS_                        000001B2
_00135_DS_                        000000F0
_00137_DS_                        000000B6
_00156_DS_                        000000B4
_00158_DS_                        000000DA
_00161_DS_                        000000F0
_00164_DS_                        0000017E
_00165_DS_                        000001A0
__18F452                          00000001
__gptrget1                        00000000
__mullong                         00000000
_atol                             00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

