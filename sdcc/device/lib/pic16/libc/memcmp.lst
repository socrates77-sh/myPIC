gpasm-0.14.1 (Aug 18 2017)   memcmp.asm         8-18-2017  19:22:05          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:05 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _memcmp
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021 
                      00022 ;--------------------------------------------------------
                      00023 ;       Equates to used internal registers
                      00024 ;--------------------------------------------------------
  00000FD8            00025 STATUS  equ     0xfd8
  00000FE8            00026 WREG    equ     0xfe8
  00000FE9            00027 FSR0L   equ     0xfe9
  00000FE1            00028 FSR1L   equ     0xfe1
  00000FD9            00029 FSR2L   equ     0xfd9
  00000FE5            00030 POSTDEC1        equ     0xfe5
  00000FE4            00031 PREINC1 equ     0xfe4
  00000FDB            00032 PLUSW2  equ     0xfdb
  00000FF3            00033 PRODL   equ     0xff3
                      00034 
                      00035 
                      00036 ; Internal registers
                      00037 .registers      udata_ovr       0x0000
000000                00038 r0x00   res     1
000001                00039 r0x01   res     1
000002                00040 r0x02   res     1
000003                00041 r0x03   res     1
000004                00042 r0x04   res     1
000005                00043 r0x05   res     1
000006                00044 r0x06   res     1
000007                00045 r0x07   res     1
000008                00046 r0x08   res     1
000009                00047 r0x09   res     1
00000A                00048 r0x0a   res     1
00000B                00049 r0x0b   res     1
00000C                00050 r0x0c   res     1
00000D                00051 r0x0d   res     1
00000E                00052 r0x0e   res     1
                      00053 
gpasm-0.14.1 (Aug 18 2017)   memcmp.asm         8-18-2017  19:22:05          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;--------------------------------------------------------
                      00055 ; global & static initialisations
                      00056 ;--------------------------------------------------------
                      00057 ; I code from now on!
                      00058 ; ; Starting pCode block
                      00059 ; ;ic:1:  _entry($8) :
                      00060 ; ;ic:2:        proc _memcmp [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
                      00061 S_memcmp__memcmp        code
000000                00062 _memcmp:
                      00063 ;       .line   32; string/memcmp.c     memcmp (void * buf1, void * buf2, size_t count) 
000000 CFD9 FFE5      00064         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00065         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00066         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00067         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00068         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00069         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00070         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00071         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00072         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00073         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00074         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00075         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00076         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00077         MOVFF   r0x0b, POSTDEC1
000038 C000 FFE5      00078         MOVFF   r0x0c, POSTDEC1
00003C C000 FFE5      00079         MOVFF   r0x0d, POSTDEC1
000040 C000 FFE5      00080         MOVFF   r0x0e, POSTDEC1
                      00081 ; ;ic:3: iTemp0 [k2 lr3:26 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memcmp_buf1_1_28}[r0x00 r0x01 r0x02 ] = recv _memcmp [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
000044 0E02           00082         MOVLW   0x02
000046 CFDB F000      00083         MOVFF   PLUSW2, r0x00
00004A 0E03           00084         MOVLW   0x03
00004C CFDB F000      00085         MOVFF   PLUSW2, r0x01
000050 0E04           00086         MOVLW   0x04
000052 CFDB F000      00087         MOVFF   PLUSW2, r0x02
                      00088 ; ;ic:4: iTemp1 [k4 lr4:29 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memcmp_buf2_1_28}[r0x03 r0x04 r0x05 ] = recv _memcmp [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
000056 0E05           00089         MOVLW   0x05
000058 CFDB F000      00090         MOVFF   PLUSW2, r0x03
00005C 0E06           00091         MOVLW   0x06
00005E CFDB F000      00092         MOVFF   PLUSW2, r0x04
000062 0E07           00093         MOVLW   0x07
000064 CFDB F000      00094         MOVFF   PLUSW2, r0x05
                      00095 ; ;ic:5: iTemp2 [k6 lr5:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memcmp_count_1_28}[r0x06 r0x07 ] = recv _memcmp [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
000068 0E08           00096         MOVLW   0x08
00006A CFDB F000      00097         MOVFF   PLUSW2, r0x06
00006E 0E09           00098         MOVLW   0x09
000070 CFDB F000      00099         MOVFF   PLUSW2, r0x07
                      00100 ; ;ic:6:        if iTemp2 [k6 lr5:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memcmp_count_1_28}[r0x06 r0x07 ] != 0 goto preHeaderLbl0($12)
                      00101 ;       .line   34; string/memcmp.c     if (!count)
000074 5000           00102         MOVF    r0x06, W
000076 1000           00103         IORWF   r0x07, W
000078 E100           00104         BNZ     _00108_DS_
                      00105 ; ;ic:7:        ret 0x0 {int literal}
                      00106 ;       .line   35; string/memcmp.c     return 0;
gpasm-0.14.1 (Aug 18 2017)   memcmp.asm         8-18-2017  19:22:05          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007A 6AF3           00107         CLRF    PRODL
00007C 6AE8           00108         CLRF    WREG
00007E D000           00109         BRA     _00111_DS_
                      00110 ; ;ic:8:  preHeaderLbl0($12) :
                      00111 ; ;ic:9:        iTemp3 [k8 lr9:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] := iTemp2 [k6 lr5:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memcmp_count_1_28}[r0x06 r0x07 ]
                      00112 ; ;ic:11:  _whilecontinue_0($4) :
                      00113 ; ;ic:12:       iTemp3 [k8 lr9:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] = iTemp3 [k8 lr9:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] - 0x1 {const-unsigned-char literal}
000080                00114 _00108_DS_:
                      00115 ;       .line   37; string/memcmp.c     while (--count && (*((char *)buf1) == *((char *)buf2)))
000080 0EFF           00116         MOVLW   0xff
000082 2600           00117         ADDWF   r0x06, F
000084 2200           00118         ADDWFC  r0x07, F
                      00119 ; ;ic:13:       if iTemp3 [k8 lr9:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] == 0 goto _whilebreak_0($6)
000086 5000           00120         MOVF    r0x06, W
000088 1000           00121         IORWF   r0x07, W
00008A E000           00122         BZ      _00110_DS_
                      00123 ; ;ic:14:       iTemp4 [k9 lr14:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] = (char generic* fixed)iTemp0 [k2 lr3:26 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memcmp_buf1_1_28}[r0x00 r0x01 r0x02 ]
00008C 5000           00124         MOVF    r0x02, W
00008E 6E00           00125         MOVWF   r0x0a
000090 5000           00126         MOVF    r0x01, W
000092 6E00           00127         MOVWF   r0x09
000094 5000           00128         MOVF    r0x00, W
000096 6E00           00129         MOVWF   r0x08
                      00130 ; ;ic:15:       iTemp5 [k10 lr15:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0b ] = @[iTemp4 [k9 lr14:20 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
000098 C000 FFE9      00131         MOVFF   r0x08, FSR0L
00009C C000 FFF3      00132         MOVFF   r0x09, PRODL
0000A0 5000           00133         MOVF    r0x0a, W
0000A2 EC00 F000      00134         CALL    __gptrget1
0000A6 6E00           00135         MOVWF   r0x0b
                      00136 ; ;ic:16:       iTemp6 [k11 lr16:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0c r0x0d r0x0e ] = (char generic* fixed)iTemp1 [k4 lr4:29 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memcmp_buf2_1_28}[r0x03 r0x04 r0x05 ]
0000A8 5000           00137         MOVF    r0x05, W
0000AA 6E00           00138         MOVWF   r0x0e
0000AC 5000           00139         MOVF    r0x04, W
0000AE 6E00           00140         MOVWF   r0x0d
0000B0 5000           00141         MOVF    r0x03, W
0000B2 6E00           00142         MOVWF   r0x0c
                      00143 ; ;ic:17:       iTemp7 [k12 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0f ] = @[iTemp6 [k11 lr16:22 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0c r0x0d r0x0e ] + 0x0 {const-unsigned-char literal}]
0000B4 C000 FFE9      00144         MOVFF   r0x0c, FSR0L
0000B8 C000 FFF3      00145         MOVFF   r0x0d, PRODL
0000BC 5000           00146         MOVF    r0x0e, W
0000BE EC00 F000      00147         CALL    __gptrget1
                      00148 ; #     MOVWF   r0x0f
                      00149 ; #;;ic:18:     iTemp8 [k13 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp5 [k10 lr15:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0b ] == iTemp7 [k12 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0f ]
                      00150 ; #     MOVF    r0x0b, W
                      00151 ; #     XORWF   r0x0f, W
0000C2 1800           00152         XORWF   r0x0b, W
0000C4 E100           00153         BNZ     _00110_DS_
                      00154 ; ;ic:19:       if iTemp8 [k13 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _whilebreak_0($6)
                      00155 ; ;ic:20:       iTemp10 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] = iTemp4 [k9 lr14:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] + 0x1 {const-unsigned-char literal}
                      00156 ;       .line   39; string/memcmp.c     buf1 = (char *)buf1 + 1;
0000C6 2A00           00157         INCF    r0x08, F
0000C8 E300           00158         BNC     _00124_DS_
0000CA 4A00           00159         INFSNZ  r0x09, F
gpasm-0.14.1 (Aug 18 2017)   memcmp.asm         8-18-2017  19:22:05          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CC 2A00           00160         INCF    r0x0a, F
                      00161 ; ;ic:21:       iTemp0 [k2 lr3:26 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memcmp_buf1_1_28}[r0x00 r0x01 r0x02 ] = (void generic* fixed)iTemp10 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ]
0000CE                00162 _00124_DS_:
0000CE 5000           00163         MOVF    r0x0a, W
0000D0 6E00           00164         MOVWF   r0x02
0000D2 5000           00165         MOVF    r0x09, W
0000D4 6E00           00166         MOVWF   r0x01
0000D6 5000           00167         MOVF    r0x08, W
0000D8 6E00           00168         MOVWF   r0x00
                      00169 ; ;ic:22:       iTemp13 [k18 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0c r0x0d r0x0e ] = iTemp6 [k11 lr16:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0c r0x0d r0x0e ] + 0x1 {const-unsigned-char literal}
                      00170 ;       .line   40; string/memcmp.c     buf2 = (char *)buf2 + 1;
0000DA 2A00           00171         INCF    r0x0c, F
0000DC E300           00172         BNC     _00125_DS_
0000DE 4A00           00173         INFSNZ  r0x0d, F
0000E0 2A00           00174         INCF    r0x0e, F
                      00175 ; ;ic:23:       iTemp1 [k4 lr4:29 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memcmp_buf2_1_28}[r0x03 r0x04 r0x05 ] = (void generic* fixed)iTemp13 [k18 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0c r0x0d r0x0e ]
0000E2                00176 _00125_DS_:
0000E2 5000           00177         MOVF    r0x0e, W
0000E4 6E00           00178         MOVWF   r0x05
0000E6 5000           00179         MOVF    r0x0d, W
0000E8 6E00           00180         MOVWF   r0x04
0000EA 5000           00181         MOVF    r0x0c, W
0000EC 6E00           00182         MOVWF   r0x03
                      00183 ; ;ic:24:        goto _whilecontinue_0($4)
0000EE D000           00184         BRA     _00108_DS_
                      00185 ; ;ic:25:  _whilebreak_0($6) :
                      00186 ; ;ic:26:       iTemp15 [k20 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x00 r0x01 r0x02 ] = (unsigned-char generic* fixed)iTemp0 [k2 lr3:26 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memcmp_buf1_1_28}[r0x00 r0x01 r0x02 ]
0000F0                00187 _00110_DS_:
                      00188 ;       .line   43; string/memcmp.c     return *((unsigned char *)buf1) - *((unsigned char *)buf2);
0000F0 5000           00189         MOVF    r0x02, W
0000F2 6E00           00190         MOVWF   r0x02
                      00191 ; #     MOVF    r0x01, W
                      00192 ; #     MOVWF   r0x01
                      00193 ; #     MOVF    r0x01, W
                      00194 ; #     MOVF    r0x00, W
                      00195 ; #     MOVF    r0x00, W
                      00196 ; #     MOVWF   r0x00
                      00197 ; #;;ic:27:     iTemp16 [k21 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x00 ] = @[iTemp15 [k20 lr26:27 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
0000F4 C000 FFE9      00198         MOVFF   r0x00, FSR0L
0000F8 C000 FFF3      00199         MOVFF   r0x01, PRODL
0000FC 5000           00200         MOVF    r0x02, W
0000FE EC00 F000      00201         CALL    __gptrget1
000102 6E00           00202         MOVWF   r0x00
                      00203 ; ;ic:28:       iTemp17 [k22 lr28:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp16 [k21 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x00 ]
000104 6A00           00204         CLRF    r0x01
                      00205 ; ;ic:29:       iTemp18 [k23 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x03 r0x04 r0x05 ] = (unsigned-char generic* fixed)iTemp1 [k4 lr4:29 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memcmp_buf2_1_28}[r0x03 r0x04 r0x05 ]
                      00206 ; #     MOVF    r0x05, W
                      00207 ; #     MOVWF   r0x05
                      00208 ; #     MOVF    r0x05, W
                      00209 ; #     MOVF    r0x04, W
                      00210 ; #     MOVF    r0x04, W
                      00211 ; #     MOVWF   r0x04
                      00212 ; #     MOVF    r0x04, W
gpasm-0.14.1 (Aug 18 2017)   memcmp.asm         8-18-2017  19:22:05          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00213 ; #     MOVF    r0x03, W
                      00214 ; #     MOVF    r0x03, W
                      00215 ; #     MOVWF   r0x03
                      00216 ; #;;ic:30:     iTemp19 [k24 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x03 ] = @[iTemp18 [k23 lr29:30 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
000106 C000 FFE9      00217         MOVFF   r0x03, FSR0L
00010A C000 FFF3      00218         MOVFF   r0x04, PRODL
00010E 5000           00219         MOVF    r0x05, W
000110 EC00 F000      00220         CALL    __gptrget1
                      00221 ; ;ic:31:       iTemp20 [k25 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x03 r0x02 ] = (int fixed)iTemp19 [k24 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x03 ]
000114 6A00           00222         CLRF    r0x02
                      00223 ; ;ic:32:       iTemp21 [k26 lr32:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = iTemp17 [k22 lr28:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - iTemp20 [k25 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x03 r0x02 ]
000116 5E00           00224         SUBWF   r0x00, F
000118 5000           00225         MOVF    r0x02, W
00011A 5A00           00226         SUBWFB  r0x01, F
                      00227 ; ;ic:33:       ret iTemp21 [k26 lr32:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ]
00011C C000 FFF3      00228         MOVFF   r0x01, PRODL
000120 5000           00229         MOVF    r0x00, W
                      00230 ; ;ic:34:  _return($7) :
                      00231 ; ;ic:35:       eproc _memcmp [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
000122                00232 _00111_DS_:
000122 CFE4 F000      00233         MOVFF   PREINC1, r0x0e
000126 CFE4 F000      00234         MOVFF   PREINC1, r0x0d
00012A CFE4 F000      00235         MOVFF   PREINC1, r0x0c
00012E CFE4 F000      00236         MOVFF   PREINC1, r0x0b
000132 CFE4 F000      00237         MOVFF   PREINC1, r0x0a
000136 CFE4 F000      00238         MOVFF   PREINC1, r0x09
00013A CFE4 F000      00239         MOVFF   PREINC1, r0x08
00013E CFE4 F000      00240         MOVFF   PREINC1, r0x07
000142 CFE4 F000      00241         MOVFF   PREINC1, r0x06
000146 CFE4 F000      00242         MOVFF   PREINC1, r0x05
00014A CFE4 F000      00243         MOVFF   PREINC1, r0x04
00014E CFE4 F000      00244         MOVFF   PREINC1, r0x03
000152 CFE4 F000      00245         MOVFF   PREINC1, r0x02
000156 CFE4 F000      00246         MOVFF   PREINC1, r0x01
00015A CFE4 F000      00247         MOVFF   PREINC1, r0x00
00015E CFE4 FFD9      00248         MOVFF   PREINC1, FSR2L
000162 0012           00249         RETURN  
                      00250 
                      00251 
                      00252 
                      00253 ; Statistics:
                      00254 ; code size:      356 (0x0164) bytes ( 0.27%)
                      00255 ;                 178 (0x00b2) words
                      00256 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00257 ; access size:     15 (0x000f) bytes
                      00258 
                      00259 
                      00260         end
gpasm-0.14.1 (Aug 18 2017)   memcmp.asm         8-18-2017  19:22:05          PAGE  6


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00108_DS_                        00000080
_00110_DS_                        000000F0
_00111_DS_                        00000122
_00124_DS_                        000000CE
_00125_DS_                        000000E2
__18F452                          00000001
__gptrget1                        00000000
_memcmp                           00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

