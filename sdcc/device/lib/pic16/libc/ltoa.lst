gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:21:54 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _ultoa
                      00016         global  _ltoa
                      00017 
                      00018 ;--------------------------------------------------------
                      00019 ; extern variables in this module
                      00020 ;--------------------------------------------------------
                      00021         extern  __modulong
                      00022         extern  __divulong
                      00023 
                      00024 ;--------------------------------------------------------
                      00025 ;       Equates to used internal registers
                      00026 ;--------------------------------------------------------
  00000FD8            00027 STATUS  equ     0xfd8
  00000FE9            00028 FSR0L   equ     0xfe9
  00000FEA            00029 FSR0H   equ     0xfea
  00000FE1            00030 FSR1L   equ     0xfe1
  00000FD9            00031 FSR2L   equ     0xfd9
  00000FEF            00032 INDF0   equ     0xfef
  00000FE5            00033 POSTDEC1        equ     0xfe5
  00000FE4            00034 PREINC1 equ     0xfe4
  00000FDB            00035 PLUSW2  equ     0xfdb
  00000FF3            00036 PRODL   equ     0xff3
  00000FF4            00037 PRODH   equ     0xff4
                      00038 
                      00039 
                      00040 ; Internal registers
                      00041 .registers      udata_ovr       0x0000
000000                00042 r0x00   res     1
000001                00043 r0x01   res     1
000002                00044 r0x02   res     1
000003                00045 r0x03   res     1
000004                00046 r0x04   res     1
000005                00047 r0x05   res     1
000006                00048 r0x06   res     1
000007                00049 r0x07   res     1
000008                00050 r0x08   res     1
000009                00051 r0x09   res     1
00000A                00052 r0x0a   res     1
00000B                00053 r0x0b   res     1
gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00000C                00054 r0x0c   res     1
00000D                00055 r0x0d   res     1
00000E                00056 r0x0e   res     1
00000F                00057 r0x0f   res     1
                      00058 
                      00059 udata_ltoa_0    udata
000000                00060 _ultoa_buffer_1_2       res     32
                      00061 
                      00062 ;--------------------------------------------------------
                      00063 ; global & static initialisations
                      00064 ;--------------------------------------------------------
                      00065 ; I code from now on!
                      00066 ; ; Starting pCode block
                      00067 ; ;ic:1:  _entry($5) :
                      00068 ; ;ic:2:        proc _ltoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( long-int fixed, char near* fixed, unsigned-char fixed) fixed}
                      00069 S_ltoa__ltoa    code
000000                00070 _ltoa:
                      00071 ;       .line   72; stdlib/ltoa.c       void ltoa(long value, __data char* str, unsigned char radix)
000000 CFD9 FFE5      00072         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00073         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00074         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00075         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00076         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00077         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00078         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00079         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00080         MOVFF   r0x06, POSTDEC1
                      00081 ; ;ic:3: iTemp0 [k2 lr3:14 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _ltoa_value_1_5}[r0x00 r0x01 r0x02 r0x03 ] = recv _ltoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( long-int fixed, char near* fixed, unsigned-char fixed) fixed}
000024 0E02           00082         MOVLW   0x02
000026 CFDB F000      00083         MOVFF   PLUSW2, r0x00
00002A 0E03           00084         MOVLW   0x03
00002C CFDB F000      00085         MOVFF   PLUSW2, r0x01
000030 0E04           00086         MOVLW   0x04
000032 CFDB F000      00087         MOVFF   PLUSW2, r0x02
000036 0E05           00088         MOVLW   0x05
000038 CFDB F000      00089         MOVFF   PLUSW2, r0x03
                      00090 ; ;ic:4: iTemp1 [k4 lr4:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* fixed}{ sir@ _ltoa_str_1_5}[r0x04 r0x05 ] = recv _ltoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( long-int fixed, char near* fixed, unsigned-char fixed) fixed}
00003C 0E06           00091         MOVLW   0x06
00003E CFDB F000      00092         MOVFF   PLUSW2, r0x04
000042 0E07           00093         MOVLW   0x07
000044 CFDB F000      00094         MOVFF   PLUSW2, r0x05
                      00095 ; ;ic:5: iTemp2 [k6 lr5:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ltoa_radix_1_5}[r0x06 ] = recv _ltoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( long-int fixed, char near* fixed, unsigned-char fixed) fixed}
000048 0E08           00096         MOVLW   0x08
00004A CFDB F000      00097         MOVFF   PLUSW2, r0x06
                      00098 ; ;ic:6:        iTemp3 [k8 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp0 [k2 lr3:14 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _ltoa_value_1_5}[r0x00 r0x01 r0x02 r0x03 ] < 0x0 {long-int literal}
                      00099 ;       .line   79; stdlib/ltoa.c       if (value < 0 && radix == 10) {
00004E 80D8           00100         BSF     STATUS, 0
000050 AE00           00101         BTFSS   r0x03, 7
000052 90D8           00102         BCF     STATUS, 0
000054 E300           00103         BNC     _00133_DS_
                      00104 ; ;ic:7:        if iTemp3 [k8 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_1($2)
                      00105 ; ;ic:8:        iTemp4 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr5:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ltoa_radix_1_5}[r0x06 ] == 0xa {const-unsigned-char literal}
000056 5000           00106         MOVF    r0x06, W
gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000058 0A0A           00107         XORLW   0x0a
00005A E100           00108         BNZ     _00133_DS_
                      00109 ; ;ic:9:        if iTemp4 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_1($2)
                      00110 ; ;ic:10:       *(iTemp1 [k4 lr4:17 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char near* fixed}{ sir@ _ltoa_str_1_5}[r0x04 r0x05 ]) := 0x2d {const-char literal}
                      00111 ;       .line   80; stdlib/ltoa.c       *str++ = '-';
00005C C000 FFE9      00112         MOVFF   r0x04, FSR0L
000060 C000 FFEA      00113         MOVFF   r0x05, FSR0H
000064 0E2D           00114         MOVLW   0x2d
000066 6EEF           00115         MOVWF   INDF0
                      00116 ; ;ic:11:       iTemp1 [k4 lr4:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* fixed}{ sir@ _ltoa_str_1_5}[r0x04 r0x05 ] = iTemp1 [k4 lr4:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* fixed}{ sir@ _ltoa_str_1_5}[r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
000068 4A00           00117         INFSNZ  r0x04, F
00006A 2A00           00118         INCF    r0x05, F
                      00119 ; ;ic:12:       iTemp0 [k2 lr3:14 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _ltoa_value_1_5}[r0x00 r0x01 r0x02 r0x03 ] = - iTemp0 [k2 lr3:14 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _ltoa_value_1_5}[r0x00 r0x01 r0x02 r0x03 ]
                      00120 ;       .line   81; stdlib/ltoa.c       value = -value;
00006C 1E00           00121         COMF    r0x03, F
00006E 1E00           00122         COMF    r0x02, F
000070 1E00           00123         COMF    r0x01, F
000072 6C00           00124         NEGF    r0x00
000074 E100           00125         BNZ     _00133_DS_
000076 2A00           00126         INCF    r0x01, F
000078 E100           00127         BNZ     _00133_DS_
00007A 2A00           00128         INCF    r0x02, F
00007C B4D8           00129         BTFSC   STATUS, 2
00007E 2A00           00130         INCF    r0x03, F
                      00131 ; ;ic:13:  _iffalse_1($2) :
                      00132 ; ;ic:14:       iTemp8 [k14 lr14:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ] = (unsigned-long-int fixed)iTemp0 [k2 lr3:14 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _ltoa_value_1_5}[r0x00 r0x01 r0x02 r0x03 ]
                      00133 ; ;ic:15:       send iTemp8 [k14 lr14:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 1}
                      00134 ; ;ic:16:       send iTemp1 [k4 lr4:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* fixed}{ sir@ _ltoa_str_1_5}[r0x04 r0x05 ]{argreg = 2}
                      00135 ; ;ic:17:       send iTemp2 [k6 lr5:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ltoa_radix_1_5}[r0x06 ]{argreg = 3}
                      00136 ; ;ic:18:       iTemp9 [k18 lr18:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ultoa [k13 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
000080                00137 _00133_DS_:
                      00138 ;       .line   86; stdlib/ltoa.c       ultoa((unsigned long)value, str, radix);
000080 5000           00139         MOVF    r0x06, W
000082 6EE5           00140         MOVWF   POSTDEC1
000084 5000           00141         MOVF    r0x05, W
000086 6EE5           00142         MOVWF   POSTDEC1
000088 5000           00143         MOVF    r0x04, W
00008A 6EE5           00144         MOVWF   POSTDEC1
00008C 5000           00145         MOVF    r0x03, W
00008E 6EE5           00146         MOVWF   POSTDEC1
000090 5000           00147         MOVF    r0x02, W
000092 6EE5           00148         MOVWF   POSTDEC1
000094 5000           00149         MOVF    r0x01, W
000096 6EE5           00150         MOVWF   POSTDEC1
000098 5000           00151         MOVF    r0x00, W
00009A 6EE5           00152         MOVWF   POSTDEC1
00009C EC00 F000      00153         CALL    _ultoa
0000A0 0E07           00154         MOVLW   0x07
0000A2 26E1           00155         ADDWF   FSR1L, F
                      00156 ; ;ic:19:  _return($4) :
                      00157 ; ;ic:20:       eproc _ltoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( long-int fixed, char near* fixed, unsigned-char fixed) fixed}
0000A4 CFE4 F000      00158         MOVFF   PREINC1, r0x06
0000A8 CFE4 F000      00159         MOVFF   PREINC1, r0x05
gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000AC CFE4 F000      00160         MOVFF   PREINC1, r0x04
0000B0 CFE4 F000      00161         MOVFF   PREINC1, r0x03
0000B4 CFE4 F000      00162         MOVFF   PREINC1, r0x02
0000B8 CFE4 F000      00163         MOVFF   PREINC1, r0x01
0000BC CFE4 F000      00164         MOVFF   PREINC1, r0x00
0000C0 CFE4 FFD9      00165         MOVFF   PREINC1, FSR2L
0000C4 0012           00166         RETURN  
                      00167 
                      00168 ; ; Starting pCode block
                      00169 ; ;ic:1:  _entry($10) :
                      00170 ; ;ic:2:        proc _ultoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
                      00171 S_ltoa__ultoa   code
000000                00172 _ultoa:
                      00173 ;       .line   43; stdlib/ltoa.c       void ultoa(unsigned long value, __data char* str, unsigned char radix)
000000 CFD9 FFE5      00174         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00175         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00176         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00177         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00178         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00179         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00180         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00181         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00182         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00183         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00184         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00185         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00186         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00187         MOVFF   r0x0b, POSTDEC1
000038 C000 FFE5      00188         MOVFF   r0x0c, POSTDEC1
00003C C000 FFE5      00189         MOVFF   r0x0d, POSTDEC1
000040 C000 FFE5      00190         MOVFF   r0x0e, POSTDEC1
000044 C000 FFE5      00191         MOVFF   r0x0f, POSTDEC1
                      00192 ; ;ic:3: iTemp0 [k2 lr3:28 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _ultoa_value_1_1}[r0x00 r0x01 r0x02 r0x03 ] = recv _ultoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
000048 0E02           00193         MOVLW   0x02
00004A CFDB F000      00194         MOVFF   PLUSW2, r0x00
00004E 0E03           00195         MOVLW   0x03
000050 CFDB F000      00196         MOVFF   PLUSW2, r0x01
000054 0E04           00197         MOVLW   0x04
000056 CFDB F000      00198         MOVFF   PLUSW2, r0x02
00005A 0E05           00199         MOVLW   0x05
00005C CFDB F000      00200         MOVFF   PLUSW2, r0x03
                      00201 ; ;ic:4: iTemp1 [k4 lr4:30 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* fixed}{ sir@ _ultoa_str_1_1}[r0x04 r0x05 ] = recv _ultoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
000060 0E06           00202         MOVLW   0x06
000062 CFDB F000      00203         MOVFF   PLUSW2, r0x04
000066 0E07           00204         MOVLW   0x07
000068 CFDB F000      00205         MOVFF   PLUSW2, r0x05
                      00206 ; ;ic:5: iTemp2 [k6 lr5:28 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ultoa_radix_1_1}[r0x06 ] = recv _ultoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
00006C 0E08           00207         MOVLW   0x08
00006E CFDB F000      00208         MOVFF   PLUSW2, r0x06
                      00209 ; ;ic:6:        iTemp13 [k21 lr6:40 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-char near* fixed}[remat] = &[_ultoa_buffer_1_2 [k20 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char [32d] fixed}]
                      00210 ; ;ic:7:        iTemp14 [k22 lr7:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x07 r0x08 ] := 0x20 {unsigned-int literal}
                      00211 ;       .line   51; stdlib/ltoa.c       do {
000072 0E20           00212         MOVLW   0x20
gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000074 6E00           00213         MOVWF   r0x07
000076 6A00           00214         CLRF    r0x08
                      00215 ; ;ic:9:  _dobody_0($3) :
                      00216 ; ;ic:10:       iTemp5 [k12 lr10:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x09 r0x0a r0x0b r0x0c ] = (unsigned-long-int fixed)iTemp2 [k6 lr5:28 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ultoa_radix_1_1}[r0x06 ]
000078                00217 _00107_DS_:
                      00218 ;       .line   52; stdlib/ltoa.c       ch = '0' + (value % radix);
000078 C000 F000      00219         MOVFF   r0x06, r0x09
00007C 6A00           00220         CLRF    r0x0a
00007E 6A00           00221         CLRF    r0x0b
000080 6A00           00222         CLRF    r0x0c
                      00223 ; ;ic:11:       send iTemp0 [k2 lr3:28 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _ultoa_value_1_1}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 1}
                      00224 ; ;ic:12:       send iTemp5 [k12 lr10:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x09 r0x0a r0x0b r0x0c ]{argreg = 2}
                      00225 ; ;ic:13:       iTemp6 [k13 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x0d r0x0e r0x0f r0x10 ] = call __modulong [k35 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int function ( unsigned-long-int fixed, unsigned-long-int fixed) fixed}
000082 6AE5           00226         CLRF    POSTDEC1
000084 6AE5           00227         CLRF    POSTDEC1
000086 6AE5           00228         CLRF    POSTDEC1
000088 5000           00229         MOVF    r0x09, W
00008A 6EE5           00230         MOVWF   POSTDEC1
00008C 5000           00231         MOVF    r0x03, W
00008E 6EE5           00232         MOVWF   POSTDEC1
000090 5000           00233         MOVF    r0x02, W
000092 6EE5           00234         MOVWF   POSTDEC1
000094 5000           00235         MOVF    r0x01, W
000096 6EE5           00236         MOVWF   POSTDEC1
000098 5000           00237         MOVF    r0x00, W
00009A 6EE5           00238         MOVWF   POSTDEC1
00009C EC00 F000      00239         CALL    __modulong
0000A0 6E00           00240         MOVWF   r0x0d
0000A2 0E08           00241         MOVLW   0x08
0000A4 26E1           00242         ADDWF   FSR1L, F
                      00243 ; ;ic:14:       iTemp7 [k14 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0d ] = (unsigned-char fixed)iTemp6 [k13 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x0d r0x0e r0x0f r0x10 ]
                      00244 ; ;ic:15:       iTemp8 [k15 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0d ] = (char register)iTemp7 [k14 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0d ]
                      00245 ; ;ic:16:       iTemp4 [k10 lr16:24 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ultoa_ch_1_2}[r0x0d ] = iTemp8 [k15 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0d ] + 0x30 {const-char literal}
0000A6 0E30           00246         MOVLW   0x30
0000A8 2600           00247         ADDWF   r0x0d, F
                      00248 ; ;ic:17:       iTemp10 [k17 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp4 [k10 lr16:24 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ultoa_ch_1_2}[r0x0d ] > 0x39 {unsigned-char literal}
                      00249 ;       .line   53; stdlib/ltoa.c       if ( ch > (unsigned char)'9') ch += 'a' - '9' - 1;
0000AA 0E3A           00250         MOVLW   0x3a
0000AC 5C00           00251         SUBWF   r0x0d, W
0000AE E300           00252         BNC     _00106_DS_
                      00253 ; ;ic:18:       if iTemp10 [k17 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($2)
                      00254 ; ;ic:19:       iTemp11 [k18 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ] = (char register)iTemp4 [k10 lr16:24 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ultoa_ch_1_2}[r0x0d ]
0000B0 5000           00255         MOVF    r0x0d, W
0000B2 6E00           00256         MOVWF   r0x0e
                      00257 ; ;ic:20:       iTemp4 [k10 lr16:24 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ultoa_ch_1_2}[r0x0d ] = iTemp11 [k18 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ] + 0x27 {char literal}
0000B4 0E27           00258         MOVLW   0x27
0000B6 2400           00259         ADDWF   r0x0e, W
0000B8 6E00           00260         MOVWF   r0x0d
                      00261 ; ;ic:21:  _iffalse_0($2) :
                      00262 ; ;ic:22:       iTemp14 [k22 lr7:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x07 r0x08 ] = iTemp14 [k22 lr7:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x07 r0x08 ] - 0x1 {const-unsigned-char literal}
0000BA                00263 _00106_DS_:
                      00264 ;       .line   61; stdlib/ltoa.c       buffer[ --index ] = ch;
0000BA 0EFF           00265         MOVLW   0xff
gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000BC 2600           00266         ADDWF   r0x07, F
0000BE 2200           00267         ADDWFC  r0x08, F
                      00268 ; ;ic:23:       iTemp15 [k23 lr23:24 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char near* fixed}[r0x0e r0x0f ] = iTemp13 [k21 lr6:40 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-char near* fixed}[remat] + iTemp14 [k22 lr7:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x07 r0x08 ]
0000C0 0E00           00269         MOVLW   LOW(_ultoa_buffer_1_2)
0000C2 2400           00270         ADDWF   r0x07, W
0000C4 6E00           00271         MOVWF   r0x0e
0000C6 0E00           00272         MOVLW   HIGH(_ultoa_buffer_1_2)
0000C8 2000           00273         ADDWFC  r0x08, W
0000CA 6E00           00274         MOVWF   r0x0f
                      00275 ; ;ic:24:       *(iTemp15 [k23 lr23:24 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char near* fixed}[r0x0e r0x0f ]) := iTemp4 [k10 lr16:24 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _ultoa_ch_1_2}[r0x0d ]
0000CC C000 FFE9      00276         MOVFF   r0x0e, FSR0L
0000D0 C000 FFEA      00277         MOVFF   r0x0f, FSR0H
0000D4 C000 FFEF      00278         MOVFF   r0x0d, INDF0
                      00279 ; ;ic:25:       send iTemp0 [k2 lr3:28 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _ultoa_value_1_1}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 1}
                      00280 ; ;ic:26:       send iTemp5 [k12 lr10:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x09 r0x0a r0x0b r0x0c ]{argreg = 2}
                      00281 ; ;ic:27:       iTemp0 [k2 lr3:28 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _ultoa_value_1_1}[r0x00 r0x01 r0x02 r0x03 ] = call __divulong [k36 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int function ( unsigned-long-int fixed, unsigned-long-int fixed) fixed}
                      00282 ;       .line   62; stdlib/ltoa.c       value /= radix;
0000D8 5000           00283         MOVF    r0x0c, W
0000DA 6EE5           00284         MOVWF   POSTDEC1
0000DC 5000           00285         MOVF    r0x0b, W
0000DE 6EE5           00286         MOVWF   POSTDEC1
0000E0 5000           00287         MOVF    r0x0a, W
0000E2 6EE5           00288         MOVWF   POSTDEC1
0000E4 5000           00289         MOVF    r0x09, W
0000E6 6EE5           00290         MOVWF   POSTDEC1
0000E8 5000           00291         MOVF    r0x03, W
0000EA 6EE5           00292         MOVWF   POSTDEC1
0000EC 5000           00293         MOVF    r0x02, W
0000EE 6EE5           00294         MOVWF   POSTDEC1
0000F0 5000           00295         MOVF    r0x01, W
0000F2 6EE5           00296         MOVWF   POSTDEC1
0000F4 5000           00297         MOVF    r0x00, W
0000F6 6EE5           00298         MOVWF   POSTDEC1
0000F8 EC00 F000      00299         CALL    __divulong
0000FC 6E00           00300         MOVWF   r0x00
0000FE CFF3 F000      00301         MOVFF   PRODL, r0x01
000102 CFF4 F000      00302         MOVFF   PRODH, r0x02
000106 CFE9 F000      00303         MOVFF   FSR0L, r0x03
00010A 0E08           00304         MOVLW   0x08
00010C 26E1           00305         ADDWF   FSR1L, F
                      00306 ; ;ic:28:       if iTemp0 [k2 lr3:28 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _ultoa_value_1_1}[r0x00 r0x01 r0x02 r0x03 ] != 0 goto _dobody_0($3)
                      00307 ;       .line   63; stdlib/ltoa.c       } while (value != 0);
00010E 5000           00308         MOVF    r0x00, W
000110 1000           00309         IORWF   r0x01, W
000112 1000           00310         IORWF   r0x02, W
000114 1000           00311         IORWF   r0x03, W
000116 A4D8           00312         BTFSS   STATUS, 2
000118 D000           00313         BRA     _00107_DS_
                      00314 ; ;ic:29:       iTemp22 [k30 lr29:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x00 r0x01 ] := iTemp14 [k22 lr7:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x07 r0x08 ]
                      00315 ;       .line   65; stdlib/ltoa.c       do {
00011A C000 F000      00316         MOVFF   r0x07, r0x00
00011E C000 F000      00317         MOVFF   r0x08, r0x01
                      00318 ; ;ic:30:       iTemp19 [k27 lr30:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x02 r0x03 ] := iTemp1 [k4 lr4:30 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* fixed}{ sir@ _ultoa_str_1_1}[r0x04 r0x05 ]
gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000122 C000 F000      00319         MOVFF   r0x04, r0x02
000126 C000 F000      00320         MOVFF   r0x05, r0x03
                      00321 ; ;ic:32:  _dobody_1($6) :
                      00322 ; ;ic:33:       iTemp21 [k29 lr33:35 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-int fixed}[r0x04 r0x05 ] := iTemp22 [k30 lr29:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x00 r0x01 ]
00012A                00323 _00110_DS_:
                      00324 ;       .line   66; stdlib/ltoa.c       *str++ = buffer[index++];
00012A C000 F000      00325         MOVFF   r0x00, r0x04
00012E C000 F000      00326         MOVFF   r0x01, r0x05
                      00327 ; ;ic:34:       iTemp22 [k30 lr29:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x00 r0x01 ] = iTemp22 [k30 lr29:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x00 r0x01 ] + 0x1 {const-unsigned-char literal}
000132 4A00           00328         INFSNZ  r0x00, F
000134 2A00           00329         INCF    r0x01, F
                      00330 ; ;ic:35:       iTemp23 [k31 lr35:36 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char near* fixed}[r0x04 r0x05 ] = iTemp13 [k21 lr6:40 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-char near* fixed}[remat] + iTemp21 [k29 lr33:35 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-int fixed}[r0x04 r0x05 ]
000136 0E00           00331         MOVLW   LOW(_ultoa_buffer_1_2)
000138 2600           00332         ADDWF   r0x04, F
00013A 0E00           00333         MOVLW   HIGH(_ultoa_buffer_1_2)
00013C 2200           00334         ADDWFC  r0x05, F
                      00335 ; ;ic:36:       iTemp24 [k32 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x04 ] = @[iTemp23 [k31 lr35:36 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char near* fixed}[r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
00013E C000 FFE9      00336         MOVFF   r0x04, FSR0L
000142 C000 FFEA      00337         MOVFF   r0x05, FSR0H
000146 CFEF F000      00338         MOVFF   INDF0, r0x04
                      00339 ; ;ic:37:       *(iTemp19 [k27 lr30:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x02 r0x03 ]) := iTemp24 [k32 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x04 ]
00014A C000 FFE9      00340         MOVFF   r0x02, FSR0L
00014E C000 FFEA      00341         MOVFF   r0x03, FSR0H
000152 C000 FFEF      00342         MOVFF   r0x04, INDF0
                      00343 ; ;ic:38:       iTemp19 [k27 lr30:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x02 r0x03 ] = iTemp19 [k27 lr30:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x02 r0x03 ] + 0x1 {const-unsigned-char literal}
000156 4A00           00344         INFSNZ  r0x02, F
000158 2A00           00345         INCF    r0x03, F
                      00346 ; ;ic:39:       iTemp25 [k33 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k30 lr29:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _ultoa_index_1_2}[r0x00 r0x01 ] < 0x20 {unsigned-int literal}
                      00347 ;       .line   67; stdlib/ltoa.c       } while ( index < NUMBER_OF_DIGITS );
00015A 0E00           00348         MOVLW   0x00
00015C 5C00           00349         SUBWF   r0x01, W
00015E E100           00350         BNZ     _00127_DS_
000160 0E20           00351         MOVLW   0x20
000162 5C00           00352         SUBWF   r0x00, W
000164                00353 _00127_DS_:
000164 E300           00354         BNC     _00110_DS_
                      00355 ; ;ic:40:       if iTemp25 [k33 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _dobody_1($6)
                      00356 ; ;ic:41:       *(iTemp19 [k27 lr30:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x02 r0x03 ]) := 0x0 {const-unsigned-char literal}
                      00357 ;       .line   69; stdlib/ltoa.c       *str = 0;  /* string terminator */
000166 C000 FFE9      00358         MOVFF   r0x02, FSR0L
00016A C000 FFEA      00359         MOVFF   r0x03, FSR0H
00016E 0E00           00360         MOVLW   0x00
000170 6AEF           00361         CLRF    INDF0
                      00362 ; ;ic:42:  _return($9) :
                      00363 ; ;ic:43:       eproc _ultoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
000172 CFE4 F000      00364         MOVFF   PREINC1, r0x0f
000176 CFE4 F000      00365         MOVFF   PREINC1, r0x0e
00017A CFE4 F000      00366         MOVFF   PREINC1, r0x0d
00017E CFE4 F000      00367         MOVFF   PREINC1, r0x0c
000182 CFE4 F000      00368         MOVFF   PREINC1, r0x0b
000186 CFE4 F000      00369         MOVFF   PREINC1, r0x0a
00018A CFE4 F000      00370         MOVFF   PREINC1, r0x09
00018E CFE4 F000      00371         MOVFF   PREINC1, r0x08
gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000192 CFE4 F000      00372         MOVFF   PREINC1, r0x07
000196 CFE4 F000      00373         MOVFF   PREINC1, r0x06
00019A CFE4 F000      00374         MOVFF   PREINC1, r0x05
00019E CFE4 F000      00375         MOVFF   PREINC1, r0x04
0001A2 CFE4 F000      00376         MOVFF   PREINC1, r0x03
0001A6 CFE4 F000      00377         MOVFF   PREINC1, r0x02
0001AA CFE4 F000      00378         MOVFF   PREINC1, r0x01
0001AE CFE4 F000      00379         MOVFF   PREINC1, r0x00
0001B2 CFE4 FFD9      00380         MOVFF   PREINC1, FSR2L
0001B6 0012           00381         RETURN  
                      00382 
                      00383 
                      00384 
                      00385 ; Statistics:
                      00386 ; code size:      638 (0x027e) bytes ( 0.49%)
                      00387 ;                 319 (0x013f) words
                      00388 ; udata size:      32 (0x0020) bytes ( 2.50%)
                      00389 ; access size:     16 (0x0010) bytes
                      00390 
                      00391 
                      00392         end
gpasm-0.14.1 (Aug 18 2017)   ltoa.asm           8-18-2017  19:21:54          PAGE  9


SYMBOL TABLE
  LABEL                             VALUE

FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
_00106_DS_                        000000BA
_00107_DS_                        00000078
_00110_DS_                        0000012A
_00127_DS_                        00000164
_00133_DS_                        00000080
__18F452                          00000001
__divulong                        00000000
__modulong                        00000000
_ltoa                             00000000
_ultoa                            00000000
_ultoa_buffer_1_2                 00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

