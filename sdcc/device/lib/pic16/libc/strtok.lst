gpasm-0.14.1 (Aug 18 2017)   strtok.asm         8-18-2017  19:22:30          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:29 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _strtok
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021         extern  __gptrput1
                      00022         extern  _strchr
                      00023 
                      00024 ;--------------------------------------------------------
                      00025 ;       Equates to used internal registers
                      00026 ;--------------------------------------------------------
  00000FD8            00027 STATUS  equ     0xfd8
  00000FE8            00028 WREG    equ     0xfe8
  00000FE9            00029 FSR0L   equ     0xfe9
  00000FE1            00030 FSR1L   equ     0xfe1
  00000FD9            00031 FSR2L   equ     0xfd9
  00000FE5            00032 POSTDEC1        equ     0xfe5
  00000FE4            00033 PREINC1 equ     0xfe4
  00000FDB            00034 PLUSW2  equ     0xfdb
  00000FF3            00035 PRODL   equ     0xff3
  00000FF4            00036 PRODH   equ     0xff4
                      00037 
                      00038 
                      00039         idata
000000                00040 _strtok_s_1_29  db      0x00, 0x00, 0x00
                      00041 
                      00042 
                      00043 ; Internal registers
                      00044 .registers      udata_ovr       0x0000
000000                00045 r0x00   res     1
000001                00046 r0x01   res     1
000002                00047 r0x02   res     1
000003                00048 r0x03   res     1
000004                00049 r0x04   res     1
000005                00050 r0x05   res     1
000006                00051 r0x06   res     1
000007                00052 r0x07   res     1
000008                00053 r0x08   res     1
gpasm-0.14.1 (Aug 18 2017)   strtok.asm         8-18-2017  19:22:30          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 
                      00055 ;--------------------------------------------------------
                      00056 ; global & static initialisations
                      00057 ;--------------------------------------------------------
                      00058 ; I code from now on!
                      00059 ; ; Starting pCode block
                      00060 ; ;ic:1:  _entry($20) :
                      00061 ; ;ic:2:        proc _strtok [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
                      00062 S_strtok__strtok        code
000000                00063 _strtok:
                      00064 ;       .line   32; string/strtok.c     strtok (char *str, char *control) 
000000 CFD9 FFE5      00065         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00066         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00067         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00068         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00069         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00070         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00071         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00072         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00073         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00074         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00075         MOVFF   r0x08, POSTDEC1
                      00076 ; ;ic:3: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_str_1_28}[r0x00 r0x01 r0x02 ] = recv _strtok [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
00002C 0E02           00077         MOVLW   0x02
00002E CFDB F000      00078         MOVFF   PLUSW2, r0x00
000032 0E03           00079         MOVLW   0x03
000034 CFDB F000      00080         MOVFF   PLUSW2, r0x01
000038 0E04           00081         MOVLW   0x04
00003A CFDB F000      00082         MOVFF   PLUSW2, r0x02
                      00083 ; ;ic:4: iTemp1 [k4 lr4:41 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_control_1_28}[r0x03 r0x04 r0x05 ] = recv _strtok [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
00003E 0E05           00084         MOVLW   0x05
000040 CFDB F000      00085         MOVFF   PLUSW2, r0x03
000044 0E06           00086         MOVLW   0x06
000046 CFDB F000      00087         MOVFF   PLUSW2, r0x04
00004A 0E07           00088         MOVLW   0x07
00004C CFDB F000      00089         MOVFF   PLUSW2, r0x05
                      00090 ; ;ic:5:        if iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_str_1_28}[r0x00 r0x01 r0x02 ] == 0 goto _iffalse_0($2)
                      00091 ;       .line   37; string/strtok.c     if (str)
000050 5000           00092         MOVF    r0x00, W
000052 1000           00093         IORWF   r0x01, W
000054 1000           00094         IORWF   r0x02, W
000056 E000           00095         BZ      _00106_DS_
                      00096 ; ;ic:6:        _strtok_s_1_29 [k6 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data} := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_str_1_28}[r0x00 r0x01 r0x02 ]
                      00097 ;       .line   38; string/strtok.c     s = str;
000058 C000 F000      00098         MOVFF   r0x00, _strtok_s_1_29
00005C C000 F000      00099         MOVFF   r0x01, (_strtok_s_1_29 + 1)
000060 C000 F000      00100         MOVFF   r0x02, (_strtok_s_1_29 + 2)
                      00101 ; ;ic:7:  _iffalse_0($2) :
                      00102 ; ;ic:8:        if _strtok_s_1_29 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data} != 0 goto _whilecontinue_0($8)
000064                00103 _00106_DS_:
000064 0100           00104         BANKSEL _strtok_s_1_29
                      00105 ;       .line   40; string/strtok.c     if (!s)
000066 5100           00106         MOVF    _strtok_s_1_29, W, B
gpasm-0.14.1 (Aug 18 2017)   strtok.asm         8-18-2017  19:22:30          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; removed redundant BANKSEL
000068 1100           00108         IORWF   (_strtok_s_1_29 + 1), W, B
                      00109 ; removed redundant BANKSEL
00006A 1100           00110         IORWF   (_strtok_s_1_29 + 2), W, B
00006C E100           00111         BNZ     _00112_DS_
                      00112 ; ;ic:9:        ret 0x0 {char generic* literal}
                      00113 ;       .line   41; string/strtok.c     return NULL;
00006E 6AF4           00114         CLRF    PRODH
000070 6AF3           00115         CLRF    PRODL
000072 6AE8           00116         CLRF    WREG
000074 D000           00117         BRA     _00123_DS_
                      00118 ; ;ic:11:  _whilecontinue_0($8) :
                      00119 ; ;ic:12:       iTemp3 [k8 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x00 r0x01 r0x02 ] := _strtok_s_1_29 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}
000076                00120 _00112_DS_:
                      00121 ;       .line   43; string/strtok.c     while (*s)
000076 C000 F000      00122         MOVFF   _strtok_s_1_29, r0x00
00007A C000 F000      00123         MOVFF   (_strtok_s_1_29 + 1), r0x01
00007E C000 F000      00124         MOVFF   (_strtok_s_1_29 + 2), r0x02
                      00125 ; ;ic:13:       iTemp4 [k9 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp3 [k8 lr12:13 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
000082 C000 FFE9      00126         MOVFF   r0x00, FSR0L
000086 C000 FFF3      00127         MOVFF   r0x01, PRODL
00008A 5000           00128         MOVF    r0x02, W
00008C EC00 F000      00129         CALL    __gptrget1
000090 6E00           00130         MOVWF   r0x00
                      00131 ; ;ic:14:       if iTemp4 [k9 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] == 0 goto _whilebreak_0($10)
000092 5000           00132         MOVF    r0x00, W
000094 E000           00133         BZ      _00114_DS_
                      00134 ; ;ic:15:       iTemp5 [k11 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x00 r0x01 r0x02 ] := _strtok_s_1_29 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}
                      00135 ;       .line   45; string/strtok.c     if (strchr (control, *s))
000096 C000 F000      00136         MOVFF   _strtok_s_1_29, r0x00
00009A C000 F000      00137         MOVFF   (_strtok_s_1_29 + 1), r0x01
00009E C000 F000      00138         MOVFF   (_strtok_s_1_29 + 2), r0x02
                      00139 ; ;ic:16:       iTemp6 [k12 lr16:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp5 [k11 lr15:16 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
0000A2 C000 FFE9      00140         MOVFF   r0x00, FSR0L
0000A6 C000 FFF3      00141         MOVFF   r0x01, PRODL
0000AA 5000           00142         MOVF    r0x02, W
0000AC EC00 F000      00143         CALL    __gptrget1
                      00144 ; #     MOVWF   r0x00
                      00145 ; #;;ic:17:     send iTemp1 [k4 lr4:41 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_control_1_28}[r0x03 r0x04 r0x05 ]{argreg = 1}
                      00146 ; #;;ic:18:     send iTemp6 [k12 lr16:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]{argreg = 2}
                      00147 ; #;;ic:19:     iTemp7 [k15 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = call _strchr [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char fixed) fixed}
                      00148 ; #     MOVF    r0x00, W
0000B0 6EE5           00149         MOVWF   POSTDEC1
0000B2 5000           00150         MOVF    r0x05, W
0000B4 6EE5           00151         MOVWF   POSTDEC1
0000B6 5000           00152         MOVF    r0x04, W
0000B8 6EE5           00153         MOVWF   POSTDEC1
0000BA 5000           00154         MOVF    r0x03, W
0000BC 6EE5           00155         MOVWF   POSTDEC1
0000BE EC00 F000      00156         CALL    _strchr
0000C2 6E00           00157         MOVWF   r0x00
0000C4 CFF3 F000      00158         MOVFF   PRODL, r0x01
0000C8 CFF4 F000      00159         MOVFF   PRODH, r0x02
gpasm-0.14.1 (Aug 18 2017)   strtok.asm         8-18-2017  19:22:30          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CC 0E04           00160         MOVLW   0x04
0000CE 26E1           00161         ADDWF   FSR1L, F
                      00162 ; ;ic:20:       if iTemp7 [k15 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] == 0 goto _whilebreak_0($10)
0000D0 5000           00163         MOVF    r0x00, W
0000D2 1000           00164         IORWF   r0x01, W
0000D4 1000           00165         IORWF   r0x02, W
0000D6 E000           00166         BZ      _00114_DS_
                      00167 ; ;ic:21:       _strtok_s_1_29 [k6 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data} = _strtok_s_1_29 [k6 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data} + 0x1 {const-unsigned-char literal}
0000D8 0100           00168         BANKSEL _strtok_s_1_29
                      00169 ;       .line   46; string/strtok.c     s++;
0000DA 2B00           00170         INCF    _strtok_s_1_29, F, B
0000DC E300           00171         BNC     _00112_DS_
                      00172 ; removed redundant BANKSEL
0000DE 3F00           00173         INCFSZ  (_strtok_s_1_29 + 1), F, B
0000E0 D000           00174         BRA     _10105_DS_
                      00175 ; removed redundant BANKSEL
0000E2 2B00           00176         INCF    (_strtok_s_1_29 + 2), F, B
0000E4                00177 _10105_DS_:
                      00178 ; ;ic:22:        goto _whilecontinue_0($8)
0000E4                00179 _00143_DS_:
0000E4 D000           00180         BRA     _00112_DS_
                      00181 ; ;ic:23:  _whilebreak_0($10) :
                      00182 ; ;ic:24:       iTemp11 [k19 lr24:46 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_s1_1_29}[r0x00 r0x01 r0x02 ] := _strtok_s_1_29 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}
0000E6                00183 _00114_DS_:
                      00184 ;       .line   51; string/strtok.c     s1 = s;
0000E6 C000 F000      00185         MOVFF   _strtok_s_1_29, r0x00
0000EA C000 F000      00186         MOVFF   (_strtok_s_1_29 + 1), r0x01
0000EE C000 F000      00187         MOVFF   (_strtok_s_1_29 + 2), r0x02
                      00188 ; ;ic:26:  _whilecontinue_1($13) :
                      00189 ; ;ic:27:       iTemp12 [k21 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x06 r0x07 r0x08 ] := _strtok_s_1_29 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}
0000F2                00190 _00117_DS_:
                      00191 ;       .line   53; string/strtok.c     while (*s)
0000F2 C000 F000      00192         MOVFF   _strtok_s_1_29, r0x06
0000F6 C000 F000      00193         MOVFF   (_strtok_s_1_29 + 1), r0x07
0000FA C000 F000      00194         MOVFF   (_strtok_s_1_29 + 2), r0x08
                      00195 ; ;ic:28:       iTemp13 [k22 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp12 [k21 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
0000FE C000 FFE9      00196         MOVFF   r0x06, FSR0L
000102 C000 FFF3      00197         MOVFF   r0x07, PRODL
000106 5000           00198         MOVF    r0x08, W
000108 EC00 F000      00199         CALL    __gptrget1
00010C 6E00           00200         MOVWF   r0x06
                      00201 ; ;ic:29:       if iTemp13 [k22 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] == 0 goto _whilebreak_1($15)
00010E 5000           00202         MOVF    r0x06, W
000110 B4D8           00203         BTFSC   STATUS, 2
000112 D000           00204         BRA     _00119_DS_
                      00205 ; ;ic:30:       iTemp14 [k23 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x06 r0x07 r0x08 ] := _strtok_s_1_29 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}
                      00206 ;       .line   55; string/strtok.c     if (strchr (control, *s))
000114 C000 F000      00207         MOVFF   _strtok_s_1_29, r0x06
000118 C000 F000      00208         MOVFF   (_strtok_s_1_29 + 1), r0x07
00011C C000 F000      00209         MOVFF   (_strtok_s_1_29 + 2), r0x08
                      00210 ; ;ic:31:       iTemp15 [k24 lr31:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp14 [k23 lr30:31 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
000120 C000 FFE9      00211         MOVFF   r0x06, FSR0L
000124 C000 FFF3      00212         MOVFF   r0x07, PRODL
gpasm-0.14.1 (Aug 18 2017)   strtok.asm         8-18-2017  19:22:30          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000128 5000           00213         MOVF    r0x08, W
00012A EC00 F000      00214         CALL    __gptrget1
                      00215 ; #     MOVWF   r0x06
                      00216 ; #;;ic:32:     send iTemp1 [k4 lr4:41 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_control_1_28}[r0x03 r0x04 r0x05 ]{argreg = 1}
                      00217 ; #;;ic:33:     send iTemp15 [k24 lr31:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]{argreg = 2}
                      00218 ; #;;ic:34:     iTemp16 [k25 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = call _strchr [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char fixed) fixed}
                      00219 ; #     MOVF    r0x06, W
00012E 6EE5           00220         MOVWF   POSTDEC1
000130 5000           00221         MOVF    r0x05, W
000132 6EE5           00222         MOVWF   POSTDEC1
000134 5000           00223         MOVF    r0x04, W
000136 6EE5           00224         MOVWF   POSTDEC1
000138 5000           00225         MOVF    r0x03, W
00013A 6EE5           00226         MOVWF   POSTDEC1
00013C EC00 F000      00227         CALL    _strchr
000140 6E00           00228         MOVWF   r0x06
000142 CFF3 F000      00229         MOVFF   PRODL, r0x07
000146 CFF4 F000      00230         MOVFF   PRODH, r0x08
00014A 0E04           00231         MOVLW   0x04
00014C 26E1           00232         ADDWF   FSR1L, F
                      00233 ; ;ic:35:       if iTemp16 [k25 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] == 0 goto _iffalse_3($12)
00014E 5000           00234         MOVF    r0x06, W
000150 1000           00235         IORWF   r0x07, W
000152 1000           00236         IORWF   r0x08, W
000154 E000           00237         BZ      _00116_DS_
                      00238 ; ;ic:36:       iTemp17 [k26 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x06 r0x07 r0x08 ] := _strtok_s_1_29 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}
                      00239 ;       .line   57; string/strtok.c     *s = '\0';
000156 C000 F000      00240         MOVFF   _strtok_s_1_29, r0x06
00015A C000 F000      00241         MOVFF   (_strtok_s_1_29 + 1), r0x07
00015E C000 F000      00242         MOVFF   (_strtok_s_1_29 + 2), r0x08
                      00243 ; ;ic:37:       *(iTemp17 [k26 lr36:37 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data}[r0x06 r0x07 r0x08 ]) := 0x0 {const-char literal}
000162 6AE5           00244         CLRF    POSTDEC1
000164 C000 FFE9      00245         MOVFF   r0x06, FSR0L
000168 C000 FFF3      00246         MOVFF   r0x07, PRODL
00016C 5000           00247         MOVF    r0x08, W
00016E EC00 F000      00248         CALL    __gptrput1
                      00249 ; ;ic:38:       ret iTemp11 [k19 lr24:46 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_s1_1_29}[r0x00 r0x01 r0x02 ]
                      00250 ;       .line   58; string/strtok.c     return s1;
000172 C000 FFF4      00251         MOVFF   r0x02, PRODH
000176 C000 FFF3      00252         MOVFF   r0x01, PRODL
00017A 5000           00253         MOVF    r0x00, W
00017C D000           00254         BRA     _00123_DS_
                      00255 ; ;ic:39:  _iffalse_3($12) :
                      00256 ; ;ic:40:       _strtok_s_1_29 [k6 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data} = _strtok_s_1_29 [k6 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data} + 0x1 {const-unsigned-char literal}
00017E                00257 _00116_DS_:
00017E 0100           00258         BANKSEL _strtok_s_1_29
                      00259 ;       .line   60; string/strtok.c     ++s;
000180 2B00           00260         INCF    _strtok_s_1_29, F, B
000182 E300           00261         BNC     _00117_DS_
                      00262 ; removed redundant BANKSEL
000184 3F00           00263         INCFSZ  (_strtok_s_1_29 + 1), F, B
000186 D000           00264         BRA     _20106_DS_
                      00265 ; removed redundant BANKSEL
gpasm-0.14.1 (Aug 18 2017)   strtok.asm         8-18-2017  19:22:30          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000188 2B00           00266         INCF    (_strtok_s_1_29 + 2), F, B
00018A                00267 _20106_DS_:
                      00268 ; ;ic:41:        goto _whilecontinue_1($13)
00018A                00269 _00144_DS_:
00018A D000           00270         BRA     _00117_DS_
                      00271 ; ;ic:42:  _whilebreak_1($15) :
                      00272 ; ;ic:43:       _strtok_s_1_29 [k6 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* data} := 0x0 {char generic* literal}
00018C                00273 _00119_DS_:
00018C 0100           00274         BANKSEL _strtok_s_1_29
                      00275 ;       .line   63; string/strtok.c     s = NULL;
00018E 6B00           00276         CLRF    _strtok_s_1_29, B
                      00277 ; removed redundant BANKSEL
000190 6B00           00278         CLRF    (_strtok_s_1_29 + 1), B
                      00279 ; removed redundant BANKSEL
000192 6B00           00280         CLRF    (_strtok_s_1_29 + 2), B
                      00281 ; ;ic:44:       iTemp23 [k32 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x03 ] = @[iTemp11 [k19 lr24:46 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_s1_1_29}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
                      00282 ;       .line   65; string/strtok.c     if (*s1)
000194 C000 FFE9      00283         MOVFF   r0x00, FSR0L
000198 C000 FFF3      00284         MOVFF   r0x01, PRODL
00019C 5000           00285         MOVF    r0x02, W
00019E EC00 F000      00286         CALL    __gptrget1
0001A2 6E00           00287         MOVWF   r0x03
                      00288 ; ;ic:45:       if iTemp23 [k32 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x03 ] == 0 goto _iffalse_4($17)
0001A4 5000           00289         MOVF    r0x03, W
0001A6 E000           00290         BZ      _00121_DS_
                      00291 ; ;ic:46:       ret iTemp11 [k19 lr24:46 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strtok_s1_1_29}[r0x00 r0x01 r0x02 ]
                      00292 ;       .line   66; string/strtok.c     return s1;
0001A8 C000 FFF4      00293         MOVFF   r0x02, PRODH
0001AC C000 FFF3      00294         MOVFF   r0x01, PRODL
0001B0 5000           00295         MOVF    r0x00, W
0001B2 D000           00296         BRA     _00123_DS_
                      00297 ; ;ic:47:  _iffalse_4($17) :
                      00298 ; ;ic:48:       ret 0x0 {char generic* literal}
0001B4                00299 _00121_DS_:
                      00300 ;       .line   68; string/strtok.c     return NULL;
0001B4 6AF4           00301         CLRF    PRODH
0001B6 6AF3           00302         CLRF    PRODL
0001B8 6AE8           00303         CLRF    WREG
                      00304 ; ;ic:49:  _return($19) :
                      00305 ; ;ic:50:       eproc _strtok [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
0001BA                00306 _00123_DS_:
0001BA CFE4 F000      00307         MOVFF   PREINC1, r0x08
0001BE CFE4 F000      00308         MOVFF   PREINC1, r0x07
0001C2 CFE4 F000      00309         MOVFF   PREINC1, r0x06
0001C6 CFE4 F000      00310         MOVFF   PREINC1, r0x05
0001CA CFE4 F000      00311         MOVFF   PREINC1, r0x04
0001CE CFE4 F000      00312         MOVFF   PREINC1, r0x03
0001D2 CFE4 F000      00313         MOVFF   PREINC1, r0x02
0001D6 CFE4 F000      00314         MOVFF   PREINC1, r0x01
0001DA CFE4 F000      00315         MOVFF   PREINC1, r0x00
0001DE CFE4 FFD9      00316         MOVFF   PREINC1, FSR2L
0001E2 0012           00317         RETURN  
                      00318 
gpasm-0.14.1 (Aug 18 2017)   strtok.asm         8-18-2017  19:22:30          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00319 
                      00320 
                      00321 ; Statistics:
                      00322 ; code size:      484 (0x01e4) bytes ( 0.37%)
                      00323 ;                 242 (0x00f2) words
                      00324 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00325 ; access size:      9 (0x0009) bytes
                      00326 
                      00327 
                      00328         end
gpasm-0.14.1 (Aug 18 2017)   strtok.asm         8-18-2017  19:22:30          PAGE  8


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00106_DS_                        00000064
_00112_DS_                        00000076
_00114_DS_                        000000E6
_00116_DS_                        0000017E
_00117_DS_                        000000F2
_00119_DS_                        0000018C
_00121_DS_                        000001B4
_00123_DS_                        000001BA
_00143_DS_                        000000E4
_00144_DS_                        0000018A
_10105_DS_                        000000E4
_20106_DS_                        0000018A
__18F452                          00000001
__gptrget1                        00000000
__gptrput1                        00000000
_strchr                           00000000
_strtok                           00000000
_strtok_s_1_29                    00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

