gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:21:44 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _vfprintf
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021         extern  __gptrget3
                      00022         extern  __gptrget4
                      00023         extern  __gptrget2
                      00024         extern  __gptrput1
                      00025         extern  _stdin
                      00026         extern  _stdout
                      00027         extern  _islower
                      00028         extern  ___stream_putchar
                      00029         extern  _ultoa
                      00030         extern  _ltoa
                      00031 
                      00032 ;--------------------------------------------------------
                      00033 ;       Equates to used internal registers
                      00034 ;--------------------------------------------------------
  00000FD8            00035 STATUS  equ     0xfd8
  00000FE8            00036 WREG    equ     0xfe8
  00000FE9            00037 FSR0L   equ     0xfe9
  00000FE1            00038 FSR1L   equ     0xfe1
  00000FD9            00039 FSR2L   equ     0xfd9
  00000FE6            00040 POSTINC1        equ     0xfe6
  00000FE5            00041 POSTDEC1        equ     0xfe5
  00000FE4            00042 PREINC1 equ     0xfe4
  00000FDB            00043 PLUSW2  equ     0xfdb
  00000FF3            00044 PRODL   equ     0xff3
  00000FF4            00045 PRODH   equ     0xff4
                      00046 
                      00047 
                      00048 ; Internal registers
                      00049 .registers      udata_ovr       0x0000
000000                00050 r0x00   res     1
000001                00051 r0x01   res     1
000002                00052 r0x02   res     1
000003                00053 r0x03   res     1
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000004                00054 r0x04   res     1
000005                00055 r0x05   res     1
000006                00056 r0x06   res     1
000007                00057 r0x07   res     1
000008                00058 r0x08   res     1
000009                00059 r0x09   res     1
00000A                00060 r0x0a   res     1
00000B                00061 r0x0b   res     1
00000C                00062 r0x0c   res     1
00000D                00063 r0x0d   res     1
00000E                00064 r0x0e   res     1
00000F                00065 r0x0f   res     1
000010                00066 r0x10   res     1
000011                00067 r0x11   res     1
000012                00068 r0x12   res     1
000013                00069 r0x13   res     1
000014                00070 r0x14   res     1
000015                00071 r0x15   res     1
000016                00072 r0x16   res     1
000017                00073 r0x17   res     1
000018                00074 r0x18   res     1
000019                00075 r0x19   res     1
00001A                00076 r0x1a   res     1
00001B                00077 r0x1b   res     1
00001C                00078 r0x1c   res     1
00001D                00079 r0x1d   res     1
00001E                00080 r0x1e   res     1
                      00081 
                      00082 udata_vfprintf_0        udata
000000                00083 _vfprintf_stringbuffer_1_41     res     3
                      00084 
                      00085 udata_vfprintf_1        udata
000000                00086 _vfprintf_buffer_1_41   res     13
                      00087 
                      00088 ;--------------------------------------------------------
                      00089 ; global & static initialisations
                      00090 ;--------------------------------------------------------
                      00091 ; I code from now on!
                      00092 ; ; Starting pCode block
                      00093 ; ;ic:1:  _entry($115) :
                      00094 ; ;ic:2:        proc _vfprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
                      00095 S_vfprintf__vfprintf    code
000000                00096 _vfprintf:
                      00097 ;       .line   157; stdio/vfprintf.c   vfprintf (FILE * stream, const char *fmt, va_list ap)
000000 CFD9 FFE5      00098         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00099         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00100         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00101         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00102         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00103         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00104         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00105         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00106         MOVFF   r0x06, POSTDEC1
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000024 C000 FFE5      00107         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00108         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00109         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00110         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00111         MOVFF   r0x0b, POSTDEC1
000038 C000 FFE5      00112         MOVFF   r0x0c, POSTDEC1
00003C C000 FFE5      00113         MOVFF   r0x0d, POSTDEC1
000040 C000 FFE5      00114         MOVFF   r0x0e, POSTDEC1
000044 C000 FFE5      00115         MOVFF   r0x0f, POSTDEC1
000048 C000 FFE5      00116         MOVFF   r0x10, POSTDEC1
00004C C000 FFE5      00117         MOVFF   r0x11, POSTDEC1
000050 C000 FFE5      00118         MOVFF   r0x12, POSTDEC1
000054 C000 FFE5      00119         MOVFF   r0x13, POSTDEC1
000058 C000 FFE5      00120         MOVFF   r0x14, POSTDEC1
00005C C000 FFE5      00121         MOVFF   r0x15, POSTDEC1
000060 C000 FFE5      00122         MOVFF   r0x16, POSTDEC1
000064 C000 FFE5      00123         MOVFF   r0x17, POSTDEC1
000068 C000 FFE5      00124         MOVFF   r0x18, POSTDEC1
00006C C000 FFE5      00125         MOVFF   r0x19, POSTDEC1
000070 C000 FFE5      00126         MOVFF   r0x1a, POSTDEC1
000074 C000 FFE5      00127         MOVFF   r0x1b, POSTDEC1
000078 C000 FFE5      00128         MOVFF   r0x1c, POSTDEC1
00007C C000 FFE5      00129         MOVFF   r0x1d, POSTDEC1
000080 C000 FFE5      00130         MOVFF   r0x1e, POSTDEC1
                      00131 ; ;ic:3: iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ] = recv _vfprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
000084 0E02           00132         MOVLW   0x02
000086 CFDB F000      00133         MOVFF   PLUSW2, r0x00
00008A 0E03           00134         MOVLW   0x03
00008C CFDB F000      00135         MOVFF   PLUSW2, r0x01
000090 0E04           00136         MOVLW   0x04
000092 CFDB F000      00137         MOVFF   PLUSW2, r0x02
                      00138 ; ;ic:4: iTemp1 [k4 lr4:16 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_fmt_1_40}[r0x03 r0x04 r0x05 ] = recv _vfprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
000096 0E05           00139         MOVLW   0x05
000098 CFDB F000      00140         MOVFF   PLUSW2, r0x03
00009C 0E06           00141         MOVLW   0x06
00009E CFDB F000      00142         MOVFF   PLUSW2, r0x04
0000A2 0E07           00143         MOVLW   0x07
0000A4 CFDB F000      00144         MOVFF   PLUSW2, r0x05
                      00145 ; ;ic:5: iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] = recv _vfprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
0000A8 0E08           00146         MOVLW   0x08
0000AA CFDB F000      00147         MOVFF   PLUSW2, r0x06
0000AE 0E09           00148         MOVLW   0x09
0000B0 CFDB F000      00149         MOVFF   PLUSW2, r0x07
0000B4 0E0A           00150         MOVLW   0x0a
0000B6 CFDB F000      00151         MOVFF   PLUSW2, r0x08
                      00152 ; ;ic:6:        iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] := 0x0 {int literal}
                      00153 ;       .line   181; stdio/vfprintf.c   int count = 0;
0000BA 6A00           00154         CLRF    r0x09
0000BC 6A00           00155         CLRF    r0x0a
                      00156 ; ;ic:7:        iTemp4 [k10 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x0b r0x0c r0x0d r0x0e ] = (unsigned-long-int fixed)iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ]
                      00157 ;       .line   188; stdio/vfprintf.c   if (0x80 == (unsigned char)(((unsigned long)stream) >> 16)) {
0000BE C000 F000      00158         MOVFF   r0x02, r0x0d
                      00159 ; ;ic:8:        iTemp5 [k11 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x0b r0x0c r0x0d r0x0e ] = iTemp4 [k10 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x0b r0x0c r0x0d r0x0e ] >> 0x10 {const-unsigned-char literal}
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000C2 5000           00160         MOVF    r0x0d, W
                      00161 ; ;ic:9:        iTemp6 [k12 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0b ] = (unsigned-char fixed)iTemp5 [k11 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x0b r0x0c r0x0d r0x0e ]
                      00162 ; ;ic:10:       iTemp7 [k13 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = 0x80 {const-unsigned-char literal} == iTemp6 [k12 lr9:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0b ]
0000C4 0A80           00163         XORLW   0x80
0000C6 E100           00164         BNZ     _00215_DS_
                      00165 ; ;ic:11:       if iTemp7 [k13 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($2)
                      00166 ; ;ic:12:       _vfprintf_stringbuffer_1_41 [k14 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = (char generic* fixed)iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ]
                      00167 ;       .line   190; stdio/vfprintf.c   stringbuffer = (char *) stream;
0000C8 5000           00168         MOVF    r0x02, W
0000CA 0100           00169         BANKSEL (_vfprintf_stringbuffer_1_41 + 2)
0000CC 6F00           00170         MOVWF   (_vfprintf_stringbuffer_1_41 + 2), B
0000CE 5000           00171         MOVF    r0x01, W
                      00172 ; removed redundant BANKSEL
0000D0 6F00           00173         MOVWF   (_vfprintf_stringbuffer_1_41 + 1), B
0000D2 5000           00174         MOVF    r0x00, W
                      00175 ; removed redundant BANKSEL
0000D4 6F00           00176         MOVWF   _vfprintf_stringbuffer_1_41, B
                      00177 ; ;ic:13:       iTemp9 [k16 lr13:14 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char generic* near* fixed}[remat] = &[_vfprintf_stringbuffer_1_41 [k14 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}]
                      00178 ; ;ic:14:       iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ] = (char generic* generic* fixed)iTemp9 [k16 lr13:14 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char generic* near* fixed}[remat]
                      00179 ;       .line   191; stdio/vfprintf.c   stream = (FILE *) &stringbuffer;
0000D6 0E00           00180         MOVLW   HIGH(_vfprintf_stringbuffer_1_41)
0000D8 6E00           00181         MOVWF   r0x01
0000DA 0E00           00182         MOVLW   LOW(_vfprintf_stringbuffer_1_41)
0000DC 6E00           00183         MOVWF   r0x00
0000DE 0E80           00184         MOVLW   0x80
0000E0 6E00           00185         MOVWF   r0x02
                      00186 ; ;ic:15:  _iffalse_0($2) :
                      00187 ; ;ic:16:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] := iTemp1 [k4 lr4:16 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_fmt_1_40}[r0x03 r0x04 r0x05 ]
                      00188 ; ;ic:17:       iTemp166 [k194 lr17:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_vfprintf_buffer_1_41 [k193 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [13d] fixed}]
                      00189 ; ;ic:18:       iTemp167 [k195 lr18:356 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp166 [k194 lr17:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x1 {const-unsigned-char literal}
                      00190 ; ;ic:19:       iTemp138 [k164 lr19:356 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{const-char code* fixed}[remat] = &[__str_0 [k163 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char [11d] code}]
                      00191 ; ;ic:21:  _whilecontinue_0($111) :
                      00192 ; ;ic:22:       iTemp13 [k21 lr22:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x0b ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
0000E2                00193 _00215_DS_:
                      00194 ;       .line   203; stdio/vfprintf.c   while (*ch) //for (; *fmt ; fmt++ )
0000E2 C000 FFE9      00195         MOVFF   r0x03, FSR0L
0000E6 C000 FFF3      00196         MOVFF   r0x04, PRODL
0000EA 5000           00197         MOVF    r0x05, W
0000EC EC00 F000      00198         CALL    __gptrget1
0000F0 6E00           00199         MOVWF   r0x0b
                      00200 ; ;ic:23:       if iTemp13 [k21 lr22:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x0b ] == 0 goto _whilebreak_0($113)
0000F2 5000           00201         MOVF    r0x0b, W
0000F4 B4D8           00202         BTFSC   STATUS, 2
0000F6 EF00 F000      00203         GOTO    _00217_DS_
                      00204 ; ;ic:24:       iTemp16 [k24 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp13 [k21 lr22:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x0b ] == 0x25 {const-char literal}
                      00205 ;       .line   205; stdio/vfprintf.c   if (*ch == '%')
0000FA 5000           00206         MOVF    r0x0b, W
0000FC 0A25           00207         XORLW   0x25
0000FE E000           00208         BZ      _00338_DS_
000100 EF00 F000      00209         GOTO    _00213_DS_
                      00210 ; ;ic:25:       if iTemp16 [k24 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_32($109)
                      00211 ; ;ic:26:       iTemp17 [k25 lr26:201 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_flong_1_41}[r0x0c ] := 0x0 {const-unsigned-char literal}
000104                00212 _00338_DS_:
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00213 ;       .line   207; stdio/vfprintf.c   flong = 0;
000104 6A00           00214         CLRF    r0x0c
                      00215 ; ;ic:27:       iTemp18 [k27 lr27:186 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fstr_1_41}[r0x0d ] := 0x0 {const-unsigned-char literal}
                      00216 ;       .line   208; stdio/vfprintf.c   fstr = 0;
000106 6A00           00217         CLRF    r0x0d
                      00218 ; ;ic:28:       iTemp19 [k29 lr28:209 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fchar_1_41}[r0x0e ] := 0x0 {const-unsigned-char literal}
                      00219 ;       .line   209; stdio/vfprintf.c   fchar = 0;
000108 6A00           00220         CLRF    r0x0e
                      00221 ; ;ic:29:       iTemp20 [k31 lr29:194 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_ffloat_1_41}[r0x0f ] := 0x0 {const-unsigned-char literal}
                      00222 ;       .line   211; stdio/vfprintf.c   ffloat = 0;
00010A 6A00           00223         CLRF    r0x0f
                      00224 ; ;ic:30:       iTemp21 [k33 lr30:240 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_nosign_1_41}[r0x10 ] := 0x0 {const-unsigned-char literal}
                      00225 ;       .line   213; stdio/vfprintf.c   nosign = 0;
00010C 6A00           00226         CLRF    r0x10
                      00227 ; ;ic:31:       iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] := 0xa {const-unsigned-char literal}
                      00228 ;       .line   214; stdio/vfprintf.c   radix = 10;
00010E 0E0A           00229         MOVLW   0x0a
000110 6E00           00230         MOVWF   r0x11
                      00231 ; ;ic:32:       iTemp23 [k37 lr32:330 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_upcase_1_41}[r0x12 ] := 0x0 {const-unsigned-char literal}
                      00232 ;       .line   215; stdio/vfprintf.c   upcase = 0;
000112 6A00           00233         CLRF    r0x12
                      00234 ; ;ic:33:       iTemp24 [k39 lr33:297 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] := 0x0 {const-unsigned-char literal}
                      00235 ;       .line   217; stdio/vfprintf.c   fieldwidth = 0;
000114 6A00           00236         CLRF    r0x13
                      00237 ; ;ic:34:       iTemp25 [k41 lr34:333 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_lalign_1_41}[r0x14 ] := 0x0 {const-unsigned-char literal}
                      00238 ;       .line   218; stdio/vfprintf.c   lalign = 0;
000116 6A00           00239         CLRF    r0x14
                      00240 ; ;ic:35:       iTemp26 [k43 lr35:289 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _vfprintf_padchar_1_41}[r0x15 ] := 0x20 {const-char literal}
                      00241 ;       .line   219; stdio/vfprintf.c   padchar = ' ';
000118 0E20           00242         MOVLW   0x20
00011A 6E00           00243         MOVWF   r0x15
                      00244 ; ;ic:36:       iTemp27 [k45 lr36:294 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_precision_1_41}[r0x16 ] := 0xffffffff {const-char literal}
                      00245 ;       .line   223; stdio/vfprintf.c   precision = -1;
00011C 6800           00246         SETF    r0x16
                      00247 ; ;ic:37:       iTemp28 [k47 lr37:252 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_printsign_1_41}[r0x17 ] := 0x0 {const-unsigned-char literal}
                      00248 ;       .line   226; stdio/vfprintf.c   printsign = 0;
00011E 6A00           00249         CLRF    r0x17
                      00250 ; ;ic:38:       iTemp29 [k49 lr38:257 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _vfprintf_positivechar_1_41}[r0x18 ] := 0x2b {const-char literal}
                      00251 ;       .line   227; stdio/vfprintf.c   positivechar = '+';
000120 0E2B           00252         MOVLW   0x2b
000122 6E00           00253         MOVWF   r0x18
                      00254 ; ;ic:39:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00255 ;       .line   229; stdio/vfprintf.c   ++ch;
000124 2A00           00256         INCF    r0x03, F
000126 E300           00257         BNC     _00339_DS_
000128 4A00           00258         INFSNZ  r0x04, F
00012A 2A00           00259         INCF    r0x05, F
                      00260 ; ;ic:40:       iTemp32 [k53 lr40:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
00012C                00261 _00339_DS_:
                      00262 ;       .line   231; stdio/vfprintf.c   if (*ch == '%')
00012C C000 FFE9      00263         MOVFF   r0x03, FSR0L
000130 C000 FFF3      00264         MOVFF   r0x04, PRODL
000134 5000           00265         MOVF    r0x05, W
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000136 EC00 F000      00266         CALL    __gptrget1
                      00267 ; #     MOVWF   r0x19
                      00268 ; #;;ic:41:     iTemp33 [k54 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp32 [k53 lr40:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x25 {const-char literal}
                      00269 ; #     MOVF    r0x19, W
00013A 6E00           00270         MOVWF   r0x19
00013C 0A25           00271         XORLW   0x25
00013E E100           00272         BNZ     _00108_DS_
                      00273 ; ;ic:42:       if iTemp33 [k54 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_1($4)
                      00274 ; ;ic:43:       send iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ]{argreg = 1}
                      00275 ; ;ic:44:       send iTemp32 [k53 lr40:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ]{argreg = 2}
                      00276 ; ;ic:45:       iTemp36 [k60 lr45:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call ___stream_putchar [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* generic* fixed, char fixed) fixed}
                      00277 ;       .line   233; stdio/vfprintf.c   __stream_putchar (stream, *ch);
000140 5000           00278         MOVF    r0x19, W
000142 6EE5           00279         MOVWF   POSTDEC1
000144 5000           00280         MOVF    r0x02, W
000146 6EE5           00281         MOVWF   POSTDEC1
000148 5000           00282         MOVF    r0x01, W
00014A 6EE5           00283         MOVWF   POSTDEC1
00014C 5000           00284         MOVF    r0x00, W
00014E 6EE5           00285         MOVWF   POSTDEC1
000150 EC00 F000      00286         CALL    ___stream_putchar
000154 0E04           00287         MOVLW   0x04
000156 26E1           00288         ADDWF   FSR1L, F
                      00289 ; ;ic:46:       iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] = iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] + 0x1 {const-unsigned-char literal}
                      00290 ;       .line   234; stdio/vfprintf.c   ++count;
000158 4A00           00291         INFSNZ  r0x09, F
00015A 2A00           00292         INCF    r0x0a, F
                      00293 ; ;ic:47:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00294 ;       .line   235; stdio/vfprintf.c   ++ch;
00015C 2A00           00295         INCF    r0x03, F
00015E E300           00296         BNC     _00342_DS_
000160 4A00           00297         INFSNZ  r0x04, F
000162 2A00           00298         INCF    r0x05, F
                      00299 ; ;ic:48:        goto _whilecontinue_0($111)
000164                00300 _00342_DS_:
                      00301 ;       .line   236; stdio/vfprintf.c   continue;
000164 D000           00302         BRA     _00215_DS_
                      00303 ; ;ic:49:  _iffalse_1($4) :
                      00304 ; ;ic:50:       iTemp41 [k65 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp32 [k53 lr40:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x30 {const-char literal}
000166                00305 _00108_DS_:
                      00306 ;       .line   240; stdio/vfprintf.c   if (*ch == '0')
000166 5000           00307         MOVF    r0x19, W
000168 0A30           00308         XORLW   0x30
00016A E100           00309         BNZ     _00110_DS_
                      00310 ; ;ic:51:       if iTemp41 [k65 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($6)
                      00311 ; ;ic:52:       iTemp26 [k43 lr35:289 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _vfprintf_padchar_1_41}[r0x15 ] := 0x30 {const-char literal}
                      00312 ;       .line   242; stdio/vfprintf.c   padchar = '0';
00016C 0E30           00313         MOVLW   0x30
00016E 6E00           00314         MOVWF   r0x15
                      00315 ; ;ic:53:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00316 ;       .line   243; stdio/vfprintf.c   ++ch;
000170 2A00           00317         INCF    r0x03, F
000172 E300           00318         BNC     _00110_DS_
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000174 4A00           00319         INFSNZ  r0x04, F
000176 2A00           00320         INCF    r0x05, F
                      00321 ; ;ic:54:  _iffalse_2($6) :
                      00322 ; ;ic:55:       iTemp44 [k68 lr55:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
000178                00323 _00345_DS_:
000178                00324 _00110_DS_:
                      00325 ;       .line   246; stdio/vfprintf.c   if (*ch == '-')
000178 C000 FFE9      00326         MOVFF   r0x03, FSR0L
00017C C000 FFF3      00327         MOVFF   r0x04, PRODL
000180 5000           00328         MOVF    r0x05, W
000182 EC00 F000      00329         CALL    __gptrget1
                      00330 ; #     MOVWF   r0x19
                      00331 ; #;;ic:56:     iTemp45 [k69 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp44 [k68 lr55:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x2d {const-char literal}
                      00332 ; #     MOVF    r0x19, W
000186 0A2D           00333         XORLW   0x2d
000188 E100           00334         BNZ     _00112_DS_
                      00335 ; ;ic:57:       if iTemp45 [k69 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_3($8)
                      00336 ; ;ic:58:       iTemp25 [k41 lr34:333 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_lalign_1_41}[r0x14 ] := 0x1 {const-unsigned-char literal}
                      00337 ;       .line   248; stdio/vfprintf.c   lalign = 1;
00018A 0E01           00338         MOVLW   0x01
00018C 6E00           00339         MOVWF   r0x14
                      00340 ; ;ic:59:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00341 ;       .line   249; stdio/vfprintf.c   ++ch;
00018E 2A00           00342         INCF    r0x03, F
000190 E300           00343         BNC     _00112_DS_
000192 4A00           00344         INFSNZ  r0x04, F
000194 2A00           00345         INCF    r0x05, F
                      00346 ; ;ic:60:  _iffalse_3($8) :
                      00347 ; ;ic:61:       iTemp48 [k72 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
000196                00348 _00348_DS_:
000196                00349 _00112_DS_:
                      00350 ;       .line   253; stdio/vfprintf.c   if (*ch == ' ')
000196 C000 FFE9      00351         MOVFF   r0x03, FSR0L
00019A C000 FFF3      00352         MOVFF   r0x04, PRODL
00019E 5000           00353         MOVF    r0x05, W
0001A0 EC00 F000      00354         CALL    __gptrget1
                      00355 ; #     MOVWF   r0x19
                      00356 ; #;;ic:62:     iTemp49 [k73 lr62:63 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp48 [k72 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x20 {const-char literal}
                      00357 ; #     MOVF    r0x19, W
0001A4 0A20           00358         XORLW   0x20
0001A6 E100           00359         BNZ     _00114_DS_
                      00360 ; ;ic:63:       if iTemp49 [k73 lr62:63 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_4($10)
                      00361 ; ;ic:64:       iTemp28 [k47 lr37:252 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_printsign_1_41}[r0x17 ] := 0x1 {const-unsigned-char literal}
                      00362 ;       .line   255; stdio/vfprintf.c   printsign = 1;
0001A8 0E01           00363         MOVLW   0x01
0001AA 6E00           00364         MOVWF   r0x17
                      00365 ; ;ic:65:       iTemp29 [k49 lr38:257 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _vfprintf_positivechar_1_41}[r0x18 ] := 0x20 {const-char literal}
                      00366 ;       .line   256; stdio/vfprintf.c   positivechar = ' ';
0001AC 0E20           00367         MOVLW   0x20
0001AE 6E00           00368         MOVWF   r0x18
                      00369 ; ;ic:66:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00370 ;       .line   257; stdio/vfprintf.c   ++ch;
0001B0 2A00           00371         INCF    r0x03, F
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001B2 E300           00372         BNC     _00114_DS_
0001B4 4A00           00373         INFSNZ  r0x04, F
0001B6 2A00           00374         INCF    r0x05, F
                      00375 ; ;ic:67:  _iffalse_4($10) :
                      00376 ; ;ic:68:       iTemp52 [k76 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
0001B8                00377 _00351_DS_:
0001B8                00378 _00114_DS_:
                      00379 ;       .line   260; stdio/vfprintf.c   if (*ch == '+')
0001B8 C000 FFE9      00380         MOVFF   r0x03, FSR0L
0001BC C000 FFF3      00381         MOVFF   r0x04, PRODL
0001C0 5000           00382         MOVF    r0x05, W
0001C2 EC00 F000      00383         CALL    __gptrget1
                      00384 ; #     MOVWF   r0x19
                      00385 ; #;;ic:69:     iTemp53 [k77 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp52 [k76 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x2b {const-char literal}
                      00386 ; #     MOVF    r0x19, W
0001C6 0A2B           00387         XORLW   0x2b
0001C8 E100           00388         BNZ     _00116_DS_
                      00389 ; ;ic:70:       if iTemp53 [k77 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
                      00390 ; ;ic:71:       iTemp28 [k47 lr37:252 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_printsign_1_41}[r0x17 ] := 0x1 {const-unsigned-char literal}
                      00391 ;       .line   262; stdio/vfprintf.c   printsign = 1;
0001CA 0E01           00392         MOVLW   0x01
0001CC 6E00           00393         MOVWF   r0x17
                      00394 ; ;ic:72:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00395 ;       .line   263; stdio/vfprintf.c   ++ch;
0001CE 2A00           00396         INCF    r0x03, F
0001D0 E300           00397         BNC     _00116_DS_
0001D2 4A00           00398         INFSNZ  r0x04, F
0001D4 2A00           00399         INCF    r0x05, F
                      00400 ; ;ic:73:  _iffalse_5($12) :
                      00401 ; ;ic:74:       iTemp56 [k80 lr74:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
0001D6                00402 _00354_DS_:
0001D6                00403 _00116_DS_:
                      00404 ;       .line   268; stdio/vfprintf.c   if ((*ch >= '1') && (*ch <= '9'))
0001D6 C000 FFE9      00405         MOVFF   r0x03, FSR0L
0001DA C000 FFF3      00406         MOVFF   r0x04, PRODL
0001DE 5000           00407         MOVF    r0x05, W
0001E0 EC00 F000      00408         CALL    __gptrget1
                      00409 ; #     MOVWF   r0x19
                      00410 ; #;;ic:75:     iTemp57 [k81 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp56 [k80 lr74:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] < 0x31 {const-char literal}
                      00411 ; #     MOVF    r0x19, W
0001E4 6E00           00412         MOVWF   r0x19
0001E6 0F80           00413         ADDLW   0x80
0001E8 0F4F           00414         ADDLW   0x4f
0001EA E300           00415         BNC     _00122_DS_
                      00416 ; ;ic:76:       if iTemp57 [k81 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_6($18)
                      00417 ; ;ic:77:       iTemp60 [k84 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp56 [k80 lr74:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] > 0x39 {const-char literal}
0001EC 5000           00418         MOVF    r0x19, W
0001EE 0F80           00419         ADDLW   0x80
0001F0 0F46           00420         ADDLW   0x46
0001F2 E200           00421         BC      _00122_DS_
                      00422 ; ;ic:78:       if iTemp60 [k84 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_6($18)
                      00423 ; ;ic:79:       iTemp73 [k97 lr79:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ] := iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ]
                      00424 ;       .line   270; stdio/vfprintf.c   while ((*ch >= '0') && (*ch <= '9'))
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F4 C000 F000      00425         MOVFF   r0x03, r0x19
0001F8 C000 F000      00426         MOVFF   r0x04, r0x1a
0001FC C000 F000      00427         MOVFF   r0x05, r0x1b
                      00428 ; ;ic:81:  _whilecontinue_1($14) :
                      00429 ; ;ic:82:       iTemp62 [k86 lr82:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] = @[iTemp73 [k97 lr79:95 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ] + 0x0 {const-unsigned-char literal}]
000200                00430 _00118_DS_:
000200 C000 FFE9      00431         MOVFF   r0x19, FSR0L
000204 C000 FFF3      00432         MOVFF   r0x1a, PRODL
000208 5000           00433         MOVF    r0x1b, W
00020A EC00 F000      00434         CALL    __gptrget1
                      00435 ; #     MOVWF   r0x1c
                      00436 ; #;;ic:83:     iTemp63 [k87 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp62 [k86 lr82:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] < 0x30 {const-char literal}
                      00437 ; #     MOVF    r0x1c, W
00020E 6E00           00438         MOVWF   r0x1c
000210 0F80           00439         ADDLW   0x80
000212 0F50           00440         ADDLW   0x50
000214 E300           00441         BNC     _00274_DS_
                      00442 ; ;ic:84:       if iTemp63 [k87 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto loopExitLbl9($170)
                      00443 ; ;ic:85:       iTemp66 [k90 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp62 [k86 lr82:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] > 0x39 {const-char literal}
000216 5000           00444         MOVF    r0x1c, W
000218 0F80           00445         ADDLW   0x80
00021A 0F46           00446         ADDLW   0x46
00021C E200           00447         BC      _00274_DS_
                      00448 ; ;ic:86:       if iTemp66 [k90 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto loopExitLbl9($170)
                      00449 ; ;ic:87:       iTemp67 [k91 lr87:88 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x1d ] = iTemp24 [k39 lr33:297 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] * 0xa {const-unsigned-char literal}
                      00450 ; ;multiply lit val:0x0a by variable r0x13 and store in r0x1d
                      00451 ;       .line   272; stdio/vfprintf.c   fieldwidth = 10 * fieldwidth + (*ch) - '0';
00021E 5000           00452         MOVF    r0x13, W
000220 0D0A           00453         MULLW   0x0a
000222 CFF3 F000      00454         MOVFF   PRODL, r0x1d
                      00455 ; ;ic:88:       iTemp70 [k94 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1d ] = (const-char register)iTemp67 [k91 lr87:88 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x1d ]
                      00456 ; ;ic:89:       iTemp71 [k95 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] = iTemp70 [k94 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1d ] + iTemp62 [k86 lr82:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ]
000226 5000           00457         MOVF    r0x1d, W
000228 2600           00458         ADDWF   r0x1c, F
                      00459 ; ;ic:90:       iTemp24 [k39 lr33:297 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] = iTemp71 [k95 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] - 0x30 {const-char literal}
00022A 0ED0           00460         MOVLW   0xd0
00022C 2400           00461         ADDWF   r0x1c, W
00022E 6E00           00462         MOVWF   r0x13
                      00463 ; ;ic:91:       iTemp73 [k97 lr79:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ] = iTemp73 [k97 lr79:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ] + 0x1 {const-unsigned-char literal}
                      00464 ;       .line   273; stdio/vfprintf.c   ++ch;
000230 2A00           00465         INCF    r0x19, F
000232 E300           00466         BNC     _00359_DS_
000234 4A00           00467         INFSNZ  r0x1a, F
000236 2A00           00468         INCF    r0x1b, F
                      00469 ; ;ic:92:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] := iTemp73 [k97 lr79:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ]
                      00470 ; ;ic:93:        goto _whilecontinue_1($14)
000238                00471 _00359_DS_:
000238 D000           00472         BRA     _00118_DS_
                      00473 ; ;ic:94:  loopExitLbl9($170) :
                      00474 ; ;ic:95:       iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] := iTemp73 [k97 lr79:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ]
00023A                00475 _00274_DS_:
00023A C000 F000      00476         MOVFF   r0x19, r0x03
00023E C000 F000      00477         MOVFF   r0x1a, r0x04
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000242 C000 F000      00478         MOVFF   r0x1b, r0x05
                      00479 ; ;ic:96:  _iffalse_6($18) :
                      00480 ; ;ic:97:       iTemp75 [k99 lr97:98 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
000246                00481 _00122_DS_:
                      00482 ;       .line   279; stdio/vfprintf.c   if (*ch == '.')
000246 C000 FFE9      00483         MOVFF   r0x03, FSR0L
00024A C000 FFF3      00484         MOVFF   r0x04, PRODL
00024E 5000           00485         MOVF    r0x05, W
000250 EC00 F000      00486         CALL    __gptrget1
                      00487 ; #     MOVWF   r0x19
                      00488 ; #;;ic:98:     iTemp76 [k100 lr98:99 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp75 [k99 lr97:98 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x2e {const-char literal}
                      00489 ; #     MOVF    r0x19, W
000254 0A2E           00490         XORLW   0x2e
000256 E100           00491         BNZ     _00129_DS_
                      00492 ; ;ic:99:       if iTemp76 [k100 lr98:99 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($25)
                      00493 ; ;ic:100:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00494 ;       .line   281; stdio/vfprintf.c   ++ch;
000258 2A00           00495         INCF    r0x03, F
00025A E300           00496         BNC     _00362_DS_
00025C 4A00           00497         INFSNZ  r0x04, F
00025E 2A00           00498         INCF    r0x05, F
                      00499 ; ;ic:101:      iTemp27 [k45 lr36:294 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_precision_1_41}[r0x16 ] := 0x0 {const-unsigned-char literal}
000260                00500 _00362_DS_:
                      00501 ;       .line   282; stdio/vfprintf.c   precision = 0;
000260 6A00           00502         CLRF    r0x16
                      00503 ; ;ic:102:      iTemp90 [k114 lr102:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ] := iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ]
                      00504 ;       .line   283; stdio/vfprintf.c   while ((*ch >= '0') && (*ch <= '9'))
000262 C000 F000      00505         MOVFF   r0x03, r0x19
000266 C000 F000      00506         MOVFF   r0x04, r0x1a
00026A C000 F000      00507         MOVFF   r0x05, r0x1b
                      00508 ; ;ic:104:  _whilecontinue_2($21) :
                      00509 ; ;ic:105:      iTemp79 [k103 lr105:112 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] = @[iTemp90 [k114 lr102:118 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ] + 0x0 {const-unsigned-char literal}]
00026E                00510 _00125_DS_:
00026E C000 FFE9      00511         MOVFF   r0x19, FSR0L
000272 C000 FFF3      00512         MOVFF   r0x1a, PRODL
000276 5000           00513         MOVF    r0x1b, W
000278 EC00 F000      00514         CALL    __gptrget1
                      00515 ; #     MOVWF   r0x1c
                      00516 ; #;;ic:106:    iTemp80 [k104 lr106:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp79 [k103 lr105:112 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] < 0x30 {const-char literal}
                      00517 ; #     MOVF    r0x1c, W
00027C 6E00           00518         MOVWF   r0x1c
00027E 0F80           00519         ADDLW   0x80
000280 0F50           00520         ADDLW   0x50
000282 E300           00521         BNC     _00275_DS_
                      00522 ; ;ic:107:      if iTemp80 [k104 lr106:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto loopExitLbl10($171)
                      00523 ; ;ic:108:      iTemp83 [k107 lr108:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp79 [k103 lr105:112 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] > 0x39 {const-char literal}
000284 5000           00524         MOVF    r0x1c, W
000286 0F80           00525         ADDLW   0x80
000288 0F46           00526         ADDLW   0x46
00028A E200           00527         BC      _00275_DS_
                      00528 ; ;ic:109:      if iTemp83 [k107 lr108:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto loopExitLbl10($171)
                      00529 ; ;ic:110:      iTemp84 [k108 lr110:111 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x1d ] = iTemp27 [k45 lr36:294 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_precision_1_41}[r0x16 ] * 0xa {const-unsigned-char literal}
                      00530 ; ;multiply lit val:0x0a by variable r0x16 and store in r0x1d
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00531 ;       .line   285; stdio/vfprintf.c   precision = 10 * precision + (*ch) - '0';
00028C 5000           00532         MOVF    r0x16, W
00028E 0D0A           00533         MULLW   0x0a
000290 CFF3 F000      00534         MOVFF   PRODL, r0x1d
                      00535 ; ;ic:111:      iTemp87 [k111 lr111:112 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1d ] = (const-char register)iTemp84 [k108 lr110:111 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x1d ]
                      00536 ; ;ic:112:      iTemp88 [k112 lr112:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] = iTemp87 [k111 lr111:112 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1d ] + iTemp79 [k103 lr105:112 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ]
000294 5000           00537         MOVF    r0x1d, W
000296 2600           00538         ADDWF   r0x1c, F
                      00539 ; ;ic:113:      iTemp27 [k45 lr36:294 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_precision_1_41}[r0x16 ] = iTemp88 [k112 lr112:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x1c ] - 0x30 {const-char literal}
000298 0ED0           00540         MOVLW   0xd0
00029A 2400           00541         ADDWF   r0x1c, W
00029C 6E00           00542         MOVWF   r0x16
                      00543 ; ;ic:114:      iTemp90 [k114 lr102:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ] = iTemp90 [k114 lr102:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ] + 0x1 {const-unsigned-char literal}
                      00544 ;       .line   286; stdio/vfprintf.c   ++ch;
00029E 2A00           00545         INCF    r0x19, F
0002A0 E300           00546         BNC     _00365_DS_
0002A2 4A00           00547         INFSNZ  r0x1a, F
0002A4 2A00           00548         INCF    r0x1b, F
                      00549 ; ;ic:115:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] := iTemp90 [k114 lr102:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ]
                      00550 ; ;ic:116:       goto _whilecontinue_2($21)
0002A6                00551 _00365_DS_:
0002A6 D000           00552         BRA     _00125_DS_
                      00553 ; ;ic:117:  loopExitLbl10($171) :
                      00554 ; ;ic:118:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] := iTemp90 [k114 lr102:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}[r0x19 r0x1a r0x1b ]
0002A8                00555 _00275_DS_:
0002A8 C000 F000      00556         MOVFF   r0x19, r0x03
0002AC C000 F000      00557         MOVFF   r0x1a, r0x04
0002B0 C000 F000      00558         MOVFF   r0x1b, r0x05
                      00559 ; ;ic:119:  _iffalse_7($25) :
                      00560 ; ;ic:120:      iTemp92 [k116 lr120:127 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
0002B4                00561 _00129_DS_:
                      00562 ;       .line   291; stdio/vfprintf.c   if (*ch == 'l')
0002B4 C000 FFE9      00563         MOVFF   r0x03, FSR0L
0002B8 C000 FFF3      00564         MOVFF   r0x04, PRODL
0002BC 5000           00565         MOVF    r0x05, W
0002BE EC00 F000      00566         CALL    __gptrget1
                      00567 ; #     MOVWF   r0x19
                      00568 ; #;;ic:121:    iTemp93 [k117 lr121:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp92 [k116 lr120:127 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x6c {const-char literal}
                      00569 ; #     MOVF    r0x19, W
0002C2 6E00           00570         MOVWF   r0x19
0002C4 0A6C           00571         XORLW   0x6c
0002C6 E100           00572         BNZ     _00133_DS_
                      00573 ; ;ic:122:      if iTemp93 [k117 lr121:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_9($29)
                      00574 ; ;ic:123:      iTemp17 [k25 lr26:201 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_flong_1_41}[r0x0c ] := 0x1 {const-unsigned-char literal}
                      00575 ;       .line   293; stdio/vfprintf.c   flong = 1;
0002C8 0E01           00576         MOVLW   0x01
0002CA 6E00           00577         MOVWF   r0x0c
                      00578 ; ;ic:124:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00579 ;       .line   294; stdio/vfprintf.c   ++ch;
0002CC 2A00           00580         INCF    r0x03, F
0002CE E300           00581         BNC     _00368_DS_
0002D0 4A00           00582         INFSNZ  r0x04, F
0002D2 2A00           00583         INCF    r0x05, F
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00584 ; ;ic:125:       goto _ifend_9($30)
0002D4                00585 _00368_DS_:
0002D4 D000           00586         BRA     _00134_DS_
                      00587 ; ;ic:126:  _iffalse_9($29) :
                      00588 ; ;ic:127:      iTemp97 [k121 lr127:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp92 [k116 lr120:127 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x68 {const-char literal}
0002D6                00589 _00133_DS_:
                      00590 ;       .line   296; stdio/vfprintf.c   else if (*ch == 'h')
0002D6 5000           00591         MOVF    r0x19, W
0002D8 0A68           00592         XORLW   0x68
0002DA E100           00593         BNZ     _00134_DS_
                      00594 ; ;ic:128:      if iTemp97 [k121 lr127:128 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _ifend_9($30)
                      00595 ; ;ic:129:      iTemp19 [k29 lr28:209 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fchar_1_41}[r0x0e ] := 0x1 {const-unsigned-char literal}
                      00596 ;       .line   298; stdio/vfprintf.c   fchar = 1;
0002DC 0E01           00597         MOVLW   0x01
0002DE 6E00           00598         MOVWF   r0x0e
                      00599 ; ;ic:130:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00600 ;       .line   299; stdio/vfprintf.c   ++ch;
0002E0 2A00           00601         INCF    r0x03, F
0002E2 E300           00602         BNC     _00134_DS_
0002E4 4A00           00603         INFSNZ  r0x04, F
0002E6 2A00           00604         INCF    r0x05, F
                      00605 ; ;ic:131:  _ifend_9($30) :
                      00606 ; ;ic:132:      iTemp100 [k124 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
0002E8                00607 _00371_DS_:
0002E8                00608 _00134_DS_:
                      00609 ;       .line   302; stdio/vfprintf.c   if (*ch == 'u')
0002E8 C000 FFE9      00610         MOVFF   r0x03, FSR0L
0002EC C000 FFF3      00611         MOVFF   r0x04, PRODL
0002F0 5000           00612         MOVF    r0x05, W
0002F2 EC00 F000      00613         CALL    __gptrget1
                      00614 ; #     MOVWF   r0x19
                      00615 ; #;;ic:133:    iTemp101 [k125 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp100 [k124 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x75 {const-char literal}
                      00616 ; #     MOVF    r0x19, W
0002F6 0A75           00617         XORLW   0x75
0002F8 E100           00618         BNZ     _00136_DS_
                      00619 ; ;ic:134:      if iTemp101 [k125 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_10($32)
                      00620 ; ;ic:135:      iTemp21 [k33 lr30:240 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_nosign_1_41}[r0x10 ] := 0x1 {const-unsigned-char literal}
                      00621 ;       .line   304; stdio/vfprintf.c   nosign = 1;
0002FA 0E01           00622         MOVLW   0x01
0002FC 6E00           00623         MOVWF   r0x10
                      00624 ; ;ic:136:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00625 ;       .line   305; stdio/vfprintf.c   ++ch;
0002FE 2A00           00626         INCF    r0x03, F
000300 E300           00627         BNC     _00136_DS_
000302 4A00           00628         INFSNZ  r0x04, F
000304 2A00           00629         INCF    r0x05, F
                      00630 ; ;ic:137:  _iffalse_10($32) :
                      00631 ; ;ic:138:      iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] = @[iTemp11 [k18 lr16:356 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
000306                00632 _00374_DS_:
000306                00633 _00136_DS_:
                      00634 ;       .line   308; stdio/vfprintf.c   if (*ch == 's')
000306 C000 FFE9      00635         MOVFF   r0x03, FSR0L
00030A C000 FFF3      00636         MOVFF   r0x04, PRODL
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00030E 5000           00637         MOVF    r0x05, W
000310 EC00 F000      00638         CALL    __gptrget1
                      00639 ; #     MOVWF   r0x19
                      00640 ; #;;ic:139:    iTemp105 [k129 lr139:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x73 {const-char literal}
                      00641 ; #     MOVF    r0x19, W
000314 6E00           00642         MOVWF   r0x19
000316 0A73           00643         XORLW   0x73
000318 E100           00644         BNZ     _00160_DS_
                      00645 ; ;ic:140:      if iTemp105 [k129 lr139:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_18($56)
                      00646 ; ;ic:141:      iTemp18 [k27 lr27:186 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fstr_1_41}[r0x0d ] := 0x1 {const-unsigned-char literal}
                      00647 ;       .line   310; stdio/vfprintf.c   fstr = 1;
00031A 0E01           00648         MOVLW   0x01
00031C 6E00           00649         MOVWF   r0x0d
                      00650 ; ;ic:142:      iTemp26 [k43 lr35:289 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _vfprintf_padchar_1_41}[r0x15 ] := 0x20 {const-char literal}
                      00651 ;       .line   312; stdio/vfprintf.c   padchar = ' ';    /* Strings are always space-padded */
00031E 0E20           00652         MOVLW   0x20
000320 6E00           00653         MOVWF   r0x15
                      00654 ; ;ic:143:       goto _ifend_18($57)
000322 D000           00655         BRA     _00161_DS_
                      00656 ; ;ic:144:  _iffalse_18($56) :
                      00657 ; ;ic:145:      iTemp108 [k132 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x78 {const-char literal}
000324                00658 _00160_DS_:
                      00659 ;       .line   315; stdio/vfprintf.c   else if (*ch == 'x')
000324 5000           00660         MOVF    r0x19, W
000326 0A78           00661         XORLW   0x78
000328 E100           00662         BNZ     _00157_DS_
                      00663 ; ;ic:146:      if iTemp108 [k132 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_17($53)
                      00664 ; ;ic:147:      iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] := 0x10 {const-unsigned-char literal}
                      00665 ;       .line   316; stdio/vfprintf.c   radix = 16;
00032A 0E10           00666         MOVLW   0x10
00032C 6E00           00667         MOVWF   r0x11
                      00668 ; ;ic:148:       goto _ifend_18($57)
00032E D000           00669         BRA     _00161_DS_
                      00670 ; ;ic:149:  _iffalse_17($53) :
                      00671 ; ;ic:150:      iTemp111 [k135 lr150:151 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x58 {const-char literal}
000330                00672 _00157_DS_:
                      00673 ;       .line   317; stdio/vfprintf.c   else if (*ch == 'X')
000330 5000           00674         MOVF    r0x19, W
000332 0A58           00675         XORLW   0x58
000334 E100           00676         BNZ     _00154_DS_
                      00677 ; ;ic:151:      if iTemp111 [k135 lr150:151 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_16($50)
                      00678 ; ;ic:152:      iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] := 0x10 {const-unsigned-char literal}
                      00679 ;       .line   319; stdio/vfprintf.c   radix = 16;
000336 0E10           00680         MOVLW   0x10
000338 6E00           00681         MOVWF   r0x11
                      00682 ; ;ic:153:      iTemp23 [k37 lr32:330 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_upcase_1_41}[r0x12 ] := 0x1 {const-unsigned-char literal}
                      00683 ;       .line   320; stdio/vfprintf.c   upcase = 1;
00033A 0E01           00684         MOVLW   0x01
00033C 6E00           00685         MOVWF   r0x12
                      00686 ; ;ic:154:       goto _ifend_18($57)
00033E D000           00687         BRA     _00161_DS_
                      00688 ; ;ic:155:  _iffalse_16($50) :
                      00689 ; ;ic:156:      iTemp114 [k138 lr156:157 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x63 {const-char literal}
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000340                00690 _00154_DS_:
                      00691 ;       .line   322; stdio/vfprintf.c   else if (*ch == 'c')
000340 5000           00692         MOVF    r0x19, W
000342 0A63           00693         XORLW   0x63
000344 E100           00694         BNZ     _00151_DS_
                      00695 ; ;ic:157:      if iTemp114 [k138 lr156:157 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_15($47)
                      00696 ; ;ic:158:      iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] := 0x0 {const-unsigned-char literal}
                      00697 ;       .line   323; stdio/vfprintf.c   radix = 0;
000346 6A00           00698         CLRF    r0x11
                      00699 ; ;ic:159:       goto _ifend_18($57)
000348 D000           00700         BRA     _00161_DS_
                      00701 ; ;ic:160:  _iffalse_15($47) :
                      00702 ; ;ic:161:      iTemp117 [k141 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x6f {const-char literal}
00034A                00703 _00151_DS_:
                      00704 ;       .line   324; stdio/vfprintf.c   else if (*ch == 'o')
00034A 5000           00705         MOVF    r0x19, W
00034C 0A6F           00706         XORLW   0x6f
00034E E100           00707         BNZ     _00148_DS_
                      00708 ; ;ic:162:      if iTemp117 [k141 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_14($44)
                      00709 ; ;ic:163:      iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] := 0x8 {const-unsigned-char literal}
                      00710 ;       .line   325; stdio/vfprintf.c   radix = 8;
000350 0E08           00711         MOVLW   0x08
000352 6E00           00712         MOVWF   r0x11
                      00713 ; ;ic:164:       goto _ifend_18($57)
000354 D000           00714         BRA     _00161_DS_
                      00715 ; ;ic:165:  _iffalse_14($44) :
                      00716 ; ;ic:166:      iTemp120 [k144 lr166:167 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x66 {const-char literal}
000356                00717 _00148_DS_:
                      00718 ;       .line   331; stdio/vfprintf.c   else if (*ch == 'f')
000356 5000           00719         MOVF    r0x19, W
000358 0A66           00720         XORLW   0x66
00035A E100           00721         BNZ     _00145_DS_
                      00722 ; ;ic:167:      if iTemp120 [k144 lr166:167 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_13($41)
                      00723 ; ;ic:168:      iTemp20 [k31 lr29:194 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_ffloat_1_41}[r0x0f ] := 0x1 {const-unsigned-char literal}
                      00724 ;       .line   333; stdio/vfprintf.c   ffloat = 1;
00035C 0E01           00725         MOVLW   0x01
00035E 6E00           00726         MOVWF   r0x0f
                      00727 ; ;ic:169:       goto _ifend_18($57)
000360 D000           00728         BRA     _00161_DS_
                      00729 ; ;ic:170:  _iffalse_13($41) :
                      00730 ; ;ic:171:      iTemp123 [k147 lr171:172 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x64 {const-char literal}
000362                00731 _00145_DS_:
                      00732 ;       .line   337; stdio/vfprintf.c   else if ((*ch == 'd') || (*ch == 'i'))  /* This is the default */
000362 5000           00733         MOVF    r0x19, W
000364 0A64           00734         XORLW   0x64
000366 E000           00735         BZ      _00161_DS_
                      00736 ; ;ic:172:      if iTemp123 [k147 lr171:172 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _ifend_18($57)
                      00737 ; ;ic:173:      iTemp126 [k150 lr173:174 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ] == 0x69 {const-char literal}
000368 5000           00738         MOVF    r0x19, W
00036A 0A69           00739         XORLW   0x69
00036C E000           00740         BZ      _00161_DS_
                      00741 ; ;ic:174:      if iTemp126 [k150 lr173:174 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _ifend_18($57)
                      00742 ; ;ic:175:      if iTemp21 [k33 lr30:240 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_nosign_1_41}[r0x10 ] == 0 goto _iffalse_11($34)
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00743 ;       .line   339; stdio/vfprintf.c   else if (nosign)                        /* %u alone is the same as %ud */
00036E 5000           00744         MOVF    r0x10, W
000370 E000           00745         BZ      _00138_DS_
                      00746 ; ;ic:176:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] - 0x1 {const-unsigned-char literal}
                      00747 ;       .line   340; stdio/vfprintf.c   --ch;
000372 0EFF           00748         MOVLW   0xff
000374 2600           00749         ADDWF   r0x03, F
000376 2200           00750         ADDWFC  r0x04, F
000378 2200           00751         ADDWFC  r0x05, F
                      00752 ; ;ic:177:       goto _ifend_18($57)
00037A D000           00753         BRA     _00161_DS_
                      00754 ; ;ic:178:  _iffalse_11($34) :
                      00755 ; ;ic:179:      send iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ]{argreg = 1}
                      00756 ; ;ic:180:      send iTemp104 [k128 lr138:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x19 ]{argreg = 2}
                      00757 ; ;ic:181:      iTemp130 [k154 lr181:181 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call ___stream_putchar [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* generic* fixed, char fixed) fixed}
00037C                00758 _00138_DS_:
                      00759 ;       .line   347; stdio/vfprintf.c   __stream_putchar (stream, *ch);
00037C 5000           00760         MOVF    r0x19, W
00037E 6EE5           00761         MOVWF   POSTDEC1
000380 5000           00762         MOVF    r0x02, W
000382 6EE5           00763         MOVWF   POSTDEC1
000384 5000           00764         MOVF    r0x01, W
000386 6EE5           00765         MOVWF   POSTDEC1
000388 5000           00766         MOVF    r0x00, W
00038A 6EE5           00767         MOVWF   POSTDEC1
00038C EC00 F000      00768         CALL    ___stream_putchar
000390 0E04           00769         MOVLW   0x04
000392 26E1           00770         ADDWF   FSR1L, F
                      00771 ; ;ic:182:      iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] = iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] + 0x1 {const-unsigned-char literal}
                      00772 ;       .line   348; stdio/vfprintf.c   ++count;
000394 4A00           00773         INFSNZ  r0x09, F
000396 2A00           00774         INCF    r0x0a, F
                      00775 ; ;ic:183:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00776 ;       .line   349; stdio/vfprintf.c   ++ch;
000398 2A00           00777         INCF    r0x03, F
00039A E300           00778         BNC     _00391_DS_
00039C 4A00           00779         INFSNZ  r0x04, F
00039E 2A00           00780         INCF    r0x05, F
                      00781 ; ;ic:184:       goto _whilecontinue_0($111)
0003A0                00782 _00391_DS_:
                      00783 ;       .line   350; stdio/vfprintf.c   continue;
0003A0 D000           00784         BRA     _00215_DS_
                      00785 ; ;ic:185:  _ifend_18($57) :
                      00786 ; ;ic:186:      if iTemp18 [k27 lr27:186 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fstr_1_41}[r0x0d ] == 0 goto _iffalse_27($83)
0003A2                00787 _00161_DS_:
                      00788 ;       .line   353; stdio/vfprintf.c   if (fstr)
0003A2 5000           00789         MOVF    r0x0d, W
0003A4 E000           00790         BZ      _00187_DS_
                      00791 ; ;ic:187:      iTemp134 [k159 lr187:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0d r0x19 r0x1a ] = iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] + 0x3 {const-unsigned-char literal}
                      00792 ;       .line   355; stdio/vfprintf.c   str = va_arg (ap, char *);
0003A6 5000           00793         MOVF    r0x06, W
0003A8 0F03           00794         ADDLW   0x03
0003AA 6E00           00795         MOVWF   r0x0d
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003AC 0E00           00796         MOVLW   0x00
0003AE 2000           00797         ADDWFC  r0x07, W
0003B0 6E00           00798         MOVWF   r0x19
0003B2 0E00           00799         MOVLW   0x00
0003B4 2000           00800         ADDWFC  r0x08, W
0003B6 6E00           00801         MOVWF   r0x1a
                      00802 ; ;ic:188:      iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] := iTemp134 [k159 lr187:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0d r0x19 r0x1a ]
0003B8 C000 F000      00803         MOVFF   r0x0d, r0x06
0003BC C000 F000      00804         MOVFF   r0x19, r0x07
0003C0 C000 F000      00805         MOVFF   r0x1a, r0x08
                      00806 ; ;ic:189:      iTemp135 [k160 lr189:190 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0d r0x19 r0x1a ] = iTemp134 [k159 lr187:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0d r0x19 r0x1a ] - 0x3 {unsigned-char literal}
0003C4 0EFD           00807         MOVLW   0xfd
0003C6 2600           00808         ADDWF   r0x0d, F
0003C8 0EFF           00809         MOVLW   0xff
0003CA 2200           00810         ADDWFC  r0x19, F
0003CC 2200           00811         ADDWFC  r0x1a, F
                      00812 ; ;ic:190:      iTemp136 [k161 lr190:191 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* generic* fixed}[r0x0d r0x19 r0x1a ] = (char generic* generic* fixed)iTemp135 [k160 lr189:190 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0d r0x19 r0x1a ]
                      00813 ; #     MOVF    r0x1a, W
                      00814 ; #     MOVWF   r0x1a
                      00815 ; #     MOVF    r0x1a, W
                      00816 ; #     MOVF    r0x19, W
                      00817 ; #     MOVF    r0x19, W
                      00818 ; #     MOVWF   r0x19
                      00819 ; #     MOVF    r0x19, W
                      00820 ; #     MOVF    r0x0d, W
                      00821 ; #     MOVF    r0x0d, W
                      00822 ; #     MOVWF   r0x0d
                      00823 ; #;;ic:191:    iTemp133 [k157 lr191:295 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ] = @[iTemp136 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* generic* fixed}[r0x0d r0x19 r0x1a ] + 0x0 {const-unsigned-char literal}]
0003CE C000 FFE9      00824         MOVFF   r0x0d, FSR0L
0003D2 C000 FFF3      00825         MOVFF   r0x19, PRODL
0003D6 5000           00826         MOVF    r0x1a, W
0003D8 EC00 F000      00827         CALL    __gptrget3
0003DC 6E00           00828         MOVWF   r0x0d
0003DE CFF3 F000      00829         MOVFF   PRODL, r0x19
0003E2 CFF4 F000      00830         MOVFF   PRODH, r0x1a
                      00831 ; ;ic:192:       goto preHeaderLbl5($159)
0003E6 D000           00832         BRA     _00263_DS_
                      00833 ; ;ic:193:  _iffalse_27($83) :
                      00834 ; ;ic:194:      if iTemp20 [k31 lr29:194 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_ffloat_1_41}[r0x0f ] == 0 goto _iffalse_26($80)
0003E8                00835 _00187_DS_:
                      00836 ;       .line   366; stdio/vfprintf.c   else if (ffloat)
0003E8 5000           00837         MOVF    r0x0f, W
0003EA E000           00838         BZ      _00184_DS_
                      00839 ; ;ic:195:      iTemp133 [k157 lr191:295 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ] = (char generic* fixed)iTemp138 [k164 lr19:356 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{const-char code* fixed}[remat]
                      00840 ;       .line   368; stdio/vfprintf.c   str = (char*)"<NO FLOAT>";
0003EC 0E00           00841         MOVLW   UPPER(__str_0)
0003EE 6E00           00842         MOVWF   r0x1a
0003F0 0E00           00843         MOVLW   HIGH(__str_0)
0003F2 6E00           00844         MOVWF   r0x19
0003F4 0E00           00845         MOVLW   LOW(__str_0)
0003F6 6E00           00846         MOVWF   r0x0d
                      00847 ; ;ic:196:      iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] = iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] + 0x4 {const-unsigned-char literal}
                      00848 ;       .line   369; stdio/vfprintf.c   va_arg (ap, float);
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003F8 0E04           00849         MOVLW   0x04
0003FA 2600           00850         ADDWF   r0x06, F
0003FC 0E00           00851         MOVLW   0x00
0003FE 2200           00852         ADDWFC  r0x07, F
000400 2200           00853         ADDWFC  r0x08, F
                      00854 ; ;ic:197:      iTemp27 [k45 lr36:294 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_precision_1_41}[r0x16 ] := 0xffffffff {const-char literal}
                      00855 ;       .line   371; stdio/vfprintf.c   precision = -1;
000402 6800           00856         SETF    r0x16
                      00857 ; ;ic:198:       goto preHeaderLbl5($159)
000404 D000           00858         BRA     _00263_DS_
                      00859 ; ;ic:199:  _iffalse_26($80) :
                      00860 ; ;ic:200:      iTemp27 [k45 lr36:294 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_precision_1_41}[r0x16 ] := 0xffffffff {const-char literal}
000406                00861 _00184_DS_:
                      00862 ;       .line   378; stdio/vfprintf.c   precision = -1; //FIXME: No support for the precision field on numerals
000406 6800           00863         SETF    r0x16
                      00864 ; ;ic:201:      if iTemp17 [k25 lr26:201 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_flong_1_41}[r0x0c ] == 0 goto _iffalse_22($68)
                      00865 ;       .line   381; stdio/vfprintf.c   if (flong)
000408 5000           00866         MOVF    r0x0c, W
00040A E000           00867         BZ      _00172_DS_
                      00868 ; ;ic:202:      iTemp145 [k172 lr202:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0c r0x0f r0x1b ] = iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] + 0x4 {const-unsigned-char literal}
                      00869 ;       .line   383; stdio/vfprintf.c   val = va_arg (ap, long);
00040C 5000           00870         MOVF    r0x06, W
00040E 0F04           00871         ADDLW   0x04
000410 6E00           00872         MOVWF   r0x0c
000412 0E00           00873         MOVLW   0x00
000414 2000           00874         ADDWFC  r0x07, W
000416 6E00           00875         MOVWF   r0x0f
000418 0E00           00876         MOVLW   0x00
00041A 2000           00877         ADDWFC  r0x08, W
00041C 6E00           00878         MOVWF   r0x1b
                      00879 ; ;ic:203:      iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] := iTemp145 [k172 lr202:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0c r0x0f r0x1b ]
00041E C000 F000      00880         MOVFF   r0x0c, r0x06
000422 C000 F000      00881         MOVFF   r0x0f, r0x07
000426 C000 F000      00882         MOVFF   r0x1b, r0x08
                      00883 ; ;ic:204:      iTemp146 [k173 lr204:205 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0c r0x0f r0x1b ] = iTemp145 [k172 lr202:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0c r0x0f r0x1b ] - 0x4 {unsigned-char literal}
00042A 0EFC           00884         MOVLW   0xfc
00042C 2600           00885         ADDWF   r0x0c, F
00042E 0EFF           00886         MOVLW   0xff
000430 2200           00887         ADDWFC  r0x0f, F
000432 2200           00888         ADDWFC  r0x1b, F
                      00889 ; ;ic:205:      iTemp147 [k174 lr205:206 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int generic* fixed}[r0x0c r0x0f r0x1b ] = (long-int generic* fixed)iTemp146 [k173 lr204:205 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0c r0x0f r0x1b ]
                      00890 ; #     MOVF    r0x1b, W
                      00891 ; #     MOVWF   r0x1b
                      00892 ; #     MOVF    r0x1b, W
                      00893 ; #     MOVF    r0x0f, W
                      00894 ; #     MOVF    r0x0f, W
                      00895 ; #     MOVWF   r0x0f
                      00896 ; #     MOVF    r0x0f, W
                      00897 ; #     MOVF    r0x0c, W
                      00898 ; #     MOVF    r0x0c, W
                      00899 ; #     MOVWF   r0x0c
                      00900 ; #;;ic:206:    iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ] = @[iTemp147 [k174 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{long-int generic* fixed}[r0x0c r0x0f r0x1b ] + 0x0 {const-unsigned-char literal}]
000434 C000 FFE9      00901         MOVFF   r0x0c, FSR0L
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000438 C000 FFF3      00902         MOVFF   r0x0f, PRODL
00043C 5000           00903         MOVF    r0x1b, W
00043E EC00 F000      00904         CALL    __gptrget4
000442 6E00           00905         MOVWF   r0x0c
000444 CFF3 F000      00906         MOVFF   PRODL, r0x0f
000448 CFF4 F000      00907         MOVFF   PRODH, r0x1b
00044C CFE9 F000      00908         MOVFF   FSR0L, r0x1c
                      00909 ; ;ic:207:       goto _ifend_22($69)
000450 D000           00910         BRA     _00173_DS_
                      00911 ; ;ic:208:  _iffalse_22($68) :
                      00912 ; ;ic:209:      if iTemp19 [k29 lr28:209 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fchar_1_41}[r0x0e ] == 0 goto _iffalse_21($65)
000452                00913 _00172_DS_:
                      00914 ;       .line   388; stdio/vfprintf.c   else if (fchar)
000452 5000           00915         MOVF    r0x0e, W
000454 E000           00916         BZ      _00169_DS_
                      00917 ; ;ic:210:      iTemp149 [k176 lr210:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ] = iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] + 0x2 {const-unsigned-char literal}
                      00918 ;       .line   390; stdio/vfprintf.c   val = (char) va_arg (ap, int);  // FIXME: SDCC passes 1-byte char varargs as 2-byte ints...
000456 5000           00919         MOVF    r0x06, W
000458 0F02           00920         ADDLW   0x02
00045A 6E00           00921         MOVWF   r0x0e
00045C 0E00           00922         MOVLW   0x00
00045E 2000           00923         ADDWFC  r0x07, W
000460 6E00           00924         MOVWF   r0x1d
000462 0E00           00925         MOVLW   0x00
000464 2000           00926         ADDWFC  r0x08, W
000466 6E00           00927         MOVWF   r0x1e
                      00928 ; ;ic:211:      iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] := iTemp149 [k176 lr210:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ]
000468 C000 F000      00929         MOVFF   r0x0e, r0x06
00046C C000 F000      00930         MOVFF   r0x1d, r0x07
000470 C000 F000      00931         MOVFF   r0x1e, r0x08
                      00932 ; ;ic:212:      iTemp150 [k177 lr212:213 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ] = iTemp149 [k176 lr210:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ] - 0x2 {unsigned-char literal}
000474 0EFE           00933         MOVLW   0xfe
000476 2600           00934         ADDWF   r0x0e, F
000478 0EFF           00935         MOVLW   0xff
00047A 2200           00936         ADDWFC  r0x1d, F
00047C 2200           00937         ADDWFC  r0x1e, F
                      00938 ; ;ic:213:      iTemp151 [k178 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int generic* fixed}[r0x0e r0x1d r0x1e ] = (int generic* fixed)iTemp150 [k177 lr212:213 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ]
                      00939 ; #     MOVF    r0x1e, W
                      00940 ; #     MOVWF   r0x1e
                      00941 ; #     MOVF    r0x1e, W
                      00942 ; #     MOVF    r0x1d, W
                      00943 ; #     MOVF    r0x1d, W
                      00944 ; #     MOVWF   r0x1d
                      00945 ; #     MOVF    r0x1d, W
                      00946 ; #     MOVF    r0x0e, W
                      00947 ; #     MOVF    r0x0e, W
                      00948 ; #     MOVWF   r0x0e
                      00949 ; #;;ic:214:    iTemp152 [k179 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x0e r0x1d ] = @[iTemp151 [k178 lr213:214 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{int generic* fixed}[r0x0e r0x1d r0x1e ] + 0x0 {const-unsigned-char literal}]
00047E C000 FFE9      00950         MOVFF   r0x0e, FSR0L
000482 C000 FFF3      00951         MOVFF   r0x1d, PRODL
000486 5000           00952         MOVF    r0x1e, W
000488 EC00 F000      00953         CALL    __gptrget2
00048C 6E00           00954         MOVWF   r0x0e
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00955 ; ;ic:215:      iTemp153 [k180 lr215:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0e ] = (char fixed)iTemp152 [k179 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x0e r0x1d ]
                      00956 ; ;ic:216:      iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ] = (long-int fixed)iTemp153 [k180 lr215:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0e ]
00048E C000 F000      00957         MOVFF   r0x0e, r0x0c
000492 6AE8           00958         CLRF    WREG
000494 BE00           00959         BTFSC   r0x0e, 7
000496 0EFF           00960         MOVLW   0xff
000498 6E00           00961         MOVWF   r0x0f
00049A 6E00           00962         MOVWF   r0x1b
00049C 6E00           00963         MOVWF   r0x1c
                      00964 ; ;ic:217:      iTemp155 [k182 lr217:218 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] == 0xa {const-unsigned-char literal}
                      00965 ;       .line   391; stdio/vfprintf.c   if ((radix != 10) || nosign)
00049E 5000           00966         MOVF    r0x11, W
0004A0 0A0A           00967         XORLW   0x0a
0004A2 E100           00968         BNZ     _00162_DS_
                      00969 ; ;ic:218:      if iTemp155 [k182 lr217:218 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iftrue_19($58)
                      00970 ; ;ic:219:      if iTemp21 [k33 lr30:240 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_nosign_1_41}[r0x10 ] == 0 goto _ifend_22($69)
0004A4 5000           00971         MOVF    r0x10, W
0004A6 B4D8           00972         BTFSC   STATUS, 2
0004A8 D000           00973         BRA     _00173_DS_
                      00974 ; ;ic:220:  _iftrue_19($58) :
                      00975 ; ;ic:221:      iTemp156 [k183 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0e ] = (unsigned-char fixed)iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ]
0004AA                00976 _00162_DS_:
                      00977 ;       .line   392; stdio/vfprintf.c   val = (unsigned char) val;    //Avoid unwanted sign extension
0004AA 5000           00978         MOVF    r0x0c, W
0004AC 6E00           00979         MOVWF   r0x0e
                      00980 ; ;ic:222:      iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ] = (long-int fixed)iTemp156 [k183 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0e ]
0004AE C000 F000      00981         MOVFF   r0x0e, r0x0c
0004B2 6A00           00982         CLRF    r0x0f
0004B4 6A00           00983         CLRF    r0x1b
0004B6 6A00           00984         CLRF    r0x1c
                      00985 ; ;ic:223:       goto _ifend_22($69)
0004B8 D000           00986         BRA     _00173_DS_
                      00987 ; ;ic:224:  _iffalse_21($65) :
                      00988 ; ;ic:225:      iTemp158 [k185 lr225:227 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ] = iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] + 0x2 {const-unsigned-char literal}
0004BA                00989 _00169_DS_:
                      00990 ;       .line   399; stdio/vfprintf.c   val = va_arg (ap, int);
0004BA 5000           00991         MOVF    r0x06, W
0004BC 0F02           00992         ADDLW   0x02
0004BE 6E00           00993         MOVWF   r0x0e
0004C0 0E00           00994         MOVLW   0x00
0004C2 2000           00995         ADDWFC  r0x07, W
0004C4 6E00           00996         MOVWF   r0x1d
0004C6 0E00           00997         MOVLW   0x00
0004C8 2000           00998         ADDWFC  r0x08, W
0004CA 6E00           00999         MOVWF   r0x1e
                      01000 ; ;ic:226:      iTemp2 [k6 lr5:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vfprintf_ap_1_40}[r0x06 r0x07 r0x08 ] := iTemp158 [k185 lr225:227 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ]
0004CC C000 F000      01001         MOVFF   r0x0e, r0x06
0004D0 C000 F000      01002         MOVFF   r0x1d, r0x07
0004D4 C000 F000      01003         MOVFF   r0x1e, r0x08
                      01004 ; ;ic:227:      iTemp159 [k186 lr227:228 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ] = iTemp158 [k185 lr225:227 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ] - 0x2 {unsigned-char literal}
0004D8 0EFE           01005         MOVLW   0xfe
0004DA 2600           01006         ADDWF   r0x0e, F
0004DC 0EFF           01007         MOVLW   0xff
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004DE 2200           01008         ADDWFC  r0x1d, F
0004E0 2200           01009         ADDWFC  r0x1e, F
                      01010 ; ;ic:228:      iTemp160 [k187 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int generic* fixed}[r0x0e r0x1d r0x1e ] = (int generic* fixed)iTemp159 [k186 lr227:228 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}[r0x0e r0x1d r0x1e ]
                      01011 ; #     MOVF    r0x1e, W
                      01012 ; #     MOVWF   r0x1e
                      01013 ; #     MOVF    r0x1e, W
                      01014 ; #     MOVF    r0x1d, W
                      01015 ; #     MOVF    r0x1d, W
                      01016 ; #     MOVWF   r0x1d
                      01017 ; #     MOVF    r0x1d, W
                      01018 ; #     MOVF    r0x0e, W
                      01019 ; #     MOVF    r0x0e, W
                      01020 ; #     MOVWF   r0x0e
                      01021 ; #;;ic:229:    iTemp161 [k188 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x0e r0x1d ] = @[iTemp160 [k187 lr228:229 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{int generic* fixed}[r0x0e r0x1d r0x1e ] + 0x0 {const-unsigned-char literal}]
0004E2 C000 FFE9      01022         MOVFF   r0x0e, FSR0L
0004E6 C000 FFF3      01023         MOVFF   r0x1d, PRODL
0004EA 5000           01024         MOVF    r0x1e, W
0004EC EC00 F000      01025         CALL    __gptrget2
0004F0 6E00           01026         MOVWF   r0x0e
0004F2 CFF3 F000      01027         MOVFF   PRODL, r0x1d
                      01028 ; ;ic:230:      iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ] = (long-int fixed)iTemp161 [k188 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x0e r0x1d ]
0004F6 C000 F000      01029         MOVFF   r0x0e, r0x0c
0004FA C000 F000      01030         MOVFF   r0x1d, r0x0f
0004FE 6AE8           01031         CLRF    WREG
000500 BE00           01032         BTFSC   r0x1d, 7
000502 0EFF           01033         MOVLW   0xff
000504 6E00           01034         MOVWF   r0x1b
000506 6E00           01035         MOVWF   r0x1c
                      01036 ; ;ic:231:      iTemp163 [k190 lr231:232 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] == 0xa {const-unsigned-char literal}
                      01037 ;       .line   400; stdio/vfprintf.c   if ((radix != 10) || nosign)
000508 5000           01038         MOVF    r0x11, W
00050A 0A0A           01039         XORLW   0x0a
00050C E100           01040         BNZ     _00165_DS_
                      01041 ; ;ic:232:      if iTemp163 [k190 lr231:232 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iftrue_20($61)
                      01042 ; ;ic:233:      if iTemp21 [k33 lr30:240 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_nosign_1_41}[r0x10 ] == 0 goto _ifend_22($69)
00050E 5000           01043         MOVF    r0x10, W
000510 E000           01044         BZ      _00173_DS_
                      01045 ; ;ic:234:  _iftrue_20($61) :
                      01046 ; ;ic:235:      iTemp164 [k191 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x0e r0x1d ] = (unsigned-int fixed)iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ]
000512                01047 _00165_DS_:
                      01048 ;       .line   401; stdio/vfprintf.c   val = (unsigned int) val;   //Avoid unwanted sign extension
000512 5000           01049         MOVF    r0x0c, W
000514 6E00           01050         MOVWF   r0x0e
000516 5000           01051         MOVF    r0x0f, W
000518 6E00           01052         MOVWF   r0x1d
                      01053 ; ;ic:236:      iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ] = (long-int fixed)iTemp164 [k191 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x0e r0x1d ]
00051A C000 F000      01054         MOVFF   r0x0e, r0x0c
00051E C000 F000      01055         MOVFF   r0x1d, r0x0f
000522 6A00           01056         CLRF    r0x1b
000524 6A00           01057         CLRF    r0x1c
                      01058 ; ;ic:237:  _ifend_22($69) :
                      01059 ; ;ic:238:      iTemp133 [k157 lr191:295 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ] = (char generic* fixed)iTemp167 [k195 lr18:356 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
000526                01060 _00173_DS_:
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01061 ;       .line   407; stdio/vfprintf.c   str = buffer + 1; //Reserve space for a forced '+'
000526 0E00           01062         MOVLW   HIGH(_vfprintf_buffer_1_41 + 1)
000528 6E00           01063         MOVWF   r0x19
00052A 0E00           01064         MOVLW   LOW(_vfprintf_buffer_1_41 + 1)
00052C 6E00           01065         MOVWF   r0x0d
00052E 0E80           01066         MOVLW   0x80
000530 6E00           01067         MOVWF   r0x1a
                      01068 ; ;ic:239:      if iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] == 0 goto _iffalse_25($77)
                      01069 ;       .line   408; stdio/vfprintf.c   if (radix)
000532 5000           01070         MOVF    r0x11, W
000534 B4D8           01071         BTFSC   STATUS, 2
000536 D000           01072         BRA     _00181_DS_
                      01073 ; ;ic:240:      if iTemp21 [k33 lr30:240 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_nosign_1_41}[r0x10 ] == 0 goto _iffalse_23($71)
                      01074 ;       .line   410; stdio/vfprintf.c   if (nosign)
000538 5000           01075         MOVF    r0x10, W
00053A E000           01076         BZ      _00175_DS_
                      01077 ; ;ic:241:      send iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ]{argreg = 1}
                      01078 ; ;ic:242:      send iTemp167 [k195 lr18:356 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]{argreg = 2}
                      01079 ; ;ic:243:      send iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ]{argreg = 3}
                      01080 ; ;ic:244:      iTemp171 [k203 lr244:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ultoa [k197 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
                      01081 ;       .line   411; stdio/vfprintf.c   ultoa (val, buffer + 1, radix);
00053C 5000           01082         MOVF    r0x11, W
00053E 6EE5           01083         MOVWF   POSTDEC1
000540 0E00           01084         MOVLW   HIGH(_vfprintf_buffer_1_41 + 1)
000542 6EE5           01085         MOVWF   POSTDEC1
000544 0E00           01086         MOVLW   LOW(_vfprintf_buffer_1_41 + 1)
000546 6EE5           01087         MOVWF   POSTDEC1
000548 5000           01088         MOVF    r0x1c, W
00054A 6EE5           01089         MOVWF   POSTDEC1
00054C 5000           01090         MOVF    r0x1b, W
00054E 6EE5           01091         MOVWF   POSTDEC1
000550 5000           01092         MOVF    r0x0f, W
000552 6EE5           01093         MOVWF   POSTDEC1
000554 5000           01094         MOVF    r0x0c, W
000556 6EE5           01095         MOVWF   POSTDEC1
000558 EC00 F000      01096         CALL    _ultoa
00055C 0E07           01097         MOVLW   0x07
00055E 26E1           01098         ADDWF   FSR1L, F
                      01099 ; ;ic:245:       goto _ifend_23($72)
000560 D000           01100         BRA     _00176_DS_
                      01101 ; ;ic:246:  _iffalse_23($71) :
                      01102 ; ;ic:247:      send iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ]{argreg = 1}
                      01103 ; ;ic:248:      send iTemp167 [k195 lr18:356 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]{argreg = 2}
                      01104 ; ;ic:249:      send iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ]{argreg = 3}
                      01105 ; ;ic:250:      iTemp174 [k210 lr250:250 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ltoa [k204 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( long-int fixed, char near* fixed, unsigned-char fixed) fixed}
000562                01106 _00175_DS_:
                      01107 ;       .line   413; stdio/vfprintf.c   ltoa (val, buffer + 1, radix);
000562 5000           01108         MOVF    r0x11, W
000564 6EE5           01109         MOVWF   POSTDEC1
000566 0E00           01110         MOVLW   HIGH(_vfprintf_buffer_1_41 + 1)
000568 6EE5           01111         MOVWF   POSTDEC1
00056A 0E00           01112         MOVLW   LOW(_vfprintf_buffer_1_41 + 1)
00056C 6EE5           01113         MOVWF   POSTDEC1
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00056E 5000           01114         MOVF    r0x1c, W
000570 6EE5           01115         MOVWF   POSTDEC1
000572 5000           01116         MOVF    r0x1b, W
000574 6EE5           01117         MOVWF   POSTDEC1
000576 5000           01118         MOVF    r0x0f, W
000578 6EE5           01119         MOVWF   POSTDEC1
00057A 5000           01120         MOVF    r0x0c, W
00057C 6EE5           01121         MOVWF   POSTDEC1
00057E EC00 F000      01122         CALL    _ltoa
000582 0E07           01123         MOVLW   0x07
000584 26E1           01124         ADDWF   FSR1L, F
                      01125 ; ;ic:251:  _ifend_23($72) :
                      01126 ; ;ic:252:      if iTemp28 [k47 lr37:252 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_printsign_1_41}[r0x17 ] == 0 goto preHeaderLbl5($159)
000586                01127 _00176_DS_:
                      01128 ;       .line   415; stdio/vfprintf.c   if (printsign && (*str != '-'))
000586 5000           01129         MOVF    r0x17, W
000588 E000           01130         BZ      _00263_DS_
                      01131 ; ;ic:253:      iTemp176 [k212 lr253:254 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ] = @[iTemp133 [k157 lr191:295 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ] + 0x0 {const-unsigned-char literal}]
00058A C000 FFE9      01132         MOVFF   r0x0d, FSR0L
00058E C000 FFF3      01133         MOVFF   r0x19, PRODL
000592 5000           01134         MOVF    r0x1a, W
000594 EC00 F000      01135         CALL    __gptrget1
                      01136 ; #     MOVWF   r0x0e
                      01137 ; #;;ic:254:    iTemp177 [k213 lr254:255 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp176 [k212 lr253:254 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ] == 0x2d {const-char literal}
                      01138 ; #     MOVF    r0x0e, W
000598 0A2D           01139         XORLW   0x2d
00059A E000           01140         BZ      _00263_DS_
                      01141 ; ;ic:255:      if iTemp177 [k213 lr254:255 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($159)
                      01142 ; ;ic:256:      iTemp133 [k157 lr191:295 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ] = iTemp133 [k157 lr191:295 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ] - 0x1 {const-unsigned-char literal}
                      01143 ;       .line   417; stdio/vfprintf.c   --str;
00059C 0EFF           01144         MOVLW   0xff
00059E 2600           01145         ADDWF   r0x0d, F
0005A0 2200           01146         ADDWFC  r0x19, F
0005A2 2200           01147         ADDWFC  r0x1a, F
                      01148 ; ;ic:257:      *(iTemp133 [k157 lr191:295 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ]) := iTemp29 [k49 lr38:257 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _vfprintf_positivechar_1_41}[r0x18 ]
                      01149 ;       .line   418; stdio/vfprintf.c   *str = positivechar;
0005A4 C000 FFE5      01150         MOVFF   r0x18, POSTDEC1
0005A8 C000 FFE9      01151         MOVFF   r0x0d, FSR0L
0005AC C000 FFF3      01152         MOVFF   r0x19, PRODL
0005B0 5000           01153         MOVF    r0x1a, W
0005B2 EC00 F000      01154         CALL    __gptrput1
                      01155 ; ;ic:258:       goto preHeaderLbl5($159)
0005B6 D000           01156         BRA     _00263_DS_
                      01157 ; ;ic:259:  _iffalse_25($77) :
                      01158 ; ;ic:260:      iTemp181 [k217 lr260:261 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0c ] = (unsigned-char fixed)iTemp144 [k170 lr206:260 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{long-int fixed}{ sir@ _vfprintf_val_1_41}[r0x0c r0x0f r0x1b r0x1c ]
                      01159 ; ;ic:261:      *(iTemp133 [k157 lr191:295 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ]) := iTemp181 [k217 lr260:261 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0c ]
0005B8                01160 _00181_DS_:
                      01161 ;       .line   424; stdio/vfprintf.c   *str = (unsigned char) val;
0005B8 C000 FFE5      01162         MOVFF   r0x0c, POSTDEC1
0005BC C000 FFE9      01163         MOVFF   r0x0d, FSR0L
0005C0 C000 FFF3      01164         MOVFF   r0x19, PRODL
0005C4 5000           01165         MOVF    r0x1a, W
0005C6 EC00 F000      01166         CALL    __gptrput1
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01167 ; ;ic:262:      iTemp182 [k218 lr262:263 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0c r0x0e r0x0f ] = iTemp133 [k157 lr191:295 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ] + 0x1 {const-unsigned-char literal}
                      01168 ;       .line   425; stdio/vfprintf.c   *(str + 1) = '\0';
0005CA 5000           01169         MOVF    r0x0d, W
0005CC 0F01           01170         ADDLW   0x01
0005CE 6E00           01171         MOVWF   r0x0c
0005D0 0E00           01172         MOVLW   0x00
0005D2 2000           01173         ADDWFC  r0x19, W
0005D4 6E00           01174         MOVWF   r0x0e
0005D6 0E00           01175         MOVLW   0x00
0005D8 2000           01176         ADDWFC  r0x1a, W
                      01177 ; ;ic:263:      *(iTemp182 [k218 lr262:263 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0c r0x0e r0x0f ]) := 0x0 {const-char literal}
0005DA 6AE5           01178         CLRF    POSTDEC1
0005DC C000 FFE9      01179         MOVFF   r0x0c, FSR0L
0005E0 C000 FFF3      01180         MOVFF   r0x0e, PRODL
0005E4 EC00 F000      01181         CALL    __gptrput1
                      01182 ; ;ic:264:  preHeaderLbl5($159) :
                      01183 ; ;ic:265:      iTemp186 [k223 lr265:274 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_str1_1_41}[r0x0c r0x0e r0x0f ] := iTemp133 [k157 lr191:295 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ]
0005E8                01184 _00263_DS_:
                      01185 ;       .line   432; stdio/vfprintf.c   while (fieldwidth && *str1)
0005E8 C000 F000      01186         MOVFF   r0x0d, r0x0c
0005EC C000 F000      01187         MOVFF   r0x19, r0x0e
0005F0 C000 F000      01188         MOVFF   r0x1a, r0x0f
                      01189 ; ;ic:266:      iTemp187 [k224 lr266:279 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x10 ] := iTemp24 [k39 lr33:297 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ]
0005F4 C000 F000      01190         MOVFF   r0x13, r0x10
                      01191 ; ;ic:268:  _whilecontinue_3($86) :
                      01192 ; ;ic:269:      if iTemp187 [k224 lr266:279 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x10 ] == 0 goto loopExitLbl11($172)
0005F8                01193 _00190_DS_:
0005F8 5000           01194         MOVF    r0x10, W
0005FA E000           01195         BZ      _00276_DS_
                      01196 ; ;ic:270:      iTemp185 [k222 lr270:271 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x17 ] = @[iTemp186 [k223 lr265:274 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_str1_1_41}[r0x0c r0x0e r0x0f ] + 0x0 {const-unsigned-char literal}]
0005FC C000 FFE9      01197         MOVFF   r0x0c, FSR0L
000600 C000 FFF3      01198         MOVFF   r0x0e, PRODL
000604 5000           01199         MOVF    r0x0f, W
000606 EC00 F000      01200         CALL    __gptrget1
00060A 6E00           01201         MOVWF   r0x17
                      01202 ; ;ic:271:      if iTemp185 [k222 lr270:271 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x17 ] == 0 goto loopExitLbl11($172)
00060C 5000           01203         MOVF    r0x17, W
00060E E000           01204         BZ      _00276_DS_
                      01205 ; ;ic:272:      iTemp186 [k223 lr265:274 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_str1_1_41}[r0x0c r0x0e r0x0f ] = iTemp186 [k223 lr265:274 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_str1_1_41}[r0x0c r0x0e r0x0f ] + 0x1 {const-unsigned-char literal}
                      01206 ;       .line   434; stdio/vfprintf.c   ++str1;
000610 2A00           01207         INCF    r0x0c, F
000612 E300           01208         BNC     _00398_DS_
000614 4A00           01209         INFSNZ  r0x0e, F
000616 2A00           01210         INCF    r0x0f, F
                      01211 ; ;ic:273:      iTemp187 [k224 lr266:279 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x10 ] = iTemp187 [k224 lr266:279 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x10 ] - 0x1 {const-unsigned-char literal}
000618                01212 _00398_DS_:
                      01213 ;       .line   435; stdio/vfprintf.c   --fieldwidth;
000618 0600           01214         DECF    r0x10, F
                      01215 ; ;ic:274:       goto _whilecontinue_3($86)
00061A D000           01216         BRA     _00190_DS_
                      01217 ; ;ic:275:  loopExitLbl11($172) :
                      01218 ; ;ic:276:      iTemp24 [k39 lr33:297 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] := iTemp187 [k224 lr266:279 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x10 ]
00061C                01219 _00276_DS_:
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00061C C000 F000      01220         MOVFF   r0x10, r0x13
                      01221 ; ;ic:277:      if iTemp25 [k41 lr34:333 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_lalign_1_41}[r0x14 ] != 0 goto preHeaderLbl7($166)
                      01222 ;       .line   438; stdio/vfprintf.c   if (!lalign)
000620 5000           01223         MOVF    r0x14, W
000622 E100           01224         BNZ     _00270_DS_
                      01225 ; ;ic:278:      iTemp189 [k226 lr278:291 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0c r0x0e ] := iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ]
                      01226 ;       .line   440; stdio/vfprintf.c   while (fieldwidth)
000624 C000 F000      01227         MOVFF   r0x09, r0x0c
000628 C000 F000      01228         MOVFF   r0x0a, r0x0e
                      01229 ; ;ic:279:      iTemp190 [k227 lr279:292 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0f ] := iTemp187 [k224 lr266:279 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x10 ]
00062C C000 F000      01230         MOVFF   r0x10, r0x0f
                      01231 ; ;ic:281:  _whilecontinue_4($89) :
                      01232 ; ;ic:282:      if iTemp190 [k227 lr279:292 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0f ] == 0 goto loopExitLbl12($173)
000630                01233 _00193_DS_:
000630 5000           01234         MOVF    r0x0f, W
000632 E000           01235         BZ      _00277_DS_
                      01236 ; ;ic:283:      send iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ]{argreg = 1}
                      01237 ; ;ic:284:      send iTemp26 [k43 lr35:289 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _vfprintf_padchar_1_41}[r0x15 ]{argreg = 2}
                      01238 ; ;ic:285:      iTemp188 [k225 lr285:285 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call ___stream_putchar [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* generic* fixed, char fixed) fixed}
                      01239 ;       .line   442; stdio/vfprintf.c   __stream_putchar (stream, padchar);
000634 5000           01240         MOVF    r0x15, W
000636 6EE5           01241         MOVWF   POSTDEC1
000638 5000           01242         MOVF    r0x02, W
00063A 6EE5           01243         MOVWF   POSTDEC1
00063C 5000           01244         MOVF    r0x01, W
00063E 6EE5           01245         MOVWF   POSTDEC1
000640 5000           01246         MOVF    r0x00, W
000642 6EE5           01247         MOVWF   POSTDEC1
000644 EC00 F000      01248         CALL    ___stream_putchar
000648 0E04           01249         MOVLW   0x04
00064A 26E1           01250         ADDWF   FSR1L, F
                      01251 ; ;ic:286:      iTemp189 [k226 lr278:291 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0c r0x0e ] = iTemp189 [k226 lr278:291 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0c r0x0e ] + 0x1 {const-unsigned-char literal}
                      01252 ;       .line   443; stdio/vfprintf.c   ++count;
00064C 4A00           01253         INFSNZ  r0x0c, F
00064E 2A00           01254         INCF    r0x0e, F
                      01255 ; ;ic:287:      iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] := iTemp189 [k226 lr278:291 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0c r0x0e ]
                      01256 ; ;ic:288:      iTemp190 [k227 lr279:292 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0f ] = iTemp190 [k227 lr279:292 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0f ] - 0x1 {const-unsigned-char literal}
                      01257 ;       .line   444; stdio/vfprintf.c   --fieldwidth;
000650 0600           01258         DECF    r0x0f, F
                      01259 ; ;ic:289:       goto _whilecontinue_4($89)
000652 D000           01260         BRA     _00193_DS_
                      01261 ; ;ic:290:  loopExitLbl12($173) :
                      01262 ; ;ic:291:      iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] := iTemp189 [k226 lr278:291 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0c r0x0e ]
000654                01263 _00277_DS_:
                      01264 ;       .line   448; stdio/vfprintf.c   while (*str
000654 C000 F000      01265         MOVFF   r0x0c, r0x09
000658 C000 F000      01266         MOVFF   r0x0e, r0x0a
                      01267 ; ;ic:292:      iTemp24 [k39 lr33:297 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] := iTemp190 [k227 lr279:292 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0f ]
00065C C000 F000      01268         MOVFF   r0x0f, r0x13
                      01269 ; ;ic:293:  preHeaderLbl7($166) :
                      01270 ; ;ic:294:      iTemp196 [k233 lr294:330 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0c ] := iTemp27 [k45 lr36:294 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_precision_1_41}[r0x16 ]
000660                01271 _00270_DS_:
000660 C000 F000      01272         MOVFF   r0x16, r0x0c
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01273 ; ;ic:295:      iTemp204 [k243 lr295:330 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0d r0x0e r0x0f ] := iTemp133 [k157 lr191:295 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vfprintf_str_1_41}[r0x0d r0x19 r0x1a ]
000664 C000 F000      01274         MOVFF   r0x0d, r0x0d
000668 C000 F000      01275         MOVFF   r0x19, r0x0e
00066C C000 F000      01276         MOVFF   r0x1a, r0x0f
                      01277 ; ;ic:296:      iTemp205 [k244 lr296:334 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x10 r0x15 ] := iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ]
000670 C000 F000      01278         MOVFF   r0x09, r0x10
000674 C000 F000      01279         MOVFF   r0x0a, r0x15
                      01280 ; ;ic:297:      iTemp207 [k246 lr297:335 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] := iTemp24 [k39 lr33:297 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ]
                      01281 ; ;ic:299:  _whilecontinue_5($100) :
                      01282 ; ;ic:300:      iTemp192 [k229 lr300:301 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x16 ] = @[iTemp204 [k243 lr295:330 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0d r0x0e r0x0f ] + 0x0 {const-unsigned-char literal}]
000678                01283 _00204_DS_:
                      01284 ;       .line   450; stdio/vfprintf.c   && (!~precision || precision--)
000678 C000 FFE9      01285         MOVFF   r0x0d, FSR0L
00067C C000 FFF3      01286         MOVFF   r0x0e, PRODL
000680 5000           01287         MOVF    r0x0f, W
000682 EC00 F000      01288         CALL    __gptrget1
000686 6E00           01289         MOVWF   r0x16
                      01290 ; ;ic:301:      if iTemp192 [k229 lr300:301 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x16 ] == 0 goto loopExitLbl13($174)
000688 5000           01291         MOVF    r0x16, W
00068A B4D8           01292         BTFSC   STATUS, 2
00068C D000           01293         BRA     _00278_DS_
                      01294 ; ;ic:302:      iTemp193 [k230 lr302:303 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x16 r0x17 ] = (int fixed)iTemp196 [k233 lr294:330 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0c ]
00068E C000 F000      01295         MOVFF   r0x0c, r0x16
000692 6A00           01296         CLRF    r0x17
                      01297 ; ;ic:303:      iTemp194 [k231 lr303:304 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x16 r0x17 ] = ~ iTemp193 [k230 lr302:303 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x16 r0x17 ]
000694 1E00           01298         COMF    r0x16, F
000696 1E00           01299         COMF    r0x17, F
                      01300 ; ;ic:304:      if iTemp194 [k231 lr303:304 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x16 r0x17 ] == 0 goto _whilebody_5($101)
000698 5000           01301         MOVF    r0x16, W
00069A 1000           01302         IORWF   r0x17, W
00069C E000           01303         BZ      _00205_DS_
                      01304 ; ;ic:305:      iTemp195 [k232 lr305:307 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-char fixed}[r0x16 ] := iTemp196 [k233 lr294:330 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0c ]
00069E C000 F000      01305         MOVFF   r0x0c, r0x16
                      01306 ; ;ic:306:      iTemp196 [k233 lr294:330 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0c ] = iTemp196 [k233 lr294:330 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x0c ] - 0x1 {const-unsigned-char literal}
0006A2 0600           01307         DECF    r0x0c, F
                      01308 ; ;ic:307:      if iTemp195 [k232 lr305:307 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-char fixed}[r0x16 ] == 0 goto loopExitLbl13($174)
0006A4 5000           01309         MOVF    r0x16, W
0006A6 E000           01310         BZ      _00278_DS_
                      01311 ; ;ic:308:  _whilebody_5($101) :
                      01312 ; ;ic:309:      iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] = @[iTemp204 [k243 lr295:330 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0d r0x0e r0x0f ] + 0x0 {const-unsigned-char literal}]
0006A8                01313 _00205_DS_:
                      01314 ;       .line   454; stdio/vfprintf.c   radix = *str;
0006A8 C000 FFE9      01315         MOVFF   r0x0d, FSR0L
0006AC C000 FFF3      01316         MOVFF   r0x0e, PRODL
0006B0 5000           01317         MOVF    r0x0f, W
0006B2 EC00 F000      01318         CALL    __gptrget1
0006B6 6E00           01319         MOVWF   r0x11
                      01320 ; ;ic:310:      if iTemp23 [k37 lr32:330 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_upcase_1_41}[r0x12 ] == 0 goto _iffalse_29($95)
                      01321 ;       .line   455; stdio/vfprintf.c   if (upcase)
0006B8 5000           01322         MOVF    r0x12, W
0006BA E000           01323         BZ      _00199_DS_
                      01324 ; ;ic:311:      send iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ]{argreg = 1}
                      01325 ; ;ic:312:      iTemp199 [k238 lr312:313 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x16 ] = call _islower [k236 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( unsigned-char fixed) fixed}
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01326 ;       .line   457; stdio/vfprintf.c   radix = toupper (radix);
0006BC 5000           01327         MOVF    r0x11, W
0006BE 6EE5           01328         MOVWF   POSTDEC1
0006C0 EC00 F000      01329         CALL    _islower
0006C4 6E00           01330         MOVWF   r0x16
0006C6 52E6           01331         MOVF    POSTINC1, F
                      01332 ; ;ic:313:      if iTemp199 [k238 lr312:313 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x16 ] == 0 goto iTempLbl0($116)
0006C8 5000           01333         MOVF    r0x16, W
0006CA E000           01334         BZ      _00220_DS_
                      01335 ; ;ic:314:      iTemp201 [k240 lr314:315 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x16 ] = (char register)iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ]
0006CC 5000           01336         MOVF    r0x11, W
0006CE 6E00           01337         MOVWF   r0x16
                      01338 ; ;ic:315:      iTemp200 [k239 lr315:320 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x16 ] = iTemp201 [k240 lr314:315 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x16 ] & 0xffffffdf {char literal}
0006D0 9A00           01339         BCF     r0x16, 5
                      01340 ; ;ic:316:       goto iTempLbl1($117)
0006D2 D000           01341         BRA     _00221_DS_
                      01342 ; ;ic:317:  iTempLbl0($116) :
                      01343 ; ;ic:318:      iTemp200 [k239 lr315:320 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x16 ] := iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ]
0006D4                01344 _00220_DS_:
0006D4 C000 F000      01345         MOVFF   r0x11, r0x16
                      01346 ; ;ic:319:  iTempLbl1($117) :
                      01347 ; ;ic:320:      iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ] := iTemp200 [k239 lr315:320 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x16 ]
0006D8                01348 _00221_DS_:
0006D8 C000 F000      01349         MOVFF   r0x16, r0x11
                      01350 ; ;ic:321:  _iffalse_29($95) :
                      01351 ; ;ic:322:      send iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ]{argreg = 1}
                      01352 ; ;ic:323:      send iTemp22 [k35 lr31:323 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_radix_1_41}[r0x11 ]{argreg = 2}
                      01353 ; ;ic:324:      iTemp203 [k242 lr324:324 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call ___stream_putchar [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* generic* fixed, char fixed) fixed}
0006DC                01354 _00199_DS_:
                      01355 ;       .line   459; stdio/vfprintf.c   __stream_putchar (stream, radix);
0006DC 5000           01356         MOVF    r0x11, W
0006DE 6EE5           01357         MOVWF   POSTDEC1
0006E0 5000           01358         MOVF    r0x02, W
0006E2 6EE5           01359         MOVWF   POSTDEC1
0006E4 5000           01360         MOVF    r0x01, W
0006E6 6EE5           01361         MOVWF   POSTDEC1
0006E8 5000           01362         MOVF    r0x00, W
0006EA 6EE5           01363         MOVWF   POSTDEC1
0006EC EC00 F000      01364         CALL    ___stream_putchar
0006F0 0E04           01365         MOVLW   0x04
0006F2 26E1           01366         ADDWF   FSR1L, F
                      01367 ; ;ic:325:      iTemp204 [k243 lr295:330 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0d r0x0e r0x0f ] = iTemp204 [k243 lr295:330 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0d r0x0e r0x0f ] + 0x1 {const-unsigned-char literal}
                      01368 ;       .line   460; stdio/vfprintf.c   ++str;
0006F4 2A00           01369         INCF    r0x0d, F
0006F6 E300           01370         BNC     _00400_DS_
0006F8 4A00           01371         INFSNZ  r0x0e, F
0006FA 2A00           01372         INCF    r0x0f, F
                      01373 ; ;ic:326:      iTemp205 [k244 lr296:334 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x10 r0x15 ] = iTemp205 [k244 lr296:334 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x10 r0x15 ] + 0x1 {const-unsigned-char literal}
0006FC                01374 _00400_DS_:
                      01375 ;       .line   461; stdio/vfprintf.c   ++count;
0006FC 4A00           01376         INFSNZ  r0x10, F
0006FE 2A00           01377         INCF    r0x15, F
                      01378 ; ;ic:327:      iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] := iTemp205 [k244 lr296:334 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x10 r0x15 ]
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01379 ; ;ic:328:      if iTemp207 [k246 lr297:335 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] == 0 goto _whilecontinue_5($100)
                      01380 ;       .line   462; stdio/vfprintf.c   if (fieldwidth)
000700 5000           01381         MOVF    r0x13, W
000702 B4D8           01382         BTFSC   STATUS, 2
000704 D000           01383         BRA     _00204_DS_
                      01384 ; ;ic:329:      iTemp207 [k246 lr297:335 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] = iTemp207 [k246 lr297:335 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ] - 0x1 {const-unsigned-char literal}
                      01385 ;       .line   464; stdio/vfprintf.c   fieldwidth--;
000706 0600           01386         DECF    r0x13, F
                      01387 ; ;ic:330:       goto _whilecontinue_5($100)
000708 D000           01388         BRA     _00204_DS_
                      01389 ; ;ic:331:  loopExitLbl13($174) :
                      01390 ; ;ic:332:      iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] := iTemp205 [k244 lr296:334 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x10 r0x15 ]
00070A                01391 _00278_DS_:
00070A C000 F000      01392         MOVFF   r0x10, r0x09
00070E C000 F000      01393         MOVFF   r0x15, r0x0a
                      01394 ; ;ic:333:      if iTemp25 [k41 lr34:333 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_lalign_1_41}[r0x14 ] == 0 goto _ifend_32($110)
                      01395 ;       .line   469; stdio/vfprintf.c   if (lalign)
000712 5000           01396         MOVF    r0x14, W
000714 E000           01397         BZ      _00214_DS_
                      01398 ; ;ic:334:      iTemp209 [k248 lr334:353 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ _vfprintf_count_1_41}[r0x0c r0x0d ] := iTemp205 [k244 lr296:334 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x10 r0x15 ]
                      01399 ;       .line   471; stdio/vfprintf.c   while (fieldwidth)
000716 C000 F000      01400         MOVFF   r0x10, r0x0c
00071A C000 F000      01401         MOVFF   r0x15, r0x0d
                      01402 ; ;ic:335:      iTemp210 [k249 lr335:345 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0e ] := iTemp207 [k246 lr297:335 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x13 ]
00071E C000 F000      01403         MOVFF   r0x13, r0x0e
                      01404 ; ;ic:337:  _whilecontinue_6($103) :
                      01405 ; ;ic:338:      if iTemp210 [k249 lr335:345 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0e ] == 0 goto loopExitLbl14($175)
000722                01406 _00207_DS_:
000722 5000           01407         MOVF    r0x0e, W
000724 E000           01408         BZ      _00279_DS_
                      01409 ; ;ic:339:      send iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ]{argreg = 1}
                      01410 ; ;ic:340:      send 0x20 {const-char literal}{argreg = 2}
                      01411 ; ;ic:341:      iTemp208 [k247 lr341:341 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call ___stream_putchar [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* generic* fixed, char fixed) fixed}
                      01412 ;       .line   473; stdio/vfprintf.c   __stream_putchar (stream, ' ');
000726 0E20           01413         MOVLW   0x20
000728 6EE5           01414         MOVWF   POSTDEC1
00072A 5000           01415         MOVF    r0x02, W
00072C 6EE5           01416         MOVWF   POSTDEC1
00072E 5000           01417         MOVF    r0x01, W
000730 6EE5           01418         MOVWF   POSTDEC1
000732 5000           01419         MOVF    r0x00, W
000734 6EE5           01420         MOVWF   POSTDEC1
000736 EC00 F000      01421         CALL    ___stream_putchar
00073A 0E04           01422         MOVLW   0x04
00073C 26E1           01423         ADDWF   FSR1L, F
                      01424 ; ;ic:342:      iTemp209 [k248 lr334:353 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ _vfprintf_count_1_41}[r0x0c r0x0d ] = iTemp209 [k248 lr334:353 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ _vfprintf_count_1_41}[r0x0c r0x0d ] + 0x1 {const-unsigned-char literal}
                      01425 ;       .line   474; stdio/vfprintf.c   ++count;
00073E 4A00           01426         INFSNZ  r0x0c, F
000740 2A00           01427         INCF    r0x0d, F
                      01428 ; ;ic:343:      iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] := iTemp209 [k248 lr334:353 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ _vfprintf_count_1_41}[r0x0c r0x0d ]
                      01429 ; ;ic:344:      iTemp210 [k249 lr335:345 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0e ] = iTemp210 [k249 lr335:345 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _vfprintf_fieldwidth_1_41}[r0x0e ] - 0x1 {const-unsigned-char literal}
                      01430 ;       .line   475; stdio/vfprintf.c   --fieldwidth;
000742 0600           01431         DECF    r0x0e, F
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01432 ; ;ic:345:       goto _whilecontinue_6($103)
000744 D000           01433         BRA     _00207_DS_
                      01434 ; ;ic:346:  _iffalse_32($109) :
                      01435 ; ;ic:347:      send iTemp0 [k2 lr3:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* generic* fixed}{ sir@ _vfprintf_stream_1_40}[r0x00 r0x01 r0x02 ]{argreg = 1}
                      01436 ; ;ic:348:      send iTemp13 [k21 lr22:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{const-char register}[r0x0b ]{argreg = 2}
                      01437 ; ;ic:349:      iTemp213 [k252 lr349:349 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call ___stream_putchar [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* generic* fixed, char fixed) fixed}
000746                01438 _00213_DS_:
                      01439 ;       .line   482; stdio/vfprintf.c   __stream_putchar (stream, *ch);
000746 5000           01440         MOVF    r0x0b, W
000748 6EE5           01441         MOVWF   POSTDEC1
00074A 5000           01442         MOVF    r0x02, W
00074C 6EE5           01443         MOVWF   POSTDEC1
00074E 5000           01444         MOVF    r0x01, W
000750 6EE5           01445         MOVWF   POSTDEC1
000752 5000           01446         MOVF    r0x00, W
000754 6EE5           01447         MOVWF   POSTDEC1
000756 EC00 F000      01448         CALL    ___stream_putchar
00075A 0E04           01449         MOVLW   0x04
00075C 26E1           01450         ADDWF   FSR1L, F
                      01451 ; ;ic:350:      iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] = iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] + 0x1 {const-unsigned-char literal}
                      01452 ;       .line   483; stdio/vfprintf.c   ++count;
00075E 4A00           01453         INFSNZ  r0x09, F
000760 2A00           01454         INCF    r0x0a, F
                      01455 ; ;ic:351:       goto _ifend_32($110)
                      01456 ;       .line   489; stdio/vfprintf.c   return count;
000762 D000           01457         BRA     _00214_DS_
                      01458 ; ;ic:352:  loopExitLbl14($175) :
                      01459 ; ;ic:353:      iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ] := iTemp209 [k248 lr334:353 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}{ sir@ _vfprintf_count_1_41}[r0x0c r0x0d ]
000764                01460 _00279_DS_:
                      01461 ;       .line   483; stdio/vfprintf.c   ++count;
000764 C000 F000      01462         MOVFF   r0x0c, r0x09
000768 C000 F000      01463         MOVFF   r0x0d, r0x0a
                      01464 ; ;ic:354:  _ifend_32($110) :
                      01465 ; ;ic:355:      iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] = iTemp11 [k18 lr16:356 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vfprintf_ch_1_41}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
00076C                01466 _00214_DS_:
                      01467 ;       .line   486; stdio/vfprintf.c   ++ch;
00076C 2A00           01468         INCF    r0x03, F
00076E E300           01469         BNC     _00401_DS_
000770 4A00           01470         INFSNZ  r0x04, F
000772 2A00           01471         INCF    r0x05, F
                      01472 ; ;ic:356:       goto _whilecontinue_0($111)
000774                01473 _00401_DS_:
000774 EF00 F000      01474         GOTO    _00215_DS_
                      01475 ; ;ic:357:  _whilebreak_0($113) :
                      01476 ; ;ic:358:      ret iTemp3 [k8 lr6:358 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}[r0x09 r0x0a ]
000778                01477 _00217_DS_:
                      01478 ;       .line   489; stdio/vfprintf.c   return count;
000778 C000 FFF3      01479         MOVFF   r0x0a, PRODL
00077C 5000           01480         MOVF    r0x09, W
                      01481 ; ;ic:359:  _return($114) :
                      01482 ; ;ic:360:      eproc _vfprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
00077E CFE4 F000      01483         MOVFF   PREINC1, r0x1e
000782 CFE4 F000      01484         MOVFF   PREINC1, r0x1d
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000786 CFE4 F000      01485         MOVFF   PREINC1, r0x1c
00078A CFE4 F000      01486         MOVFF   PREINC1, r0x1b
00078E CFE4 F000      01487         MOVFF   PREINC1, r0x1a
000792 CFE4 F000      01488         MOVFF   PREINC1, r0x19
000796 CFE4 F000      01489         MOVFF   PREINC1, r0x18
00079A CFE4 F000      01490         MOVFF   PREINC1, r0x17
00079E CFE4 F000      01491         MOVFF   PREINC1, r0x16
0007A2 CFE4 F000      01492         MOVFF   PREINC1, r0x15
0007A6 CFE4 F000      01493         MOVFF   PREINC1, r0x14
0007AA CFE4 F000      01494         MOVFF   PREINC1, r0x13
0007AE CFE4 F000      01495         MOVFF   PREINC1, r0x12
0007B2 CFE4 F000      01496         MOVFF   PREINC1, r0x11
0007B6 CFE4 F000      01497         MOVFF   PREINC1, r0x10
0007BA CFE4 F000      01498         MOVFF   PREINC1, r0x0f
0007BE CFE4 F000      01499         MOVFF   PREINC1, r0x0e
0007C2 CFE4 F000      01500         MOVFF   PREINC1, r0x0d
0007C6 CFE4 F000      01501         MOVFF   PREINC1, r0x0c
0007CA CFE4 F000      01502         MOVFF   PREINC1, r0x0b
0007CE CFE4 F000      01503         MOVFF   PREINC1, r0x0a
0007D2 CFE4 F000      01504         MOVFF   PREINC1, r0x09
0007D6 CFE4 F000      01505         MOVFF   PREINC1, r0x08
0007DA CFE4 F000      01506         MOVFF   PREINC1, r0x07
0007DE CFE4 F000      01507         MOVFF   PREINC1, r0x06
0007E2 CFE4 F000      01508         MOVFF   PREINC1, r0x05
0007E6 CFE4 F000      01509         MOVFF   PREINC1, r0x04
0007EA CFE4 F000      01510         MOVFF   PREINC1, r0x03
0007EE CFE4 F000      01511         MOVFF   PREINC1, r0x02
0007F2 CFE4 F000      01512         MOVFF   PREINC1, r0x01
0007F6 CFE4 F000      01513         MOVFF   PREINC1, r0x00
0007FA CFE4 FFD9      01514         MOVFF   PREINC1, FSR2L
0007FE 0012           01515         RETURN  
                      01516 
                      01517 ; ; Starting pCode block
000800                01518 __str_0:
000800 4E3C 204F 4C46 01519         DB      0x3c, 0x4e, 0x4f, 0x20, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x3e, 0x00
       414F 3E54 0000 
                      01520 
                      01521 
                      01522 ; Statistics:
                      01523 ; code size:     2050 (0x0802) bytes ( 1.56%)
                      01524 ;                1025 (0x0401) words
                      01525 ; udata size:      16 (0x0010) bytes ( 1.25%)
                      01526 ; access size:     31 (0x001f) bytes
                      01527 
                      01528 
                      01529         end
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 30


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC1                          00000FE6
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00108_DS_                        00000166
_00110_DS_                        00000178
_00112_DS_                        00000196
_00114_DS_                        000001B8
_00116_DS_                        000001D6
_00118_DS_                        00000200
_00122_DS_                        00000246
_00125_DS_                        0000026E
_00129_DS_                        000002B4
_00133_DS_                        000002D6
_00134_DS_                        000002E8
_00136_DS_                        00000306
_00138_DS_                        0000037C
_00145_DS_                        00000362
_00148_DS_                        00000356
_00151_DS_                        0000034A
_00154_DS_                        00000340
_00157_DS_                        00000330
_00160_DS_                        00000324
_00161_DS_                        000003A2
_00162_DS_                        000004AA
_00165_DS_                        00000512
_00169_DS_                        000004BA
_00172_DS_                        00000452
_00173_DS_                        00000526
_00175_DS_                        00000562
_00176_DS_                        00000586
_00181_DS_                        000005B8
_00184_DS_                        00000406
_00187_DS_                        000003E8
_00190_DS_                        000005F8
_00193_DS_                        00000630
_00199_DS_                        000006DC
_00204_DS_                        00000678
_00205_DS_                        000006A8
_00207_DS_                        00000722
_00213_DS_                        00000746
_00214_DS_                        0000076C
_00215_DS_                        000000E2
_00217_DS_                        00000778
_00220_DS_                        000006D4
_00221_DS_                        000006D8
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

_00263_DS_                        000005E8
_00270_DS_                        00000660
_00274_DS_                        0000023A
_00275_DS_                        000002A8
_00276_DS_                        0000061C
_00277_DS_                        00000654
_00278_DS_                        0000070A
_00279_DS_                        00000764
_00338_DS_                        00000104
_00339_DS_                        0000012C
_00342_DS_                        00000164
_00345_DS_                        00000178
_00348_DS_                        00000196
_00351_DS_                        000001B8
_00354_DS_                        000001D6
_00359_DS_                        00000238
_00362_DS_                        00000260
_00365_DS_                        000002A6
_00368_DS_                        000002D4
_00371_DS_                        000002E8
_00374_DS_                        00000306
_00391_DS_                        000003A0
_00398_DS_                        00000618
_00400_DS_                        000006FC
_00401_DS_                        00000774
__18F452                          00000001
___stream_putchar                 00000000
__gptrget1                        00000000
__gptrget2                        00000000
__gptrget3                        00000000
__gptrget4                        00000000
__gptrput1                        00000000
__str_0                           00000800
_islower                          00000000
_ltoa                             00000000
_stdin                            00000000
_stdout                           00000000
_ultoa                            00000000
_vfprintf                         00000000
_vfprintf_buffer_1_41             00000000
_vfprintf_stringbuffer_1_41       00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
gpasm-0.14.1 (Aug 18 2017)   vfprintf.asm       8-18-2017  19:21:44          PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015
r0x16                             00000016
r0x17                             00000017
r0x18                             00000018
r0x19                             00000019
r0x1a                             0000001A
r0x1b                             0000001B
r0x1c                             0000001C
r0x1d                             0000001D
r0x1e                             0000001E

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

