gpasm-0.14.1 (Aug 18 2017)   strstr.asm         8-18-2017  19:22:28          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:28 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _strstr
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021 
                      00022 ;--------------------------------------------------------
                      00023 ;       Equates to used internal registers
                      00024 ;--------------------------------------------------------
  00000FD8            00025 STATUS  equ     0xfd8
  00000FE8            00026 WREG    equ     0xfe8
  00000FE9            00027 FSR0L   equ     0xfe9
  00000FE1            00028 FSR1L   equ     0xfe1
  00000FD9            00029 FSR2L   equ     0xfd9
  00000FE5            00030 POSTDEC1        equ     0xfe5
  00000FE4            00031 PREINC1 equ     0xfe4
  00000FDB            00032 PLUSW2  equ     0xfdb
  00000FF3            00033 PRODL   equ     0xff3
  00000FF4            00034 PRODH   equ     0xff4
                      00035 
                      00036 
                      00037 ; Internal registers
                      00038 .registers      udata_ovr       0x0000
000000                00039 r0x00   res     1
000001                00040 r0x01   res     1
000002                00041 r0x02   res     1
000003                00042 r0x03   res     1
000004                00043 r0x04   res     1
000005                00044 r0x05   res     1
000006                00045 r0x06   res     1
000007                00046 r0x07   res     1
000008                00047 r0x08   res     1
000009                00048 r0x09   res     1
00000A                00049 r0x0a   res     1
00000B                00050 r0x0b   res     1
00000C                00051 r0x0c   res     1
00000D                00052 r0x0d   res     1
00000E                00053 r0x0e   res     1
gpasm-0.14.1 (Aug 18 2017)   strstr.asm         8-18-2017  19:22:28          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00000F                00054 r0x0f   res     1
000010                00055 r0x10   res     1
000011                00056 r0x11   res     1
000012                00057 r0x12   res     1
                      00058 
                      00059 ;--------------------------------------------------------
                      00060 ; global & static initialisations
                      00061 ;--------------------------------------------------------
                      00062 ; I code from now on!
                      00063 ; ; Starting pCode block
                      00064 ; ;ic:1:  _entry($14) :
                      00065 ; ;ic:2:        proc _strstr [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
                      00066 S_strstr__strstr        code
000000                00067 _strstr:
                      00068 ;       .line   32; string/strstr.c     strstr (char *str1, char *str2) 
000000 CFD9 FFE5      00069         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00070         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00071         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00072         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00073         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00074         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00075         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00076         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00077         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00078         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00079         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00080         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00081         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00082         MOVFF   r0x0b, POSTDEC1
000038 C000 FFE5      00083         MOVFF   r0x0c, POSTDEC1
00003C C000 FFE5      00084         MOVFF   r0x0d, POSTDEC1
000040 C000 FFE5      00085         MOVFF   r0x0e, POSTDEC1
000044 C000 FFE5      00086         MOVFF   r0x0f, POSTDEC1
000048 C000 FFE5      00087         MOVFF   r0x10, POSTDEC1
00004C C000 FFE5      00088         MOVFF   r0x11, POSTDEC1
000050 C000 FFE5      00089         MOVFF   r0x12, POSTDEC1
                      00090 ; ;ic:3: iTemp0 [k2 lr3:10 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_str1_1_28}[r0x00 r0x01 r0x02 ] = recv _strstr [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
000054 0E02           00091         MOVLW   0x02
000056 CFDB F000      00092         MOVFF   PLUSW2, r0x00
00005A 0E03           00093         MOVLW   0x03
00005C CFDB F000      00094         MOVFF   PLUSW2, r0x01
000060 0E04           00095         MOVLW   0x04
000062 CFDB F000      00096         MOVFF   PLUSW2, r0x02
                      00097 ; ;ic:4: iTemp1 [k4 lr4:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_str2_1_28}[r0x03 r0x04 r0x05 ] = recv _strstr [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
000066 0E05           00098         MOVLW   0x05
000068 CFDB F000      00099         MOVFF   PLUSW2, r0x03
00006C 0E06           00100         MOVLW   0x06
00006E CFDB F000      00101         MOVFF   PLUSW2, r0x04
000072 0E07           00102         MOVLW   0x07
000074 CFDB F000      00103         MOVFF   PLUSW2, r0x05
                      00104 ; ;ic:5:        iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_cp_1_29}[r0x06 r0x07 r0x08 ] := iTemp0 [k2 lr3:10 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_str1_1_28}[r0x00 r0x01 r0x02 ]
                      00105 ;       .line   34; string/strstr.c     char *cp = str1;
000078 C000 F000      00106         MOVFF   r0x00, r0x06
gpasm-0.14.1 (Aug 18 2017)   strstr.asm         8-18-2017  19:22:28          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007C C000 F000      00107         MOVFF   r0x01, r0x07
000080 C000 F000      00108         MOVFF   r0x02, r0x08
                      00109 ; ;ic:6:        iTemp4 [k9 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x09 ] = @[iTemp1 [k4 lr4:37 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_str2_1_28}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
                      00110 ;       .line   39; string/strstr.c     if (!*str2)
000084 C000 FFE9      00111         MOVFF   r0x03, FSR0L
000088 C000 FFF3      00112         MOVFF   r0x04, PRODL
00008C 5000           00113         MOVF    r0x05, W
00008E EC00 F000      00114         CALL    __gptrget1
000092 6E00           00115         MOVWF   r0x09
                      00116 ; ;ic:7:        if iTemp4 [k9 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x09 ] != 0 goto preHeaderLbl1($22)
000094 5000           00117         MOVF    r0x09, W
000096 E100           00118         BNZ     _00114_DS_
                      00119 ; ;ic:8:        ret iTemp0 [k2 lr3:10 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_str1_1_28}[r0x00 r0x01 r0x02 ]
                      00120 ;       .line   40; string/strstr.c     return str1;
000098 C000 FFF4      00121         MOVFF   r0x02, PRODH
00009C C000 FFF3      00122         MOVFF   r0x01, PRODL
0000A0 5000           00123         MOVF    r0x00, W
0000A2 D000           00124         BRA     _00117_DS_
                      00125 ; ;ic:9:  preHeaderLbl1($22) :
                      00126 ; ;ic:10:       iTemp26 [k33 lr10:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s1_1_29}[r0x00 r0x01 r0x02 ] := iTemp0 [k2 lr3:10 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_str1_1_28}[r0x00 r0x01 r0x02 ]
                      00127 ; ;ic:12:  _whilecontinue_0($10) :
                      00128 ; ;ic:13:       iTemp6 [k11 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x09 ] = @[iTemp26 [k33 lr10:37 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s1_1_29}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
0000A4                00129 _00114_DS_:
                      00130 ;       .line   42; string/strstr.c     while (*cp)
0000A4 C000 FFE9      00131         MOVFF   r0x00, FSR0L
0000A8 C000 FFF3      00132         MOVFF   r0x01, PRODL
0000AC 5000           00133         MOVF    r0x02, W
0000AE EC00 F000      00134         CALL    __gptrget1
0000B2 6E00           00135         MOVWF   r0x09
                      00136 ; ;ic:14:       if iTemp6 [k11 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x09 ] == 0 goto _whilebreak_0($12)
0000B4 5000           00137         MOVF    r0x09, W
0000B6 B4D8           00138         BTFSC   STATUS, 2
0000B8 D000           00139         BRA     _00116_DS_
                      00140 ; ;ic:15:       iTemp21 [k28 lr15:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x09 r0x0a r0x0b ] := iTemp26 [k33 lr10:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s1_1_29}[r0x00 r0x01 r0x02 ]
                      00141 ;       .line   47; string/strstr.c     while (*s1 && *s2 && !(*s1-*s2))
0000BA C000 F000      00142         MOVFF   r0x00, r0x09
0000BE C000 F000      00143         MOVFF   r0x01, r0x0a
0000C2 C000 F000      00144         MOVFF   r0x02, r0x0b
                      00145 ; ;ic:16:       iTemp23 [k30 lr16:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s2_1_29}[r0x0c r0x0d r0x0e ] := iTemp1 [k4 lr4:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_str2_1_28}[r0x03 r0x04 r0x05 ]
0000C6 C000 F000      00146         MOVFF   r0x03, r0x0c
0000CA C000 F000      00147         MOVFF   r0x04, r0x0d
0000CE C000 F000      00148         MOVFF   r0x05, r0x0e
                      00149 ; ;ic:18:  _whilecontinue_1($5) :
                      00150 ; ;ic:19:       iTemp10 [k17 lr19:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0f ] = @[iTemp21 [k28 lr15:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x09 r0x0a r0x0b ] + 0x0 {const-unsigned-char literal}]
0000D2                00151 _00109_DS_:
0000D2 C000 FFE9      00152         MOVFF   r0x09, FSR0L
0000D6 C000 FFF3      00153         MOVFF   r0x0a, PRODL
0000DA 5000           00154         MOVF    r0x0b, W
0000DC EC00 F000      00155         CALL    __gptrget1
0000E0 6E00           00156         MOVWF   r0x0f
                      00157 ; ;ic:20:       if iTemp10 [k17 lr19:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0f ] == 0 goto _whilebreak_1($7)
0000E2 5000           00158         MOVF    r0x0f, W
0000E4 E000           00159         BZ      _00111_DS_
gpasm-0.14.1 (Aug 18 2017)   strstr.asm         8-18-2017  19:22:28          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00160 ; ;ic:21:       iTemp12 [k19 lr21:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x10 ] = @[iTemp23 [k30 lr16:31 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s2_1_29}[r0x0c r0x0d r0x0e ] + 0x0 {const-unsigned-char literal}]
0000E6 C000 FFE9      00161         MOVFF   r0x0c, FSR0L
0000EA C000 FFF3      00162         MOVFF   r0x0d, PRODL
0000EE 5000           00163         MOVF    r0x0e, W
0000F0 EC00 F000      00164         CALL    __gptrget1
0000F4 6E00           00165         MOVWF   r0x10
                      00166 ; ;ic:22:       if iTemp12 [k19 lr21:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x10 ] == 0 goto _whilebreak_1($7)
0000F6 5000           00167         MOVF    r0x10, W
0000F8 E000           00168         BZ      _00111_DS_
                      00169 ; ;ic:23:       iTemp15 [k22 lr23:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0f r0x11 ] = (int fixed)iTemp10 [k17 lr19:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0f ]
0000FA 6A00           00170         CLRF    r0x11
0000FC BE00           00171         BTFSC   r0x0f, 7
0000FE 6800           00172         SETF    r0x11
                      00173 ; ;ic:24:       iTemp18 [k25 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x10 r0x12 ] = (int fixed)iTemp12 [k19 lr21:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x10 ]
000100 6A00           00174         CLRF    r0x12
000102 BE00           00175         BTFSC   r0x10, 7
000104 6800           00176         SETF    r0x12
                      00177 ; ;ic:25:       iTemp19 [k26 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0f r0x11 ] = iTemp15 [k22 lr23:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0f r0x11 ] - iTemp18 [k25 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x10 r0x12 ]
000106 5000           00178         MOVF    r0x10, W
000108 5E00           00179         SUBWF   r0x0f, F
00010A 5000           00180         MOVF    r0x12, W
00010C 5A00           00181         SUBWFB  r0x11, F
                      00182 ; ;ic:26:       if iTemp19 [k26 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0f r0x11 ] != 0 goto _whilebreak_1($7)
00010E 5000           00183         MOVF    r0x0f, W
000110 1000           00184         IORWF   r0x11, W
000112 E100           00185         BNZ     _00111_DS_
                      00186 ; ;ic:27:       iTemp21 [k28 lr15:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x09 r0x0a r0x0b ] = iTemp21 [k28 lr15:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x09 r0x0a r0x0b ] + 0x1 {const-unsigned-char literal}
                      00187 ;       .line   48; string/strstr.c     s1++, s2++;
000114 2A00           00188         INCF    r0x09, F
000116 E300           00189         BNC     _00136_DS_
000118 4A00           00190         INFSNZ  r0x0a, F
00011A 2A00           00191         INCF    r0x0b, F
                      00192 ; ;ic:28:       iTemp23 [k30 lr16:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s2_1_29}[r0x0c r0x0d r0x0e ] = iTemp23 [k30 lr16:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s2_1_29}[r0x0c r0x0d r0x0e ] + 0x1 {const-unsigned-char literal}
00011C                00193 _00136_DS_:
00011C 2A00           00194         INCF    r0x0c, F
00011E E300           00195         BNC     _00109_DS_
000120 4A00           00196         INFSNZ  r0x0d, F
000122 2A00           00197         INCF    r0x0e, F
                      00198 ; ;ic:29:        goto _whilecontinue_1($5)
000124                00199 _00137_DS_:
000124 D000           00200         BRA     _00109_DS_
                      00201 ; ;ic:30:  _whilebreak_1($7) :
                      00202 ; ;ic:31:       iTemp25 [k32 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0c ] = @[iTemp23 [k30 lr16:31 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s2_1_29}[r0x0c r0x0d r0x0e ] + 0x0 {const-unsigned-char literal}]
000126                00203 _00111_DS_:
                      00204 ;       .line   50; string/strstr.c     if (!*s2)
000126 C000 FFE9      00205         MOVFF   r0x0c, FSR0L
00012A C000 FFF3      00206         MOVFF   r0x0d, PRODL
00012E 5000           00207         MOVF    r0x0e, W
000130 EC00 F000      00208         CALL    __gptrget1
000134 6E00           00209         MOVWF   r0x0c
                      00210 ; ;ic:32:       if iTemp25 [k32 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0c ] != 0 goto _iffalse_1($9)
000136 5000           00211         MOVF    r0x0c, W
000138 E100           00212         BNZ     _00113_DS_
gpasm-0.14.1 (Aug 18 2017)   strstr.asm         8-18-2017  19:22:28          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00213 ; ;ic:33:       ret iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_cp_1_29}[r0x06 r0x07 r0x08 ]
                      00214 ;       .line   51; string/strstr.c     return cp;
00013A C000 FFF4      00215         MOVFF   r0x08, PRODH
00013E C000 FFF3      00216         MOVFF   r0x07, PRODL
000142 5000           00217         MOVF    r0x06, W
000144 D000           00218         BRA     _00117_DS_
                      00219 ; ;ic:34:  _iffalse_1($9) :
                      00220 ; ;ic:35:       iTemp26 [k33 lr10:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s1_1_29}[r0x00 r0x01 r0x02 ] = iTemp26 [k33 lr10:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s1_1_29}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
000146                00221 _00113_DS_:
                      00222 ;       .line   53; string/strstr.c     ++cp;
000146 2A00           00223         INCF    r0x00, F
000148 E300           00224         BNC     _00138_DS_
00014A 4A00           00225         INFSNZ  r0x01, F
00014C 2A00           00226         INCF    r0x02, F
                      00227 ; ;ic:36:       iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_cp_1_29}[r0x06 r0x07 r0x08 ] := iTemp26 [k33 lr10:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strstr_s1_1_29}[r0x00 r0x01 r0x02 ]
00014E                00228 _00138_DS_:
00014E C000 F000      00229         MOVFF   r0x00, r0x06
000152 C000 F000      00230         MOVFF   r0x01, r0x07
000156 C000 F000      00231         MOVFF   r0x02, r0x08
                      00232 ; ;ic:37:        goto _whilecontinue_0($10)
00015A D000           00233         BRA     _00114_DS_
                      00234 ; ;ic:38:  _whilebreak_0($12) :
                      00235 ; ;ic:39:       ret 0x0 {char generic* literal}
00015C                00236 _00116_DS_:
                      00237 ;       .line   56; string/strstr.c     return NULL;
00015C 6AF4           00238         CLRF    PRODH
00015E 6AF3           00239         CLRF    PRODL
000160 6AE8           00240         CLRF    WREG
                      00241 ; ;ic:40:  _return($13) :
                      00242 ; ;ic:41:       eproc _strstr [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
000162                00243 _00117_DS_:
000162 CFE4 F000      00244         MOVFF   PREINC1, r0x12
000166 CFE4 F000      00245         MOVFF   PREINC1, r0x11
00016A CFE4 F000      00246         MOVFF   PREINC1, r0x10
00016E CFE4 F000      00247         MOVFF   PREINC1, r0x0f
000172 CFE4 F000      00248         MOVFF   PREINC1, r0x0e
000176 CFE4 F000      00249         MOVFF   PREINC1, r0x0d
00017A CFE4 F000      00250         MOVFF   PREINC1, r0x0c
00017E CFE4 F000      00251         MOVFF   PREINC1, r0x0b
000182 CFE4 F000      00252         MOVFF   PREINC1, r0x0a
000186 CFE4 F000      00253         MOVFF   PREINC1, r0x09
00018A CFE4 F000      00254         MOVFF   PREINC1, r0x08
00018E CFE4 F000      00255         MOVFF   PREINC1, r0x07
000192 CFE4 F000      00256         MOVFF   PREINC1, r0x06
000196 CFE4 F000      00257         MOVFF   PREINC1, r0x05
00019A CFE4 F000      00258         MOVFF   PREINC1, r0x04
00019E CFE4 F000      00259         MOVFF   PREINC1, r0x03
0001A2 CFE4 F000      00260         MOVFF   PREINC1, r0x02
0001A6 CFE4 F000      00261         MOVFF   PREINC1, r0x01
0001AA CFE4 F000      00262         MOVFF   PREINC1, r0x00
0001AE CFE4 FFD9      00263         MOVFF   PREINC1, FSR2L
0001B2 0012           00264         RETURN  
                      00265 
gpasm-0.14.1 (Aug 18 2017)   strstr.asm         8-18-2017  19:22:28          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00266 
                      00267 
                      00268 ; Statistics:
                      00269 ; code size:      436 (0x01b4) bytes ( 0.33%)
                      00270 ;                 218 (0x00da) words
                      00271 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00272 ; access size:     19 (0x0013) bytes
                      00273 
                      00274 
                      00275         end
gpasm-0.14.1 (Aug 18 2017)   strstr.asm         8-18-2017  19:22:28          PAGE  7


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00109_DS_                        000000D2
_00111_DS_                        00000126
_00113_DS_                        00000146
_00114_DS_                        000000A4
_00116_DS_                        0000015C
_00117_DS_                        00000162
_00136_DS_                        0000011C
_00137_DS_                        00000124
_00138_DS_                        0000014E
__18F452                          00000001
__gptrget1                        00000000
_strstr                           00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

