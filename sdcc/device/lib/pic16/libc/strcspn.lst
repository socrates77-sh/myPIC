gpasm-0.14.1 (Aug 18 2017)   strcspn.asm        8-18-2017  19:22:17          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:17 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _strcspn
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021         extern  _strchr
                      00022 
                      00023 ;--------------------------------------------------------
                      00024 ;       Equates to used internal registers
                      00025 ;--------------------------------------------------------
  00000FD8            00026 STATUS  equ     0xfd8
  00000FE8            00027 WREG    equ     0xfe8
  00000FE9            00028 FSR0L   equ     0xfe9
  00000FE1            00029 FSR1L   equ     0xfe1
  00000FD9            00030 FSR2L   equ     0xfd9
  00000FE5            00031 POSTDEC1        equ     0xfe5
  00000FE4            00032 PREINC1 equ     0xfe4
  00000FDB            00033 PLUSW2  equ     0xfdb
  00000FF3            00034 PRODL   equ     0xff3
  00000FF4            00035 PRODH   equ     0xff4
                      00036 
                      00037 
                      00038 ; Internal registers
                      00039 .registers      udata_ovr       0x0000
000000                00040 r0x00   res     1
000001                00041 r0x01   res     1
000002                00042 r0x02   res     1
000003                00043 r0x03   res     1
000004                00044 r0x04   res     1
000005                00045 r0x05   res     1
000006                00046 r0x06   res     1
000007                00047 r0x07   res     1
000008                00048 r0x08   res     1
000009                00049 r0x09   res     1
00000A                00050 r0x0a   res     1
                      00051 
                      00052 ;--------------------------------------------------------
                      00053 ; global & static initialisations
gpasm-0.14.1 (Aug 18 2017)   strcspn.asm        8-18-2017  19:22:17          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;--------------------------------------------------------
                      00055 ; I code from now on!
                      00056 ; ; Starting pCode block
                      00057 ; ;ic:1:  _entry($8) :
                      00058 ; ;ic:2:        proc _strcspn [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, char generic* fixed) fixed}
                      00059 S_strcspn__strcspn      code
000000                00060 _strcspn:
                      00061 ;       .line   33; string/strcspn.c    strcspn (char *string, char *control) 
000000 CFD9 FFE5      00062         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00063         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00064         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00065         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00066         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00067         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00068         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00069         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00070         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00071         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00072         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00073         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00074         MOVFF   r0x0a, POSTDEC1
                      00075 ; ;ic:3: iTemp10 [k19 lr3:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = recv _strcspn [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, char generic* fixed) fixed}
000034 0E02           00076         MOVLW   0x02
000036 CFDB F000      00077         MOVFF   PLUSW2, r0x00
00003A 0E03           00078         MOVLW   0x03
00003C CFDB F000      00079         MOVFF   PLUSW2, r0x01
000040 0E04           00080         MOVLW   0x04
000042 CFDB F000      00081         MOVFF   PLUSW2, r0x02
                      00082 ; ;ic:4: iTemp1 [k4 lr4:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcspn_control_1_28}[r0x03 r0x04 r0x05 ] = recv _strcspn [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, char generic* fixed) fixed}
000046 0E05           00083         MOVLW   0x05
000048 CFDB F000      00084         MOVFF   PLUSW2, r0x03
00004C 0E06           00085         MOVLW   0x06
00004E CFDB F000      00086         MOVFF   PLUSW2, r0x04
000052 0E07           00087         MOVLW   0x07
000054 CFDB F000      00088         MOVFF   PLUSW2, r0x05
                      00089 ; ;ic:5:        iTemp8 [k17 lr5:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{ sir@ _strcspn_count_1_29}[r0x06 r0x07 ] := 0x0 {int literal}
                      00090 ;       .line   38; string/strcspn.c    while (ch = *string)
000058 6A00           00091         CLRF    r0x06
00005A 6A00           00092         CLRF    r0x07
                      00093 ; ;ic:7:  _whilecontinue_0($4) :
                      00094 ; ;ic:8:        iTemp5 [k11 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _strcspn_ch_1_29}[r0x08 ] = @[iTemp10 [k19 lr3:17 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
00005C                00095 _00108_DS_:
00005C C000 FFE9      00096         MOVFF   r0x00, FSR0L
000060 C000 FFF3      00097         MOVFF   r0x01, PRODL
000064 5000           00098         MOVF    r0x02, W
000066 EC00 F000      00099         CALL    __gptrget1
00006A 6E00           00100         MOVWF   r0x08
                      00101 ; ;ic:9:        iTemp3 [k8 lr9:12 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char register}[r0x09 ] := iTemp5 [k11 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _strcspn_ch_1_29}[r0x08 ]
00006C C000 F000      00102         MOVFF   r0x08, r0x09
                      00103 ; ;ic:10:       if iTemp5 [k11 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _strcspn_ch_1_29}[r0x08 ] == 0 goto _whilebreak_0($6)
000070 5000           00104         MOVF    r0x08, W
000072 E000           00105         BZ      _00110_DS_
                      00106 ; ;ic:11:       send iTemp1 [k4 lr4:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcspn_control_1_28}[r0x03 r0x04 r0x05 ]{argreg = 1}
gpasm-0.14.1 (Aug 18 2017)   strcspn.asm        8-18-2017  19:22:17          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; ;ic:12:       send iTemp3 [k8 lr9:12 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char register}[r0x09 ]{argreg = 2}
                      00108 ; ;ic:13:       iTemp6 [k15 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] = call _strchr [k12 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char fixed) fixed}
                      00109 ;       .line   40; string/strcspn.c    if (strchr (control, ch))
000074 5000           00110         MOVF    r0x09, W
000076 6EE5           00111         MOVWF   POSTDEC1
000078 5000           00112         MOVF    r0x05, W
00007A 6EE5           00113         MOVWF   POSTDEC1
00007C 5000           00114         MOVF    r0x04, W
00007E 6EE5           00115         MOVWF   POSTDEC1
000080 5000           00116         MOVF    r0x03, W
000082 6EE5           00117         MOVWF   POSTDEC1
000084 EC00 F000      00118         CALL    _strchr
000088 6E00           00119         MOVWF   r0x08
00008A CFF3 F000      00120         MOVFF   PRODL, r0x09
00008E CFF4 F000      00121         MOVFF   PRODH, r0x0a
000092 0E04           00122         MOVLW   0x04
000094 26E1           00123         ADDWF   FSR1L, F
                      00124 ; ;ic:14:       if iTemp6 [k15 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] != 0 goto _whilebreak_0($6)
000096 5000           00125         MOVF    r0x08, W
000098 1000           00126         IORWF   r0x09, W
00009A 1000           00127         IORWF   r0x0a, W
00009C E100           00128         BNZ     _00110_DS_
                      00129 ; ;ic:15:       iTemp8 [k17 lr5:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{ sir@ _strcspn_count_1_29}[r0x06 r0x07 ] = iTemp8 [k17 lr5:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{ sir@ _strcspn_count_1_29}[r0x06 r0x07 ] + 0x1 {const-unsigned-char literal}
                      00130 ;       .line   43; string/strcspn.c    count++ ;
00009E 4A00           00131         INFSNZ  r0x06, F
0000A0 2A00           00132         INCF    r0x07, F
                      00133 ; ;ic:16:       iTemp10 [k19 lr3:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp10 [k19 lr3:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
                      00134 ;       .line   44; string/strcspn.c    string++;
0000A2 2A00           00135         INCF    r0x00, F
0000A4 E300           00136         BNC     _00108_DS_
0000A6 4A00           00137         INFSNZ  r0x01, F
0000A8 2A00           00138         INCF    r0x02, F
                      00139 ; ;ic:17:        goto _whilecontinue_0($4)
0000AA                00140 _00120_DS_:
0000AA D000           00141         BRA     _00108_DS_
                      00142 ; ;ic:18:  _whilebreak_0($6) :
                      00143 ; ;ic:19:       ret iTemp8 [k17 lr5:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{ sir@ _strcspn_count_1_29}[r0x06 r0x07 ]
0000AC                00144 _00110_DS_:
                      00145 ;       .line   47; string/strcspn.c    return count;
0000AC C000 FFF3      00146         MOVFF   r0x07, PRODL
0000B0 5000           00147         MOVF    r0x06, W
                      00148 ; ;ic:20:  _return($7) :
                      00149 ; ;ic:21:       eproc _strcspn [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, char generic* fixed) fixed}
0000B2 CFE4 F000      00150         MOVFF   PREINC1, r0x0a
0000B6 CFE4 F000      00151         MOVFF   PREINC1, r0x09
0000BA CFE4 F000      00152         MOVFF   PREINC1, r0x08
0000BE CFE4 F000      00153         MOVFF   PREINC1, r0x07
0000C2 CFE4 F000      00154         MOVFF   PREINC1, r0x06
0000C6 CFE4 F000      00155         MOVFF   PREINC1, r0x05
0000CA CFE4 F000      00156         MOVFF   PREINC1, r0x04
0000CE CFE4 F000      00157         MOVFF   PREINC1, r0x03
0000D2 CFE4 F000      00158         MOVFF   PREINC1, r0x02
0000D6 CFE4 F000      00159         MOVFF   PREINC1, r0x01
gpasm-0.14.1 (Aug 18 2017)   strcspn.asm        8-18-2017  19:22:17          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000DA CFE4 F000      00160         MOVFF   PREINC1, r0x00
0000DE CFE4 FFD9      00161         MOVFF   PREINC1, FSR2L
0000E2 0012           00162         RETURN  
                      00163 
                      00164 
                      00165 
                      00166 ; Statistics:
                      00167 ; code size:      228 (0x00e4) bytes ( 0.17%)
                      00168 ;                 114 (0x0072) words
                      00169 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00170 ; access size:     11 (0x000b) bytes
                      00171 
                      00172 
                      00173         end
gpasm-0.14.1 (Aug 18 2017)   strcspn.asm        8-18-2017  19:22:17          PAGE  5


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00108_DS_                        0000005C
_00110_DS_                        000000AC
_00120_DS_                        000000AA
__18F452                          00000001
__gptrget1                        00000000
_strchr                           00000000
_strcspn                          00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

