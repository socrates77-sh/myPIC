gpasm-0.14.1 (Aug 18 2017)   strlen.asm         8-18-2017  19:22:18          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:18 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _strlen
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021 
                      00022 ;--------------------------------------------------------
                      00023 ;       Equates to used internal registers
                      00024 ;--------------------------------------------------------
  00000FD8            00025 STATUS  equ     0xfd8
  00000FE8            00026 WREG    equ     0xfe8
  00000FE9            00027 FSR0L   equ     0xfe9
  00000FE1            00028 FSR1L   equ     0xfe1
  00000FD9            00029 FSR2L   equ     0xfd9
  00000FE5            00030 POSTDEC1        equ     0xfe5
  00000FE4            00031 PREINC1 equ     0xfe4
  00000FDB            00032 PLUSW2  equ     0xfdb
  00000FF3            00033 PRODL   equ     0xff3
                      00034 
                      00035 
                      00036 ; Internal registers
                      00037 .registers      udata_ovr       0x0000
000000                00038 r0x00   res     1
000001                00039 r0x01   res     1
000002                00040 r0x02   res     1
000003                00041 r0x03   res     1
000004                00042 r0x04   res     1
000005                00043 r0x05   res     1
                      00044 
                      00045 ;--------------------------------------------------------
                      00046 ; global & static initialisations
                      00047 ;--------------------------------------------------------
                      00048 ; I code from now on!
                      00049 ; ; Starting pCode block
                      00050 ; ;ic:1:  _entry($5) :
                      00051 ; ;ic:2:        proc _strlen [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed) fixed}
                      00052 S_strlen__strlen        code
000000                00053 _strlen:
gpasm-0.14.1 (Aug 18 2017)   strlen.asm         8-18-2017  19:22:18          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;       .line   32; string/strlen.c     strlen (char *str) 
000000 CFD9 FFE5      00055         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00056         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00057         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00058         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00059         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00060         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00061         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00062         MOVFF   r0x05, POSTDEC1
                      00063 ; ;ic:3: iTemp3 [k7 lr3:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = recv _strlen [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed) fixed}
000020 0E02           00064         MOVLW   0x02
000022 CFDB F000      00065         MOVFF   PLUSW2, r0x00
000026 0E03           00066         MOVLW   0x03
000028 CFDB F000      00067         MOVFF   PLUSW2, r0x01
00002C 0E04           00068         MOVLW   0x04
00002E CFDB F000      00069         MOVFF   PLUSW2, r0x02
                      00070 ; ;ic:4:        iTemp6 [k10 lr4:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{ sir@ _strlen_i_1_29}[r0x03 r0x04 ] := 0x0 {int literal}
                      00071 ;       .line   36; string/strlen.c     while (*str++)
000032 6A00           00072         CLRF    r0x03
000034 6A00           00073         CLRF    r0x04
                      00074 ; ;ic:6:  _whilecontinue_0($1) :
                      00075 ; ;ic:7:        iTemp4 [k8 lr7:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp3 [k7 lr3:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
000036                00076 _00105_DS_:
000036 C000 FFE9      00077         MOVFF   r0x00, FSR0L
00003A C000 FFF3      00078         MOVFF   r0x01, PRODL
00003E 5000           00079         MOVF    r0x02, W
000040 EC00 F000      00080         CALL    __gptrget1
000044 6E00           00081         MOVWF   r0x05
                      00082 ; ;ic:8:        iTemp3 [k7 lr3:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp3 [k7 lr3:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
000046 2A00           00083         INCF    r0x00, F
000048 E300           00084         BNC     _00115_DS_
00004A 4A00           00085         INFSNZ  r0x01, F
00004C 2A00           00086         INCF    r0x02, F
                      00087 ; ;ic:9:        if iTemp4 [k8 lr7:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] == 0 goto _whilebreak_0($3)
00004E                00088 _00115_DS_:
00004E 5000           00089         MOVF    r0x05, W
000050 E000           00090         BZ      _00107_DS_
                      00091 ; ;ic:10:       iTemp6 [k10 lr4:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{ sir@ _strlen_i_1_29}[r0x03 r0x04 ] = iTemp6 [k10 lr4:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{ sir@ _strlen_i_1_29}[r0x03 r0x04 ] + 0x1 {const-unsigned-char literal}
                      00092 ;       .line   37; string/strlen.c     i++;
000052 4A00           00093         INFSNZ  r0x03, F
000054 2A00           00094         INCF    r0x04, F
                      00095 ; ;ic:11:        goto _whilecontinue_0($1)
000056 D000           00096         BRA     _00105_DS_
                      00097 ; ;ic:12:  _whilebreak_0($3) :
                      00098 ; ;ic:13:       ret iTemp6 [k10 lr4:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{ sir@ _strlen_i_1_29}[r0x03 r0x04 ]
000058                00099 _00107_DS_:
                      00100 ;       .line   39; string/strlen.c     return i;
000058 C000 FFF3      00101         MOVFF   r0x04, PRODL
00005C 5000           00102         MOVF    r0x03, W
                      00103 ; ;ic:14:  _return($4) :
                      00104 ; ;ic:15:       eproc _strlen [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed) fixed}
00005E CFE4 F000      00105         MOVFF   PREINC1, r0x05
000062 CFE4 F000      00106         MOVFF   PREINC1, r0x04
gpasm-0.14.1 (Aug 18 2017)   strlen.asm         8-18-2017  19:22:18          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000066 CFE4 F000      00107         MOVFF   PREINC1, r0x03
00006A CFE4 F000      00108         MOVFF   PREINC1, r0x02
00006E CFE4 F000      00109         MOVFF   PREINC1, r0x01
000072 CFE4 F000      00110         MOVFF   PREINC1, r0x00
000076 CFE4 FFD9      00111         MOVFF   PREINC1, FSR2L
00007A 0012           00112         RETURN  
                      00113 
                      00114 
                      00115 
                      00116 ; Statistics:
                      00117 ; code size:      124 (0x007c) bytes ( 0.09%)
                      00118 ;                  62 (0x003e) words
                      00119 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00120 ; access size:      6 (0x0006) bytes
                      00121 
                      00122 
                      00123         end
gpasm-0.14.1 (Aug 18 2017)   strlen.asm         8-18-2017  19:22:18          PAGE  4


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00105_DS_                        00000036
_00107_DS_                        00000058
_00115_DS_                        0000004E
__18F452                          00000001
__gptrget1                        00000000
_strlen                           00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

