gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:01 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _x_cnvint_wrap
                      00016         global  _x_cnvfrac_wrap
                      00017         global  _x_ftoa
                      00018 
                      00019 ;--------------------------------------------------------
                      00020 ; extern variables in this module
                      00021 ;--------------------------------------------------------
                      00022         extern  _convert_frac
                      00023         extern  _convert_int
                      00024         extern  _POSTDEC1
                      00025         extern  _PLUSW2
                      00026         extern  _FSR0L
                      00027         extern  _FSR0H
                      00028         extern  _PREINC1
                      00029         extern  _PREINC2
                      00030         extern  _FSR2L
                      00031         extern  _FSR2H
                      00032 
                      00033 ;--------------------------------------------------------
                      00034 ;       Equates to used internal registers
                      00035 ;--------------------------------------------------------
  00000FD8            00036 STATUS  equ     0xfd8
  00000FE8            00037 WREG    equ     0xfe8
  00000FE9            00038 FSR0L   equ     0xfe9
  00000FEA            00039 FSR0H   equ     0xfea
  00000FE1            00040 FSR1L   equ     0xfe1
  00000FD9            00041 FSR2L   equ     0xfd9
  00000FEF            00042 INDF0   equ     0xfef
  00000FE5            00043 POSTDEC1        equ     0xfe5
  00000FE4            00044 PREINC1 equ     0xfe4
  00000FDB            00045 PLUSW2  equ     0xfdb
                      00046 
                      00047 
                      00048 ; Internal registers
                      00049 .registers      udata_ovr       0x0000
000000                00050 r0x00   res     1
000001                00051 r0x01   res     1
000002                00052 r0x02   res     1
000003                00053 r0x03   res     1
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000004                00054 r0x04   res     1
000005                00055 r0x05   res     1
000006                00056 r0x06   res     1
000007                00057 r0x07   res     1
000008                00058 r0x08   res     1
000009                00059 r0x09   res     1
00000A                00060 r0x0a   res     1
00000B                00061 r0x0b   res     1
                      00062 
                      00063 udata_x_ftoa_0  udata
000000                00064 _x_ftoa_f_l_1_26        res     4
                      00065 
                      00066 ;--------------------------------------------------------
                      00067 ; global & static initialisations
                      00068 ;--------------------------------------------------------
                      00069 ; I code from now on!
                      00070 ; ; Starting pCode block
                      00071 ; ;ic:1:  _entry($20) :
                      00072 ; ;ic:2:        proc _x_ftoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, char near* data, unsigned-char fixed, unsigned-char fixed) fixed}
                      00073 S_x_ftoa__x_ftoa        code
000000                00074 _x_ftoa:
                      00075 ;       .line   139; stdlib/x_ftoa.c    char x_ftoa(float num, __data char *buffer, unsigned char buflen, unsigned char prec)
000000 CFD9 FFE5      00076         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00077         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00078         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00079         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00080         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00081         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00082         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00083         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00084         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00085         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00086         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00087         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00088         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00089         MOVFF   r0x0b, POSTDEC1
                      00090 ; ;ic:3: iTemp0 [k2 lr3:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _x_ftoa_num_1_25}[r0x00 r0x01 r0x02 r0x03 ] = recv _x_ftoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, char near* data, unsigned-char fixed, unsigned-char fixed) fixed}
000038 0E02           00091         MOVLW   0x02
00003A CFDB F000      00092         MOVFF   PLUSW2, r0x00
00003E 0E03           00093         MOVLW   0x03
000040 CFDB F000      00094         MOVFF   PLUSW2, r0x01
000044 0E04           00095         MOVLW   0x04
000046 CFDB F000      00096         MOVFF   PLUSW2, r0x02
00004A 0E05           00097         MOVLW   0x05
00004C CFDB F000      00098         MOVFF   PLUSW2, r0x03
                      00099 ; ;ic:4: iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] = recv _x_ftoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, char near* data, unsigned-char fixed, unsigned-char fixed) fixed}
000050 0E06           00100         MOVLW   0x06
000052 CFDB F000      00101         MOVFF   PLUSW2, r0x04
000056 0E07           00102         MOVLW   0x07
000058 CFDB F000      00103         MOVFF   PLUSW2, r0x05
                      00104 ; ;ic:5: iTemp6 [k13 lr5:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x06 ] = recv _x_ftoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, char near* data, unsigned-char fixed, unsigned-char fixed) fixed}
00005C 0E08           00105         MOVLW   0x08
00005E CFDB F000      00106         MOVFF   PLUSW2, r0x06
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; ;ic:6: iTemp3 [k8 lr6:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _x_ftoa_prec_1_25}[r0x07 ] = recv _x_ftoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, char near* data, unsigned-char fixed, unsigned-char fixed) fixed}
000062 0E09           00108         MOVLW   0x09
000064 CFDB F000      00109         MOVFF   PLUSW2, r0x07
                      00110 ; ;ic:8:  _whilecontinue_0($1) :
                      00111 ; ;ic:9:        iTemp5 [k12 lr9:11 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}[r0x08 ] := iTemp6 [k13 lr5:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x06 ]
000068                00112 _00115_DS_:
                      00113 ;       .line   149; stdlib/x_ftoa.c    while(len--)buffer[len] = 0;
000068 C000 F000      00114         MOVFF   r0x06, r0x08
                      00115 ; ;ic:10:       iTemp6 [k13 lr5:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x06 ] = iTemp6 [k13 lr5:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x06 ] - 0x1 {const-unsigned-char literal}
00006C 0600           00116         DECF    r0x06, F
                      00117 ; ;ic:11:       if iTemp5 [k12 lr9:11 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _whilebreak_0($3)
00006E 5000           00118         MOVF    r0x08, W
000070 E000           00119         BZ      _00117_DS_
                      00120 ; ;ic:12:       iTemp7 [k14 lr12:13 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* data}[r0x08 r0x09 ] = iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] + iTemp6 [k13 lr5:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x06 ]
000072 5000           00121         MOVF    r0x06, W
000074 2400           00122         ADDWF   r0x04, W
000076 6E00           00123         MOVWF   r0x08
000078 6AE8           00124         CLRF    WREG
00007A BE00           00125         BTFSC   r0x06, 7
00007C 68E8           00126         SETF    WREG
00007E 2000           00127         ADDWFC  r0x05, W
000080 6E00           00128         MOVWF   r0x09
                      00129 ; ;ic:13:       *(iTemp7 [k14 lr12:13 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* data}[r0x08 r0x09 ]) := 0x0 {const-unsigned-char literal}
000082 C000 FFE9      00130         MOVFF   r0x08, FSR0L
000086 C000 FFEA      00131         MOVFF   r0x09, FSR0H
00008A 6AEF           00132         CLRF    INDF0
                      00133 ; ;ic:14:        goto _whilecontinue_0($1)
00008C D000           00134         BRA     _00115_DS_
                      00135 ; ;ic:15:  _whilebreak_0($3) :
                      00136 ; ;ic:16:       iTemp8 [k16 lr16:17 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[_x_ftoa_f_l_1_26 [k15 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{struct float_long fixed}]
                      00137 ; ;ic:17:       *(iTemp8 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:17 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _x_ftoa_num_1_25}[r0x00 r0x01 r0x02 r0x03 ]
00008E                00138 _00117_DS_:
                      00139 ;       .line   151; stdlib/x_ftoa.c    f_l.f = num;
00008E 5000           00140         MOVF    r0x00, W
000090 0100           00141         BANKSEL _x_ftoa_f_l_1_26
000092 6F00           00142         MOVWF   _x_ftoa_f_l_1_26, B
000094 5000           00143         MOVF    r0x01, W
                      00144 ; removed redundant BANKSEL
000096 6F00           00145         MOVWF   (_x_ftoa_f_l_1_26 + 1), B
000098 5000           00146         MOVF    r0x02, W
                      00147 ; removed redundant BANKSEL
00009A 6F00           00148         MOVWF   (_x_ftoa_f_l_1_26 + 2), B
00009C 5000           00149         MOVF    r0x03, W
                      00150 ; removed redundant BANKSEL
00009E 6F00           00151         MOVWF   (_x_ftoa_f_l_1_26 + 3), B
                      00152 ; ;ic:18:       iTemp10 [k19 lr18:28 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[_x_ftoa_f_l_1_26 [k15 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{struct float_long fixed}]
                      00153 ; ;ic:19:       iTemp12 [k22 lr19:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ] = @[iTemp10 [k19 lr18:28 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00154 ;       .line   153; stdlib/x_ftoa.c    if((f_l.l & SIGNBIT) == SIGNBIT) {
0000A0 C000 F000      00155         MOVFF   _x_ftoa_f_l_1_26, r0x00
0000A4 C000 F000      00156         MOVFF   (_x_ftoa_f_l_1_26 + 1), r0x01
0000A8 C000 F000      00157         MOVFF   (_x_ftoa_f_l_1_26 + 2), r0x02
0000AC C000 F000      00158         MOVFF   (_x_ftoa_f_l_1_26 + 3), r0x03
                      00159 ; ;ic:20:       iTemp13 [k23 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x06 r0x08 r0x09 r0x0a ] = iTemp12 [k22 lr19:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ] & 0x80000000 {unsigned-long-int literal}
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000B0 6A00           00160         CLRF    r0x06
0000B2 6A00           00161         CLRF    r0x08
0000B4 6A00           00162         CLRF    r0x09
0000B6 0E80           00163         MOVLW   0x80
0000B8 1400           00164         ANDWF   r0x03, W
0000BA 6E00           00165         MOVWF   r0x0a
                      00166 ; ;ic:21:       iTemp14 [k24 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp13 [k23 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x06 r0x08 r0x09 r0x0a ] == 0x80000000 {unsigned-long-int literal}
0000BC 5000           00167         MOVF    r0x06, W
0000BE E100           00168         BNZ     _00155_DS_
0000C0 5000           00169         MOVF    r0x08, W
0000C2 E100           00170         BNZ     _00155_DS_
0000C4 5000           00171         MOVF    r0x09, W
0000C6 E100           00172         BNZ     _00155_DS_
0000C8 5000           00173         MOVF    r0x0a, W
0000CA 0A80           00174         XORLW   0x80
0000CC E000           00175         BZ      _00156_DS_
0000CE                00176 _00155_DS_:
0000CE D000           00177         BRA     _00119_DS_
                      00178 ; ;ic:22:       if iTemp14 [k24 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($5)
                      00179 ; ;ic:23:       iTemp20 [k32 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x00 r0x01 r0x02 r0x03 ] = iTemp12 [k22 lr19:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ] & 0x7fffffff {unsigned-long-int literal}
0000D0                00180 _00156_DS_:
                      00181 ;       .line   154; stdlib/x_ftoa.c    f_l.l &= ~SIGNBIT;
0000D0 9E00           00182         BCF     r0x03, 7
                      00183 ; ;ic:24:       *(iTemp10 [k19 lr18:28 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp20 [k32 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x00 r0x01 r0x02 r0x03 ]
0000D2 5000           00184         MOVF    r0x00, W
0000D4 0100           00185         BANKSEL _x_ftoa_f_l_1_26
0000D6 6F00           00186         MOVWF   _x_ftoa_f_l_1_26, B
0000D8 5000           00187         MOVF    r0x01, W
                      00188 ; removed redundant BANKSEL
0000DA 6F00           00189         MOVWF   (_x_ftoa_f_l_1_26 + 1), B
0000DC 5000           00190         MOVF    r0x02, W
                      00191 ; removed redundant BANKSEL
0000DE 6F00           00192         MOVWF   (_x_ftoa_f_l_1_26 + 2), B
0000E0 5000           00193         MOVF    r0x03, W
                      00194 ; removed redundant BANKSEL
0000E2 6F00           00195         MOVWF   (_x_ftoa_f_l_1_26 + 3), B
                      00196 ; ;ic:25:       *(iTemp1 [k4 lr4:74 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ]) := 0x2d {const-char literal}
                      00197 ;       .line   155; stdlib/x_ftoa.c    *buffer = '-';
0000E4 C000 FFE9      00198         MOVFF   r0x04, FSR0L
0000E8 C000 FFEA      00199         MOVFF   r0x05, FSR0H
0000EC 0E2D           00200         MOVLW   0x2d
0000EE 6EEF           00201         MOVWF   INDF0
                      00202 ; ;ic:26:       iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] = iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00203 ;       .line   156; stdlib/x_ftoa.c    buffer++;
0000F0 4A00           00204         INFSNZ  r0x04, F
0000F2 2A00           00205         INCF    r0x05, F
                      00206 ; ;ic:27:  _iffalse_0($5) :
                      00207 ; ;ic:28:       iTemp27 [k41 lr28:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}{ sir@ _x_ftoa_f_l_1_26} = @[iTemp10 [k19 lr18:28 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00208 ; ;ic:29:       iTemp28 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ] = iTemp27 [k41 lr28:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}{ sir@ _x_ftoa_f_l_1_26} >> 0x17 {const-unsigned-char literal}
0000F4                00209 _00119_DS_:
0000F4 0100           00210         BANKSEL (_x_ftoa_f_l_1_26 + 2)
                      00211 ;       .line   159; stdlib/x_ftoa.c    expn = EXCESS - EXP(f_l.l);     // - 24;
0000F6 3500           00212         RLCF    (_x_ftoa_f_l_1_26 + 2), W, B
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00213 ; removed redundant BANKSEL
0000F8 3500           00214         RLCF    (_x_ftoa_f_l_1_26 + 3), W, B
                      00215 ; ;ic:30:       iTemp29 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ] = iTemp28 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ] & 0xff {unsigned-long-int literal}
                      00216 ; ;ic:31:       iTemp30 [k44 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x00 ] = (unsigned-char fixed)iTemp29 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x00 r0x01 r0x02 r0x03 ]
                      00217 ; ;ic:32:       iTemp24 [k36 lr32:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_expn_1_26}[r0x00 ] = 0x7e {const-unsigned-char literal} - iTemp30 [k44 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x00 ]
0000FA 087E           00218         SUBLW   0x7e
0000FC 6E00           00219         MOVWF   r0x00
                      00220 ; ;ic:33:       iTemp36 [k52 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x01 r0x02 r0x03 r0x06 ] = iTemp27 [k41 lr28:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}{ sir@ _x_ftoa_f_l_1_26} & 0x7fffff {unsigned-long-int literal}
                      00221 ; removed redundant BANKSEL
                      00222 ;       .line   161; stdlib/x_ftoa.c    ll = MANT(f_l.l);
0000FE 5100           00223         MOVF    _x_ftoa_f_l_1_26, W, B
000100 6E00           00224         MOVWF   r0x01
                      00225 ; removed redundant BANKSEL
000102 5100           00226         MOVF    (_x_ftoa_f_l_1_26 + 1), W, B
000104 6E00           00227         MOVWF   r0x02
000106 0E7F           00228         MOVLW   0x7f
                      00229 ; removed redundant BANKSEL
000108 1500           00230         ANDWF   (_x_ftoa_f_l_1_26 + 2), W, B
00010A 6E00           00231         MOVWF   r0x03
00010C 6A00           00232         CLRF    r0x06
                      00233 ; ;ic:34:       iTemp32 [k46 lr34:71 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_ll_1_26}[r0x01 r0x02 r0x03 r0x06 ] = iTemp36 [k52 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x01 r0x02 r0x03 r0x06 ] | 0x800000 {unsigned-long-int literal}
00010E 8E00           00234         BSF     r0x03, 7
                      00235 ; ;ic:35:       iTemp38 [k54 lr35:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_li_1_26}[r0x08 r0x09 r0x0a r0x0b ] := 0x0 {unsigned-long-int literal}
                      00236 ;       .line   162; stdlib/x_ftoa.c    li = 0;
000110 6A00           00237         CLRF    r0x08
000112 6A00           00238         CLRF    r0x09
000114 6A00           00239         CLRF    r0x0a
000116 6A00           00240         CLRF    r0x0b
                      00241 ; ;ic:37:  _whilecontinue_1($11) :
                      00242 ; ;ic:38:       if iTemp24 [k36 lr32:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_expn_1_26}[r0x00 ] == 0 goto _whilebreak_1($13)
000118                00243 _00125_DS_:
                      00244 ;       .line   164; stdlib/x_ftoa.c    while( expn ) {
000118 5000           00245         MOVF    r0x00, W
00011A E000           00246         BZ      _00127_DS_
                      00247 ; ;ic:39:       iTemp39 [k56 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp24 [k36 lr32:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_expn_1_26}[r0x00 ] < 0x0 {const-char literal}
                      00248 ;       .line   165; stdlib/x_ftoa.c    if(expn < 0) {
00011C 80D8           00249         BSF     STATUS, 0
00011E AE00           00250         BTFSS   r0x00, 7
000120 90D8           00251         BCF     STATUS, 0
000122 E300           00252         BNC     _00123_DS_
                      00253 ; ;ic:40:       if iTemp39 [k56 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($9)
                      00254 ; ;ic:41:       iTemp38 [k54 lr35:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_li_1_26}[r0x08 r0x09 r0x0a r0x0b ] = iTemp38 [k54 lr35:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_li_1_26}[r0x08 r0x09 r0x0a r0x0b ] << 0x1 {const-unsigned-char literal}
                      00255 ;       .line   166; stdlib/x_ftoa.c    li <<= 1;
000124 5000           00256         MOVF    r0x08, W
000126 2600           00257         ADDWF   r0x08, F
000128 3600           00258         RLCF    r0x09, F
00012A 3600           00259         RLCF    r0x0a, F
                      00260 ; #     RLCF    r0x0b, F
                      00261 ; #;;ic:42:     iTemp41 [k58 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp32 [k46 lr34:71 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_ll_1_26}[r0x01 r0x02 r0x03 r0x06 ] & 0x800000 {const-unsigned-long-int literal}
                      00262 ; #     BTFSS   r0x03, 7
                      00263 ; #     GOTO    _00121_DS_
                      00264 ; #;;ic:43:     if iTemp41 [k58 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_1($7)
                      00265 ; #;;ic:44:     iTemp38 [k54 lr35:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_li_1_26}[r0x08 r0x09 r0x0a r0x0b ] = iTemp38 [k54 lr35:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_li_1_26}[r0x08 r0x09 r0x0a r0x0b ] | 0x1 {unsigned-long-int literal}
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00266 ; #     BSF     r0x08, 0
                      00267 ; #;;ic:45:  _iffalse_1($7) :
                      00268 ; #;;ic:46:     iTemp32 [k46 lr34:71 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_ll_1_26}[r0x01 r0x02 r0x03 r0x06 ] = iTemp32 [k46 lr34:71 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_ll_1_26}[r0x01 r0x02 r0x03 r0x06 ] << 0x1 {const-unsigned-char literal}
                      00269 ; #     MOVF    r0x01, W
                      00270 ;       .line   167; stdlib/x_ftoa.c    if(ll & 0x00800000UL)li |= 1;
00012C 3600           00271         RLCF    r0x0b, F
                      00272 ;       .line   168; stdlib/x_ftoa.c    ll <<= 1;
00012E BE00           00273         BTFSC   r0x03, 7
000130 8000           00274         BSF     r0x08, 0
000132 5000           00275         MOVF    r0x01, W
000134 2600           00276         ADDWF   r0x01, F
000136 3600           00277         RLCF    r0x02, F
000138 3600           00278         RLCF    r0x03, F
00013A 3600           00279         RLCF    r0x06, F
                      00280 ; ;ic:47:       iTemp24 [k36 lr32:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_expn_1_26}[r0x00 ] = iTemp24 [k36 lr32:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_expn_1_26}[r0x00 ] + 0x1 {const-unsigned-char literal}
                      00281 ;       .line   169; stdlib/x_ftoa.c    expn++;
00013C 2A00           00282         INCF    r0x00, F
                      00283 ; ;ic:48:        goto _whilecontinue_1($11)
00013E D000           00284         BRA     _00125_DS_
                      00285 ; ;ic:49:  _iffalse_2($9) :
                      00286 ; ;ic:50:       iTemp32 [k46 lr34:71 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_ll_1_26}[r0x01 r0x02 r0x03 r0x06 ] = iTemp32 [k46 lr34:71 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_ll_1_26}[r0x01 r0x02 r0x03 r0x06 ] >> 0x1 {const-unsigned-char literal}
000140                00287 _00123_DS_:
                      00288 ;       .line   171; stdlib/x_ftoa.c    ll >>= 1;
000140 90D8           00289         BCF     STATUS, 0
000142 3200           00290         RRCF    r0x06, F
000144 3200           00291         RRCF    r0x03, F
000146 3200           00292         RRCF    r0x02, F
000148 3200           00293         RRCF    r0x01, F
                      00294 ; ;ic:51:       iTemp24 [k36 lr32:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_expn_1_26}[r0x00 ] = iTemp24 [k36 lr32:52 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_expn_1_26}[r0x00 ] - 0x1 {const-unsigned-char literal}
                      00295 ;       .line   172; stdlib/x_ftoa.c    expn--;
00014A 0600           00296         DECF    r0x00, F
                      00297 ; ;ic:52:        goto _whilecontinue_1($11)
00014C D000           00298         BRA     _00125_DS_
                      00299 ; ;ic:53:  _whilebreak_1($13) :
                      00300 ; ;ic:54:       if iTemp38 [k54 lr35:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_li_1_26}[r0x08 r0x09 r0x0a r0x0b ] == 0 goto _iffalse_3($15)
00014E                00301 _00127_DS_:
                      00302 ;       .line   176; stdlib/x_ftoa.c    if(li)
00014E 5000           00303         MOVF    r0x08, W
000150 1000           00304         IORWF   r0x09, W
000152 1000           00305         IORWF   r0x0a, W
000154 1000           00306         IORWF   r0x0b, W
000156 E000           00307         BZ      _00129_DS_
                      00308 ; ;ic:55:       send iTemp38 [k54 lr35:56 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_li_1_26}[r0x08 r0x09 r0x0a r0x0b ]{argreg = 1}
                      00309 ; ;ic:56:       send iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ]{argreg = 2}
                      00310 ; ;ic:57:       iTemp4 [k10 lr57:77 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x00 ] = call _x_cnvint_wrap [k66 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( unsigned-long-int fixed, char near* fixed) fixed}
                      00311 ;       .line   177; stdlib/x_ftoa.c    len = x_cnvint_wrap(li, buffer);
000158 5000           00312         MOVF    r0x05, W
00015A 6EE5           00313         MOVWF   POSTDEC1
00015C 5000           00314         MOVF    r0x04, W
00015E 6EE5           00315         MOVWF   POSTDEC1
000160 5000           00316         MOVF    r0x0b, W
000162 6EE5           00317         MOVWF   POSTDEC1
000164 5000           00318         MOVF    r0x0a, W
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000166 6EE5           00319         MOVWF   POSTDEC1
000168 5000           00320         MOVF    r0x09, W
00016A 6EE5           00321         MOVWF   POSTDEC1
00016C 5000           00322         MOVF    r0x08, W
00016E 6EE5           00323         MOVWF   POSTDEC1
000170 EC00 F000      00324         CALL    _x_cnvint_wrap
000174 6E00           00325         MOVWF   r0x00
000176 0E06           00326         MOVLW   0x06
000178 26E1           00327         ADDWF   FSR1L, F
                      00328 ; ;ic:58:        goto _ifend_3($16)
00017A D000           00329         BRA     _00130_DS_
                      00330 ; ;ic:59:  _iffalse_3($15) :
                      00331 ; ;ic:60:       *(iTemp1 [k4 lr4:74 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ]) := 0x30 {const-char literal}
00017C                00332 _00129_DS_:
                      00333 ;       .line   179; stdlib/x_ftoa.c    *buffer = '0'; len = 1;
00017C C000 FFE9      00334         MOVFF   r0x04, FSR0L
000180 C000 FFEA      00335         MOVFF   r0x05, FSR0H
000184 0E30           00336         MOVLW   0x30
000186 6EEF           00337         MOVWF   INDF0
                      00338 ; ;ic:61:       iTemp4 [k10 lr57:77 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x00 ] := 0x1 {const-unsigned-char literal}
000188 0E01           00339         MOVLW   0x01
00018A 6E00           00340         MOVWF   r0x00
                      00341 ; ;ic:62:  _ifend_3($16) :
                      00342 ; ;ic:63:       iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] = iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] + iTemp4 [k10 lr57:77 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x00 ]
00018C                00343 _00130_DS_:
                      00344 ;       .line   182; stdlib/x_ftoa.c    buffer += len;
00018C 5000           00345         MOVF    r0x00, W
00018E 2600           00346         ADDWF   r0x04, F
000190 6AE8           00347         CLRF    WREG
000192 BE00           00348         BTFSC   r0x00, 7
000194 68E8           00349         SETF    WREG
000196 2200           00350         ADDWFC  r0x05, F
                      00351 ; ;ic:64:       if iTemp3 [k8 lr6:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _x_ftoa_prec_1_25}[r0x07 ] == 0 goto _iffalse_4($18)
                      00352 ;       .line   184; stdlib/x_ftoa.c    if(prec) {
000198 5000           00353         MOVF    r0x07, W
00019A E000           00354         BZ      _00132_DS_
                      00355 ; ;ic:65:       *(iTemp1 [k4 lr4:74 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ]) := 0x2e {const-char literal}
                      00356 ;       .line   185; stdlib/x_ftoa.c    *buffer = '.'; len++;
00019C C000 FFE9      00357         MOVFF   r0x04, FSR0L
0001A0 C000 FFEA      00358         MOVFF   r0x05, FSR0H
0001A4 0E2E           00359         MOVLW   0x2e
0001A6 6EEF           00360         MOVWF   INDF0
                      00361 ; ;ic:66:       iTemp4 [k10 lr57:77 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x00 ] = iTemp4 [k10 lr57:77 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x00 ] + 0x1 {const-unsigned-char literal}
0001A8 2A00           00362         INCF    r0x00, F
                      00363 ; ;ic:67:       iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] = iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
                      00364 ;       .line   186; stdlib/x_ftoa.c    buffer++;
0001AA 4A00           00365         INFSNZ  r0x04, F
0001AC 2A00           00366         INCF    r0x05, F
                      00367 ; ;ic:68:       iTemp57 [k78 lr68:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x08 ] = 0x18 {const-unsigned-char literal} - iTemp3 [k8 lr6:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _x_ftoa_prec_1_25}[r0x07 ]
                      00368 ;       .line   188; stdlib/x_ftoa.c    len += x_cnvfrac_wrap(ll, buffer, 24-prec);
0001AE 5000           00369         MOVF    r0x07, W
0001B0 0818           00370         SUBLW   0x18
                      00371 ; #     MOVWF   r0x08
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00372 ; #;;ic:69:     send iTemp32 [k46 lr34:71 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ _x_ftoa_ll_1_26}[r0x01 r0x02 r0x03 r0x06 ]{argreg = 1}
                      00373 ; #;;ic:70:     send iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ]{argreg = 2}
                      00374 ; #;;ic:71:     send iTemp57 [k78 lr68:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x08 ]{argreg = 3}
                      00375 ; #;;ic:72:     iTemp58 [k82 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x01 ] = call _x_cnvfrac_wrap [k77 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
                      00376 ; #     MOVF    r0x08, W
0001B2 6EE5           00377         MOVWF   POSTDEC1
0001B4 5000           00378         MOVF    r0x05, W
0001B6 6EE5           00379         MOVWF   POSTDEC1
0001B8 5000           00380         MOVF    r0x04, W
0001BA 6EE5           00381         MOVWF   POSTDEC1
0001BC 5000           00382         MOVF    r0x06, W
0001BE 6EE5           00383         MOVWF   POSTDEC1
0001C0 5000           00384         MOVF    r0x03, W
0001C2 6EE5           00385         MOVWF   POSTDEC1
0001C4 5000           00386         MOVF    r0x02, W
0001C6 6EE5           00387         MOVWF   POSTDEC1
0001C8 5000           00388         MOVF    r0x01, W
0001CA 6EE5           00389         MOVWF   POSTDEC1
0001CC EC00 F000      00390         CALL    _x_cnvfrac_wrap
0001D0 6E00           00391         MOVWF   r0x01
0001D2 0E07           00392         MOVLW   0x07
0001D4 26E1           00393         ADDWF   FSR1L, F
                      00394 ; ;ic:73:       iTemp4 [k10 lr57:77 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x00 ] = iTemp4 [k10 lr57:77 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x00 ] + iTemp58 [k82 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x01 ]
0001D6 5000           00395         MOVF    r0x01, W
0001D8 2600           00396         ADDWF   r0x00, F
                      00397 ; ;ic:74:       iTemp60 [k84 lr74:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* data}[r0x04 r0x05 ] = iTemp1 [k4 lr4:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char near* data}{ sir@ _x_ftoa_buffer_1_25}[r0x04 r0x05 ] + iTemp3 [k8 lr6:74 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _x_ftoa_prec_1_25}[r0x07 ]
                      00398 ;       .line   189; stdlib/x_ftoa.c    buffer[ prec ] = '\0';
0001DA 5000           00399         MOVF    r0x07, W
0001DC 2600           00400         ADDWF   r0x04, F
0001DE 6AE8           00401         CLRF    WREG
0001E0 2200           00402         ADDWFC  r0x05, F
                      00403 ; ;ic:75:       *(iTemp60 [k84 lr74:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* data}[r0x04 r0x05 ]) := 0x0 {const-char literal}
0001E2 C000 FFE9      00404         MOVFF   r0x04, FSR0L
0001E6 C000 FFEA      00405         MOVFF   r0x05, FSR0H
0001EA 6AEF           00406         CLRF    INDF0
                      00407 ; ;ic:76:  _iffalse_4($18) :
                      00408 ; ;ic:77:       ret iTemp4 [k10 lr57:77 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _x_ftoa_len_1_26}[r0x00 ]
0001EC                00409 _00132_DS_:
                      00410 ;       .line   192; stdlib/x_ftoa.c    return (len);
0001EC 5000           00411         MOVF    r0x00, W
                      00412 ; ;ic:78:  _return($19) :
                      00413 ; ;ic:79:       eproc _x_ftoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, char near* data, unsigned-char fixed, unsigned-char fixed) fixed}
0001EE CFE4 F000      00414         MOVFF   PREINC1, r0x0b
0001F2 CFE4 F000      00415         MOVFF   PREINC1, r0x0a
0001F6 CFE4 F000      00416         MOVFF   PREINC1, r0x09
0001FA CFE4 F000      00417         MOVFF   PREINC1, r0x08
0001FE CFE4 F000      00418         MOVFF   PREINC1, r0x07
000202 CFE4 F000      00419         MOVFF   PREINC1, r0x06
000206 CFE4 F000      00420         MOVFF   PREINC1, r0x05
00020A CFE4 F000      00421         MOVFF   PREINC1, r0x04
00020E CFE4 F000      00422         MOVFF   PREINC1, r0x03
000212 CFE4 F000      00423         MOVFF   PREINC1, r0x02
000216 CFE4 F000      00424         MOVFF   PREINC1, r0x01
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00021A CFE4 F000      00425         MOVFF   PREINC1, r0x00
00021E CFE4 FFD9      00426         MOVFF   PREINC1, FSR2L
000222 0012           00427         RETURN  
                      00428 
                      00429 ; ; Starting pCode block
                      00430 ; ;ic:1:  _entry($2) :
                      00431 ; ;ic:2:        proc _x_cnvfrac_wrap [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
                      00432 S_x_ftoa__x_cnvfrac_wrap        code
000000                00433 _x_cnvfrac_wrap:
                      00434 ;       .line   90; stdlib/x_ftoa.c     char x_cnvfrac_wrap(unsigned long num, __data char *buffer, unsigned char prec)
000000 CFD9 FFE5      00435         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00436         MOVFF   FSR1L, FSR2L
                      00437 ; ;ic:3: inline
000008 C000 F000      00438         movff 0x00, _POSTDEC1
00000C C001 F000      00439         movff 0x01, _POSTDEC1
000010 C002 F000      00440         movff 0x02, _POSTDEC1
000014 C003 F000      00441         movff 0x03, _POSTDEC1
000018 C004 F000      00442         movff 0x04, _POSTDEC1
00001C 0E02           00443         movlw 2
00001E C000 F000      00444         movff _PLUSW2, 0x00
000022 0E03           00445         movlw 3
000024 C000 F001      00446         movff _PLUSW2, 0x01
000028 0E04           00447         movlw 4
00002A C000 F002      00448         movff _PLUSW2, 0x02
00002E 0E05           00449         movlw 5
000030 C000 F003      00450         movff _PLUSW2, 0x03
000034 0E06           00451         movlw 6
000036 C000 F000      00452         movff _PLUSW2, _FSR0L
00003A 0E07           00453         movlw 7
00003C C000 F000      00454         movff _PLUSW2, _FSR0H
000040 0E08           00455         movlw 8
000042 C000 F004      00456         movff _PLUSW2, 0x04
000046 EC00 F000      00457         call _convert_frac
00004A C000 F004      00458         movff _PREINC1, 0x04
00004E C000 F003      00459         movff _PREINC1, 0x03
000052 C000 F002      00460         movff _PREINC1, 0x02
000056 C000 F001      00461         movff _PREINC1, 0x01
00005A C000 F000      00462         movff _PREINC1, 0x00
                      00463         
                      00464 ; ;ic:4:  _return($1) :
                      00465 ; ;ic:5:        eproc _x_cnvfrac_wrap [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( unsigned-long-int fixed, char near* fixed, unsigned-char fixed) fixed}
00005E CFE4 FFD9      00466         MOVFF   PREINC1, FSR2L
000062 0012           00467         RETURN  
                      00468 
                      00469 ; ; Starting pCode block
                      00470 ; ;ic:1:  _entry($2) :
                      00471 ; ;ic:2:        proc _x_cnvint_wrap [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( unsigned-long-int fixed, char near* fixed) fixed}
                      00472 S_x_ftoa__x_cnvint_wrap code
000000                00473 _x_cnvint_wrap:
                      00474 ;       .line   57; stdlib/x_ftoa.c     char x_cnvint_wrap(unsigned long num, __data char *buffer)
000000 CFD9 FFE5      00475         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00476         MOVFF   FSR1L, FSR2L
                      00477 ; ;ic:3: inline
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000008 C000 F000      00478         movff 0x00, _POSTDEC1
00000C C001 F000      00479         movff 0x01, _POSTDEC1
000010 C002 F000      00480         movff 0x02, _POSTDEC1
000014 C003 F000      00481         movff 0x03, _POSTDEC1
000018 0E02           00482         movlw 2
00001A C000 F000      00483         movff _PLUSW2, 0x00
00001E 0E03           00484         movlw 3
000020 C000 F001      00485         movff _PLUSW2, 0x01
000024 0E04           00486         movlw 4
000026 C000 F002      00487         movff _PLUSW2, 0x02
00002A 0E05           00488         movlw 5
00002C C000 F003      00489         movff _PLUSW2, 0x03
000030 0E06           00490         movlw 6
000032 C000 F000      00491         movff _PLUSW2, _FSR0L
000036 0E07           00492         movlw 7
000038 C000 F000      00493         movff _PLUSW2, _FSR0H
00003C EC00 F000      00494         call _convert_int
000040 C000 F003      00495         movff _PREINC1, 0x03
000044 C000 F002      00496         movff _PREINC1, 0x02
000048 C000 F001      00497         movff _PREINC1, 0x01
00004C C000 F000      00498         movff _PREINC1, 0x00
                      00499         
                      00500 ; ;ic:4:  _return($1) :
                      00501 ; ;ic:5:        eproc _x_cnvint_wrap [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( unsigned-long-int fixed, char near* fixed) fixed}
000050 CFE4 FFD9      00502         MOVFF   PREINC1, FSR2L
000054 0012           00503         RETURN  
                      00504 
                      00505 
                      00506 
                      00507 ; Statistics:
                      00508 ; code size:      672 (0x02a0) bytes ( 0.51%)
                      00509 ;                 336 (0x0150) words
                      00510 ; udata size:       4 (0x0004) bytes ( 0.31%)
                      00511 ; access size:     12 (0x000c) bytes
                      00512 
                      00513 
                      00514         end
gpasm-0.14.1 (Aug 18 2017)   x_ftoa.asm         8-18-2017  19:22:01          PAGE 11


SYMBOL TABLE
  LABEL                             VALUE

FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
STATUS                            00000FD8
WREG                              00000FE8
_00115_DS_                        00000068
_00117_DS_                        0000008E
_00119_DS_                        000000F4
_00123_DS_                        00000140
_00125_DS_                        00000118
_00127_DS_                        0000014E
_00129_DS_                        0000017C
_00130_DS_                        0000018C
_00132_DS_                        000001EC
_00155_DS_                        000000CE
_00156_DS_                        000000D0
_FSR0H                            00000000
_FSR0L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_PLUSW2                           00000000
_POSTDEC1                         00000000
_PREINC1                          00000000
_PREINC2                          00000000
__18F452                          00000001
_convert_frac                     00000000
_convert_int                      00000000
_x_cnvfrac_wrap                   00000000
_x_cnvint_wrap                    00000000
_x_ftoa                           00000000
_x_ftoa_f_l_1_26                  00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

