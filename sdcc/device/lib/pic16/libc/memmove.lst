gpasm-0.14.1 (Aug 18 2017)   memmove.asm        8-18-2017  19:22:09          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:09 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _memmove
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021         extern  __gptrput1
                      00022 
                      00023 ;--------------------------------------------------------
                      00024 ;       Equates to used internal registers
                      00025 ;--------------------------------------------------------
  00000FD8            00026 STATUS  equ     0xfd8
  00000FE8            00027 WREG    equ     0xfe8
  00000FE9            00028 FSR0L   equ     0xfe9
  00000FE1            00029 FSR1L   equ     0xfe1
  00000FD9            00030 FSR2L   equ     0xfd9
  00000FE5            00031 POSTDEC1        equ     0xfe5
  00000FE4            00032 PREINC1 equ     0xfe4
  00000FDB            00033 PLUSW2  equ     0xfdb
  00000FF3            00034 PRODL   equ     0xff3
  00000FF4            00035 PRODH   equ     0xff4
                      00036 
                      00037 
                      00038 ; Internal registers
                      00039 .registers      udata_ovr       0x0000
000000                00040 r0x00   res     1
000001                00041 r0x01   res     1
000002                00042 r0x02   res     1
000003                00043 r0x03   res     1
000004                00044 r0x04   res     1
000005                00045 r0x05   res     1
000006                00046 r0x06   res     1
000007                00047 r0x07   res     1
000008                00048 r0x08   res     1
000009                00049 r0x09   res     1
00000A                00050 r0x0a   res     1
00000B                00051 r0x0b   res     1
00000C                00052 r0x0c   res     1
00000D                00053 r0x0d   res     1
gpasm-0.14.1 (Aug 18 2017)   memmove.asm        8-18-2017  19:22:09          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00000E                00054 r0x0e   res     1
00000F                00055 r0x0f   res     1
000010                00056 r0x10   res     1
000011                00057 r0x11   res     1
                      00058 
                      00059 ;--------------------------------------------------------
                      00060 ; global & static initialisations
                      00061 ;--------------------------------------------------------
                      00062 ; I code from now on!
                      00063 ; ; Starting pCode block
                      00064 ; ;ic:1:  _entry($12) :
                      00065 ; ;ic:2:        proc _memmove [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void generic* function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
                      00066 S_memmove__memmove      code
000000                00067 _memmove:
                      00068 ;       .line   33; string/memmove.c    memmove (void *dst, void *src, size_t acount) 
000000 CFD9 FFE5      00069         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00070         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00071         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00072         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00073         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00074         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00075         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00076         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00077         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00078         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00079         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00080         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00081         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00082         MOVFF   r0x0b, POSTDEC1
000038 C000 FFE5      00083         MOVFF   r0x0c, POSTDEC1
00003C C000 FFE5      00084         MOVFF   r0x0d, POSTDEC1
000040 C000 FFE5      00085         MOVFF   r0x0e, POSTDEC1
000044 C000 FFE5      00086         MOVFF   r0x0f, POSTDEC1
000048 C000 FFE5      00087         MOVFF   r0x10, POSTDEC1
00004C C000 FFE5      00088         MOVFF   r0x11, POSTDEC1
                      00089 ; ;ic:3: iTemp0 [k2 lr3:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_dst_1_28}[r0x00 r0x01 r0x02 ] = recv _memmove [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void generic* function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
000050 0E02           00090         MOVLW   0x02
000052 CFDB F000      00091         MOVFF   PLUSW2, r0x00
000056 0E03           00092         MOVLW   0x03
000058 CFDB F000      00093         MOVFF   PLUSW2, r0x01
00005C 0E04           00094         MOVLW   0x04
00005E CFDB F000      00095         MOVFF   PLUSW2, r0x02
                      00096 ; ;ic:4: iTemp1 [k4 lr4:36 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_src_1_28}[r0x03 r0x04 r0x05 ] = recv _memmove [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void generic* function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
000062 0E05           00097         MOVLW   0x05
000064 CFDB F000      00098         MOVFF   PLUSW2, r0x03
000068 0E06           00099         MOVLW   0x06
00006A CFDB F000      00100         MOVFF   PLUSW2, r0x04
00006E 0E07           00101         MOVLW   0x07
000070 CFDB F000      00102         MOVFF   PLUSW2, r0x05
                      00103 ; ;ic:5: iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memmove_acount_1_28}[r0x06 r0x07 ] = recv _memmove [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void generic* function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
000074 0E08           00104         MOVLW   0x08
000076 CFDB F000      00105         MOVFF   PLUSW2, r0x06
00007A 0E09           00106         MOVLW   0x09
gpasm-0.14.1 (Aug 18 2017)   memmove.asm        8-18-2017  19:22:09          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007C CFDB F000      00107         MOVFF   PLUSW2, r0x07
                      00108 ; ;ic:6:        iTemp3 [k8 lr6:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x08 r0x09 ] = (int fixed)iTemp1 [k4 lr4:36 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_src_1_28}[r0x03 r0x04 r0x05 ]
                      00109 ;       .line   38; string/memmove.c    if (((int)src < (int)dst) && ((((int)src) + acount) > (int)dst))
000080 5000           00110         MOVF    r0x03, W
000082 6E00           00111         MOVWF   r0x08
000084 5000           00112         MOVF    r0x04, W
000086 6E00           00113         MOVWF   r0x09
                      00114 ; ;ic:7:        iTemp4 [k9 lr7:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0a r0x0b ] = (int fixed)iTemp0 [k2 lr3:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_dst_1_28}[r0x00 r0x01 r0x02 ]
000088 5000           00115         MOVF    r0x00, W
00008A 6E00           00116         MOVWF   r0x0a
00008C 5000           00117         MOVF    r0x01, W
00008E 6E00           00118         MOVWF   r0x0b
                      00119 ; ;ic:8:        iTemp5 [k10 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k8 lr6:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x08 r0x09 ] < iTemp4 [k9 lr7:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0a r0x0b ]
000090 5000           00120         MOVF    r0x09, W
000092 0F80           00121         ADDLW   0x80
000094 6EF3           00122         MOVWF   PRODL
000096 5000           00123         MOVF    r0x0b, W
000098 0F80           00124         ADDLW   0x80
00009A 5CF3           00125         SUBWF   PRODL, W
00009C E100           00126         BNZ     _00131_DS_
00009E 5000           00127         MOVF    r0x0a, W
0000A0 5C00           00128         SUBWF   r0x08, W
0000A2                00129 _00131_DS_:
0000A2 B0D8           00130         BTFSC   STATUS, 0
0000A4 D000           00131         BRA     _00112_DS_
                      00132 ; ;ic:9:        if iTemp5 [k10 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($8)
                      00133 ; ;ic:10:       iTemp7 [k12 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x08 r0x09 ] = (unsigned-int fixed)iTemp3 [k8 lr6:10 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x08 r0x09 ]
                      00134 ; ;ic:11:       iTemp8 [k13 lr11:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x08 r0x09 ] = iTemp7 [k12 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x08 r0x09 ] + iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memmove_acount_1_28}[r0x06 r0x07 ]
0000A6 5000           00135         MOVF    r0x06, W
0000A8 2600           00136         ADDWF   r0x08, F
0000AA 5000           00137         MOVF    r0x07, W
0000AC 2200           00138         ADDWFC  r0x09, F
                      00139 ; ;ic:12:       iTemp10 [k15 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x0a r0x0b ] = (unsigned-int fixed)iTemp4 [k9 lr7:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x0a r0x0b ]
                      00140 ; ;ic:13:       iTemp11 [k16 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp8 [k13 lr11:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x08 r0x09 ] > iTemp10 [k15 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x0a r0x0b ]
0000AE 5000           00141         MOVF    r0x09, W
0000B0 5C00           00142         SUBWF   r0x0b, W
0000B2 E100           00143         BNZ     _00132_DS_
0000B4 5000           00144         MOVF    r0x08, W
0000B6 5C00           00145         SUBWF   r0x0a, W
0000B8                00146 _00132_DS_:
0000B8 B0D8           00147         BTFSC   STATUS, 0
0000BA D000           00148         BRA     _00112_DS_
                      00149 ; ;ic:14:       if iTemp11 [k16 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($8)
                      00150 ; ;ic:15:       iTemp13 [k19 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] = (char generic* fixed)iTemp0 [k2 lr3:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_dst_1_28}[r0x00 r0x01 r0x02 ]
                      00151 ;       .line   43; string/memmove.c    d = ((char *)dst) + acount - 1;
0000BC 5000           00152         MOVF    r0x02, W
0000BE 6E00           00153         MOVWF   r0x0a
0000C0 5000           00154         MOVF    r0x01, W
0000C2 6E00           00155         MOVWF   r0x09
0000C4 5000           00156         MOVF    r0x00, W
0000C6 6E00           00157         MOVWF   r0x08
                      00158 ; ;ic:16:       iTemp14 [k20 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] = iTemp13 [k19 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] + iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memmove_acount_1_28}[r0x06 r0x07 ]
0000C8 5000           00159         MOVF    r0x06, W
gpasm-0.14.1 (Aug 18 2017)   memmove.asm        8-18-2017  19:22:09          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000CA 2600           00160         ADDWF   r0x08, F
0000CC 5000           00161         MOVF    r0x07, W
0000CE 2200           00162         ADDWFC  r0x09, F
0000D0 6AE8           00163         CLRF    WREG
0000D2 2200           00164         ADDWFC  r0x0a, F
                      00165 ; ;ic:17:       iTemp12 [k17 lr17:22 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _memmove_d_1_29}[r0x08 r0x09 r0x0a ] = iTemp14 [k20 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] - 0x1 {unsigned-bit literal}
0000D4 0EFF           00166         MOVLW   0xff
0000D6 2600           00167         ADDWF   r0x08, F
0000D8 2200           00168         ADDWFC  r0x09, F
0000DA 2200           00169         ADDWFC  r0x0a, F
                      00170 ; ;ic:18:       iTemp17 [k24 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] = (char generic* fixed)iTemp1 [k4 lr4:36 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_src_1_28}[r0x03 r0x04 r0x05 ]
                      00171 ;       .line   44; string/memmove.c    s = ((char *)src) + acount - 1;
0000DC 5000           00172         MOVF    r0x05, W
0000DE 6E00           00173         MOVWF   r0x0d
0000E0 5000           00174         MOVF    r0x04, W
0000E2 6E00           00175         MOVWF   r0x0c
0000E4 5000           00176         MOVF    r0x03, W
0000E6 6E00           00177         MOVWF   r0x0b
                      00178 ; ;ic:19:       iTemp18 [k25 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] = iTemp17 [k24 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] + iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memmove_acount_1_28}[r0x06 r0x07 ]
0000E8 5000           00179         MOVF    r0x06, W
0000EA 2600           00180         ADDWF   r0x0b, F
0000EC 5000           00181         MOVF    r0x07, W
0000EE 2200           00182         ADDWFC  r0x0c, F
0000F0 6AE8           00183         CLRF    WREG
0000F2 2200           00184         ADDWFC  r0x0d, F
                      00185 ; ;ic:20:       iTemp16 [k22 lr20:21 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _memmove_s_1_29}[r0x0b r0x0c r0x0d ] = iTemp18 [k25 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] - 0x1 {unsigned-bit literal}
0000F4 0EFF           00186         MOVLW   0xff
0000F6 2600           00187         ADDWF   r0x0b, F
0000F8 2200           00188         ADDWFC  r0x0c, F
0000FA 2200           00189         ADDWFC  r0x0d, F
                      00190 ; ;ic:21:       iTemp25 [k32 lr21:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] := iTemp16 [k22 lr20:21 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _memmove_s_1_29}[r0x0b r0x0c r0x0d ]
                      00191 ; ;ic:22:       iTemp23 [k30 lr22:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] := iTemp12 [k17 lr17:22 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _memmove_d_1_29}[r0x08 r0x09 r0x0a ]
                      00192 ; ;ic:23:       iTemp21 [k28 lr23:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x0e r0x0f ] := iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memmove_acount_1_28}[r0x06 r0x07 ]
                      00193 ;       .line   45; string/memmove.c    while (acount--)
0000FC C000 F000      00194         MOVFF   r0x06, r0x0e
000100 C000 F000      00195         MOVFF   r0x07, r0x0f
                      00196 ; ;ic:25:  _whilecontinue_0($1) :
                      00197 ; ;ic:26:       iTemp20 [k27 lr26:28 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-int fixed}[r0x10 r0x11 ] := iTemp21 [k28 lr23:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x0e r0x0f ]
000104                00198 _00105_DS_:
000104 C000 F000      00199         MOVFF   r0x0e, r0x10
000108 C000 F000      00200         MOVFF   r0x0f, r0x11
                      00201 ; ;ic:27:       iTemp21 [k28 lr23:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x0e r0x0f ] = iTemp21 [k28 lr23:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x0e r0x0f ] - 0x1 {const-unsigned-char literal}
00010C 0EFF           00202         MOVLW   0xff
00010E 2600           00203         ADDWF   r0x0e, F
000110 2200           00204         ADDWFC  r0x0f, F
                      00205 ; ;ic:28:       if iTemp20 [k27 lr26:28 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-int fixed}[r0x10 r0x11 ] == 0 goto _ifend_0($9)
000112 5000           00206         MOVF    r0x10, W
000114 1000           00207         IORWF   r0x11, W
000116 B4D8           00208         BTFSC   STATUS, 2
000118 D000           00209         BRA     _00113_DS_
                      00210 ; ;ic:29:       iTemp26 [k33 lr29:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x10 ] = @[iTemp25 [k32 lr21:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
                      00211 ;       .line   46; string/memmove.c    *d-- = *s--;
00011A C000 FFE9      00212         MOVFF   r0x0b, FSR0L
gpasm-0.14.1 (Aug 18 2017)   memmove.asm        8-18-2017  19:22:09          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00011E C000 FFF3      00213         MOVFF   r0x0c, PRODL
000122 5000           00214         MOVF    r0x0d, W
000124 EC00 F000      00215         CALL    __gptrget1
000128 6E00           00216         MOVWF   r0x10
                      00217 ; ;ic:30:       iTemp25 [k32 lr21:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] = iTemp25 [k32 lr21:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] - 0x1 {const-unsigned-char literal}
00012A 0EFF           00218         MOVLW   0xff
00012C 2600           00219         ADDWF   r0x0b, F
00012E 2200           00220         ADDWFC  r0x0c, F
000130 2200           00221         ADDWFC  r0x0d, F
                      00222 ; ;ic:31:       *(iTemp23 [k30 lr22:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ]) := iTemp26 [k33 lr29:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x10 ]
000132 C000 FFE5      00223         MOVFF   r0x10, POSTDEC1
000136 C000 FFE9      00224         MOVFF   r0x08, FSR0L
00013A C000 FFF3      00225         MOVFF   r0x09, PRODL
00013E 5000           00226         MOVF    r0x0a, W
000140 EC00 F000      00227         CALL    __gptrput1
                      00228 ; ;ic:32:       iTemp23 [k30 lr22:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] = iTemp23 [k30 lr22:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] - 0x1 {const-unsigned-char literal}
000144 0EFF           00229         MOVLW   0xff
000146 2600           00230         ADDWF   r0x08, F
000148 2200           00231         ADDWFC  r0x09, F
00014A 2200           00232         ADDWFC  r0x0a, F
                      00233 ; ;ic:33:        goto _whilecontinue_0($1)
00014C D000           00234         BRA     _00105_DS_
                      00235 ; ;ic:34:  _iffalse_0($8) :
                      00236 ; ;ic:35:       iTemp32 [k39 lr35:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] = (char generic* fixed)iTemp0 [k2 lr3:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_dst_1_28}[r0x00 r0x01 r0x02 ]
00014E                00237 _00112_DS_:
                      00238 ;       .line   53; string/memmove.c    d = dst;
00014E 5000           00239         MOVF    r0x02, W
000150 6E00           00240         MOVWF   r0x0a
000152 5000           00241         MOVF    r0x01, W
000154 6E00           00242         MOVWF   r0x09
000156 5000           00243         MOVF    r0x00, W
                      00244 ;       .line   54; string/memmove.c    s = src;
000158 6E00           00245         MOVWF   r0x08
                      00246 ; ;ic:36:       iTemp34 [k41 lr36:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] = (char generic* fixed)iTemp1 [k4 lr4:36 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_src_1_28}[r0x03 r0x04 r0x05 ]
                      00247 ; #     MOVF    r0x05, W
                      00248 ; #     MOVWF   r0x05
                      00249 ; #     MOVF    r0x05, W
                      00250 ; #     MOVF    r0x04, W
                      00251 ; #     MOVF    r0x04, W
                      00252 ; #     MOVWF   r0x04
                      00253 ; #     MOVF    r0x04, W
                      00254 ; #     MOVF    r0x03, W
                      00255 ; #     MOVF    r0x03, W
                      00256 ; #     MOVWF   r0x03
                      00257 ; #;;ic:37:     iTemp30 [k37 lr37:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] := iTemp2 [k6 lr5:37 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _memmove_acount_1_28}[r0x06 r0x07 ]
                      00258 ; #;;ic:39:  _whilecontinue_1($4) :
                      00259 ; #;;ic:40:     iTemp29 [k36 lr40:42 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-int fixed}[r0x0b r0x0c ] := iTemp30 [k37 lr37:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ]
00015A                00260 _00108_DS_:
                      00261 ;       .line   55; string/memmove.c    while (acount--)
00015A C000 F000      00262         MOVFF   r0x06, r0x0b
00015E C000 F000      00263         MOVFF   r0x07, r0x0c
                      00264 ; ;ic:41:       iTemp30 [k37 lr37:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] = iTemp30 [k37 lr37:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] - 0x1 {const-unsigned-char literal}
000162 0EFF           00265         MOVLW   0xff
gpasm-0.14.1 (Aug 18 2017)   memmove.asm        8-18-2017  19:22:09          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000164 2600           00266         ADDWF   r0x06, F
000166 2200           00267         ADDWFC  r0x07, F
                      00268 ; ;ic:42:       if iTemp29 [k36 lr40:42 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-int fixed}[r0x0b r0x0c ] == 0 goto _ifend_0($9)
000168 5000           00269         MOVF    r0x0b, W
00016A 1000           00270         IORWF   r0x0c, W
00016C E000           00271         BZ      _00113_DS_
                      00272 ; ;ic:43:       iTemp35 [k42 lr43:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0b ] = @[iTemp34 [k41 lr36:47 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
                      00273 ;       .line   56; string/memmove.c    *d++ = *s++;
00016E C000 FFE9      00274         MOVFF   r0x03, FSR0L
000172 C000 FFF3      00275         MOVFF   r0x04, PRODL
000176 5000           00276         MOVF    r0x05, W
000178 EC00 F000      00277         CALL    __gptrget1
00017C 6E00           00278         MOVWF   r0x0b
                      00279 ; ;ic:44:       iTemp34 [k41 lr36:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] = iTemp34 [k41 lr36:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
00017E 2A00           00280         INCF    r0x03, F
000180 E300           00281         BNC     _00133_DS_
000182 4A00           00282         INFSNZ  r0x04, F
000184 2A00           00283         INCF    r0x05, F
                      00284 ; ;ic:45:       *(iTemp32 [k39 lr35:47 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ]) := iTemp35 [k42 lr43:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0b ]
000186                00285 _00133_DS_:
000186 C000 FFE5      00286         MOVFF   r0x0b, POSTDEC1
00018A C000 FFE9      00287         MOVFF   r0x08, FSR0L
00018E C000 FFF3      00288         MOVFF   r0x09, PRODL
000192 5000           00289         MOVF    r0x0a, W
000194 EC00 F000      00290         CALL    __gptrput1
                      00291 ; ;ic:46:       iTemp32 [k39 lr35:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] = iTemp32 [k39 lr35:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x08 r0x09 r0x0a ] + 0x1 {const-unsigned-char literal}
000198 2A00           00292         INCF    r0x08, F
00019A E300           00293         BNC     _00108_DS_
00019C 4A00           00294         INFSNZ  r0x09, F
00019E 2A00           00295         INCF    r0x0a, F
                      00296 ; ;ic:47:        goto _whilecontinue_1($4)
0001A0                00297 _00134_DS_:
0001A0 D000           00298         BRA     _00108_DS_
                      00299 ; ;ic:48:  _ifend_0($9) :
                      00300 ; ;ic:49:       ret iTemp0 [k2 lr3:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{void generic* fixed}{ sir@ _memmove_dst_1_28}[r0x00 r0x01 r0x02 ]
0001A2                00301 _00113_DS_:
                      00302 ;       .line   59; string/memmove.c    return dst;
0001A2 C000 FFF4      00303         MOVFF   r0x02, PRODH
0001A6 C000 FFF3      00304         MOVFF   r0x01, PRODL
0001AA 5000           00305         MOVF    r0x00, W
                      00306 ; ;ic:50:  _return($11) :
                      00307 ; ;ic:51:       eproc _memmove [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void generic* function ( void generic* fixed, void generic* fixed, unsigned-int fixed) fixed}
0001AC CFE4 F000      00308         MOVFF   PREINC1, r0x11
0001B0 CFE4 F000      00309         MOVFF   PREINC1, r0x10
0001B4 CFE4 F000      00310         MOVFF   PREINC1, r0x0f
0001B8 CFE4 F000      00311         MOVFF   PREINC1, r0x0e
0001BC CFE4 F000      00312         MOVFF   PREINC1, r0x0d
0001C0 CFE4 F000      00313         MOVFF   PREINC1, r0x0c
0001C4 CFE4 F000      00314         MOVFF   PREINC1, r0x0b
0001C8 CFE4 F000      00315         MOVFF   PREINC1, r0x0a
0001CC CFE4 F000      00316         MOVFF   PREINC1, r0x09
0001D0 CFE4 F000      00317         MOVFF   PREINC1, r0x08
0001D4 CFE4 F000      00318         MOVFF   PREINC1, r0x07
gpasm-0.14.1 (Aug 18 2017)   memmove.asm        8-18-2017  19:22:09          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001D8 CFE4 F000      00319         MOVFF   PREINC1, r0x06
0001DC CFE4 F000      00320         MOVFF   PREINC1, r0x05
0001E0 CFE4 F000      00321         MOVFF   PREINC1, r0x04
0001E4 CFE4 F000      00322         MOVFF   PREINC1, r0x03
0001E8 CFE4 F000      00323         MOVFF   PREINC1, r0x02
0001EC CFE4 F000      00324         MOVFF   PREINC1, r0x01
0001F0 CFE4 F000      00325         MOVFF   PREINC1, r0x00
0001F4 CFE4 FFD9      00326         MOVFF   PREINC1, FSR2L
0001F8 0012           00327         RETURN  
                      00328 
                      00329 
                      00330 
                      00331 ; Statistics:
                      00332 ; code size:      506 (0x01fa) bytes ( 0.39%)
                      00333 ;                 253 (0x00fd) words
                      00334 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00335 ; access size:     18 (0x0012) bytes
                      00336 
                      00337 
                      00338         end
gpasm-0.14.1 (Aug 18 2017)   memmove.asm        8-18-2017  19:22:09          PAGE  8


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00105_DS_                        00000104
_00108_DS_                        0000015A
_00112_DS_                        0000014E
_00113_DS_                        000001A2
_00131_DS_                        000000A2
_00132_DS_                        000000B8
_00133_DS_                        00000186
_00134_DS_                        000001A0
__18F452                          00000001
__gptrget1                        00000000
__gptrput1                        00000000
_memmove                          00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

