gpasm-0.14.1 (Aug 18 2017)   strcpy.asm         8-18-2017  19:22:16          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:16 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _strcpy
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021         extern  __gptrput1
                      00022 
                      00023 ;--------------------------------------------------------
                      00024 ;       Equates to used internal registers
                      00025 ;--------------------------------------------------------
  00000FD8            00026 STATUS  equ     0xfd8
  00000FE8            00027 WREG    equ     0xfe8
  00000FE9            00028 FSR0L   equ     0xfe9
  00000FE1            00029 FSR1L   equ     0xfe1
  00000FD9            00030 FSR2L   equ     0xfd9
  00000FE5            00031 POSTDEC1        equ     0xfe5
  00000FE4            00032 PREINC1 equ     0xfe4
  00000FDB            00033 PLUSW2  equ     0xfdb
  00000FF3            00034 PRODL   equ     0xff3
  00000FF4            00035 PRODH   equ     0xff4
                      00036 
                      00037 
                      00038 ; Internal registers
                      00039 .registers      udata_ovr       0x0000
000000                00040 r0x00   res     1
000001                00041 r0x01   res     1
000002                00042 r0x02   res     1
000003                00043 r0x03   res     1
000004                00044 r0x04   res     1
000005                00045 r0x05   res     1
000006                00046 r0x06   res     1
000007                00047 r0x07   res     1
000008                00048 r0x08   res     1
000009                00049 r0x09   res     1
                      00050 
                      00051 ;--------------------------------------------------------
                      00052 ; global & static initialisations
                      00053 ;--------------------------------------------------------
gpasm-0.14.1 (Aug 18 2017)   strcpy.asm         8-18-2017  19:22:16          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ; I code from now on!
                      00055 ; ; Starting pCode block
                      00056 ; ;ic:1:  _entry($5) :
                      00057 ; ;ic:2:        proc _strcpy [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
                      00058 S_strcpy__strcpy        code
000000                00059 _strcpy:
                      00060 ;       .line   32; string/strcpy.c     strcpy (char *d, char *s)
000000 CFD9 FFE5      00061         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00062         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00063         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00064         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00065         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00066         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00067         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00068         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00069         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00070         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00071         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00072         MOVFF   r0x09, POSTDEC1
                      00073 ; ;ic:3: iTemp0 [k2 lr3:13 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcpy_d_1_28}[r0x00 r0x01 r0x02 ] = recv _strcpy [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
000030 0E02           00074         MOVLW   0x02
000032 CFDB F000      00075         MOVFF   PLUSW2, r0x00
000036 0E03           00076         MOVLW   0x03
000038 CFDB F000      00077         MOVFF   PLUSW2, r0x01
00003C 0E04           00078         MOVLW   0x04
00003E CFDB F000      00079         MOVFF   PLUSW2, r0x02
                      00080 ; ;ic:4: iTemp6 [k11 lr4:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] = recv _strcpy [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
000042 0E05           00081         MOVLW   0x05
000044 CFDB F000      00082         MOVFF   PLUSW2, r0x03
000048 0E06           00083         MOVLW   0x06
00004A CFDB F000      00084         MOVFF   PLUSW2, r0x04
00004E 0E07           00085         MOVLW   0x07
000050 CFDB F000      00086         MOVFF   PLUSW2, r0x05
                      00087 ; ;ic:5:        iTemp4 [k9 lr5:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcpy_d1_1_29}[r0x06 r0x07 r0x08 ] := iTemp0 [k2 lr3:13 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcpy_d_1_28}[r0x00 r0x01 r0x02 ]
                      00088 ;       .line   36; string/strcpy.c     while (*d1++ = *s++)
000054 C000 F000      00089         MOVFF   r0x00, r0x06
000058 C000 F000      00090         MOVFF   r0x01, r0x07
00005C C000 F000      00091         MOVFF   r0x02, r0x08
                      00092 ; ;ic:7:  _whilecontinue_0($1) :
                      00093 ; ;ic:8:        iTemp7 [k12 lr8:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x09 ] = @[iTemp6 [k11 lr4:12 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
000060                00094 _00105_DS_:
000060 C000 FFE9      00095         MOVFF   r0x03, FSR0L
000064 C000 FFF3      00096         MOVFF   r0x04, PRODL
000068 5000           00097         MOVF    r0x05, W
00006A EC00 F000      00098         CALL    __gptrget1
00006E 6E00           00099         MOVWF   r0x09
                      00100 ; ;ic:9:        iTemp6 [k11 lr4:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] = iTemp6 [k11 lr4:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
000070 2A00           00101         INCF    r0x03, F
000072 E300           00102         BNC     _00115_DS_
000074 4A00           00103         INFSNZ  r0x04, F
000076 2A00           00104         INCF    r0x05, F
                      00105 ; ;ic:10:       *(iTemp4 [k9 lr5:12 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcpy_d1_1_29}[r0x06 r0x07 r0x08 ]) := iTemp7 [k12 lr8:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x09 ]
000078                00106 _00115_DS_:
gpasm-0.14.1 (Aug 18 2017)   strcpy.asm         8-18-2017  19:22:16          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000078 C000 FFE5      00107         MOVFF   r0x09, POSTDEC1
00007C C000 FFE9      00108         MOVFF   r0x06, FSR0L
000080 C000 FFF3      00109         MOVFF   r0x07, PRODL
000084 5000           00110         MOVF    r0x08, W
000086 EC00 F000      00111         CALL    __gptrput1
                      00112 ; ;ic:11:       iTemp4 [k9 lr5:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcpy_d1_1_29}[r0x06 r0x07 r0x08 ] = iTemp4 [k9 lr5:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcpy_d1_1_29}[r0x06 r0x07 r0x08 ] + 0x1 {const-unsigned-char literal}
00008A 2A00           00113         INCF    r0x06, F
00008C E300           00114         BNC     _00116_DS_
00008E 4A00           00115         INFSNZ  r0x07, F
000090 2A00           00116         INCF    r0x08, F
                      00117 ; ;ic:12:       if iTemp7 [k12 lr8:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x09 ] != 0 goto _whilecontinue_0($1)
000092                00118 _00116_DS_:
000092 5000           00119         MOVF    r0x09, W
000094 E100           00120         BNZ     _00105_DS_
                      00121 ; ;ic:13:       ret iTemp0 [k2 lr3:13 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strcpy_d_1_28}[r0x00 r0x01 r0x02 ]
                      00122 ;       .line   39; string/strcpy.c     return d;
000096 C000 FFF4      00123         MOVFF   r0x02, PRODH
00009A C000 FFF3      00124         MOVFF   r0x01, PRODL
00009E 5000           00125         MOVF    r0x00, W
                      00126 ; ;ic:14:  _return($4) :
                      00127 ; ;ic:15:       eproc _strcpy [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed) fixed}
0000A0 CFE4 F000      00128         MOVFF   PREINC1, r0x09
0000A4 CFE4 F000      00129         MOVFF   PREINC1, r0x08
0000A8 CFE4 F000      00130         MOVFF   PREINC1, r0x07
0000AC CFE4 F000      00131         MOVFF   PREINC1, r0x06
0000B0 CFE4 F000      00132         MOVFF   PREINC1, r0x05
0000B4 CFE4 F000      00133         MOVFF   PREINC1, r0x04
0000B8 CFE4 F000      00134         MOVFF   PREINC1, r0x03
0000BC CFE4 F000      00135         MOVFF   PREINC1, r0x02
0000C0 CFE4 F000      00136         MOVFF   PREINC1, r0x01
0000C4 CFE4 F000      00137         MOVFF   PREINC1, r0x00
0000C8 CFE4 FFD9      00138         MOVFF   PREINC1, FSR2L
0000CC 0012           00139         RETURN  
                      00140 
                      00141 
                      00142 
                      00143 ; Statistics:
                      00144 ; code size:      206 (0x00ce) bytes ( 0.16%)
                      00145 ;                 103 (0x0067) words
                      00146 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00147 ; access size:     10 (0x000a) bytes
                      00148 
                      00149 
                      00150         end
gpasm-0.14.1 (Aug 18 2017)   strcpy.asm         8-18-2017  19:22:16          PAGE  4


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00105_DS_                        00000060
_00115_DS_                        00000078
_00116_DS_                        00000092
__18F452                          00000001
__gptrget1                        00000000
__gptrput1                        00000000
_strcpy                           00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

