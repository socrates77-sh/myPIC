gpasm-0.14.1 (Aug 18 2017)   strncat.asm        8-18-2017  19:22:21          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:22:21 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _strncat
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrget1
                      00021         extern  __gptrput1
                      00022 
                      00023 ;--------------------------------------------------------
                      00024 ;       Equates to used internal registers
                      00025 ;--------------------------------------------------------
  00000FD8            00026 STATUS  equ     0xfd8
  00000FE8            00027 WREG    equ     0xfe8
  00000FE9            00028 FSR0L   equ     0xfe9
  00000FE1            00029 FSR1L   equ     0xfe1
  00000FD9            00030 FSR2L   equ     0xfd9
  00000FE5            00031 POSTDEC1        equ     0xfe5
  00000FE4            00032 PREINC1 equ     0xfe4
  00000FDB            00033 PLUSW2  equ     0xfdb
  00000FF3            00034 PRODL   equ     0xff3
  00000FF4            00035 PRODH   equ     0xff4
                      00036 
                      00037 
                      00038 ; Internal registers
                      00039 .registers      udata_ovr       0x0000
000000                00040 r0x00   res     1
000001                00041 r0x01   res     1
000002                00042 r0x02   res     1
000003                00043 r0x03   res     1
000004                00044 r0x04   res     1
000005                00045 r0x05   res     1
000006                00046 r0x06   res     1
000007                00047 r0x07   res     1
000008                00048 r0x08   res     1
000009                00049 r0x09   res     1
00000A                00050 r0x0a   res     1
00000B                00051 r0x0b   res     1
00000C                00052 r0x0c   res     1
00000D                00053 r0x0d   res     1
gpasm-0.14.1 (Aug 18 2017)   strncat.asm        8-18-2017  19:22:21          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00000E                00054 r0x0e   res     1
00000F                00055 r0x0f   res     1
                      00056 
                      00057 ;--------------------------------------------------------
                      00058 ; global & static initialisations
                      00059 ;--------------------------------------------------------
                      00060 ; I code from now on!
                      00061 ; ; Starting pCode block
                      00062 ; ;ic:1:  _entry($10) :
                      00063 ; ;ic:2:        proc _strncat [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed, unsigned-int fixed) fixed}
                      00064 S_strncat__strncat      code
000000                00065 _strncat:
                      00066 ;       .line   32; string/strncat.c    strncat (char *front, char * back, size_t count) 
000000 CFD9 FFE5      00067         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00068         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00069         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00070         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00071         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00072         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00073         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00074         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00075         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00076         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00077         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00078         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00079         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00080         MOVFF   r0x0b, POSTDEC1
000038 C000 FFE5      00081         MOVFF   r0x0c, POSTDEC1
00003C C000 FFE5      00082         MOVFF   r0x0d, POSTDEC1
000040 C000 FFE5      00083         MOVFF   r0x0e, POSTDEC1
000044 C000 FFE5      00084         MOVFF   r0x0f, POSTDEC1
                      00085 ; ;ic:3: iTemp0 [k2 lr3:30 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_front_1_28}[r0x00 r0x01 r0x02 ] = recv _strncat [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed, unsigned-int fixed) fixed}
000048 0E02           00086         MOVLW   0x02
00004A CFDB F000      00087         MOVFF   PLUSW2, r0x00
00004E 0E03           00088         MOVLW   0x03
000050 CFDB F000      00089         MOVFF   PLUSW2, r0x01
000054 0E04           00090         MOVLW   0x04
000056 CFDB F000      00091         MOVFF   PLUSW2, r0x02
                      00092 ; ;ic:4: iTemp1 [k4 lr4:14 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_back_1_28}[r0x03 r0x04 r0x05 ] = recv _strncat [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed, unsigned-int fixed) fixed}
00005A 0E05           00093         MOVLW   0x05
00005C CFDB F000      00094         MOVFF   PLUSW2, r0x03
000060 0E06           00095         MOVLW   0x06
000062 CFDB F000      00096         MOVFF   PLUSW2, r0x04
000066 0E07           00097         MOVLW   0x07
000068 CFDB F000      00098         MOVFF   PLUSW2, r0x05
                      00099 ; ;ic:5: iTemp2 [k6 lr5:16 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _strncat_count_1_28}[r0x06 r0x07 ] = recv _strncat [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed, unsigned-int fixed) fixed}
00006C 0E08           00100         MOVLW   0x08
00006E CFDB F000      00101         MOVFF   PLUSW2, r0x06
000072 0E09           00102         MOVLW   0x09
000074 CFDB F000      00103         MOVFF   PLUSW2, r0x07
                      00104 ; ;ic:6:        iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_start_1_29}[r0x08 r0x09 r0x0a ] := iTemp0 [k2 lr3:30 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_front_1_28}[r0x00 r0x01 r0x02 ]
                      00105 ;       .line   34; string/strncat.c    char *start = front;
000078 C000 F000      00106         MOVFF   r0x00, r0x08
gpasm-0.14.1 (Aug 18 2017)   strncat.asm        8-18-2017  19:22:21          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007C C000 F000      00107         MOVFF   r0x01, r0x09
000080 C000 F000      00108         MOVFF   r0x02, r0x0a
                      00109 ; ;ic:7:        iTemp5 [k11 lr7:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] := iTemp0 [k2 lr3:30 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_front_1_28}[r0x00 r0x01 r0x02 ]
                      00110 ;       .line   36; string/strncat.c    while (*front++)
000084 C000 F000      00111         MOVFF   r0x00, r0x0b
000088 C000 F000      00112         MOVFF   r0x01, r0x0c
00008C C000 F000      00113         MOVFF   r0x02, r0x0d
                      00114 ; ;ic:9:  _whilecontinue_0($1) :
                      00115 ; ;ic:10:       iTemp6 [k12 lr10:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ] = @[iTemp5 [k11 lr7:13 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
000090                00116 _00105_DS_:
000090 C000 FFE9      00117         MOVFF   r0x0b, FSR0L
000094 C000 FFF3      00118         MOVFF   r0x0c, PRODL
000098 5000           00119         MOVF    r0x0d, W
00009A EC00 F000      00120         CALL    __gptrget1
00009E 6E00           00121         MOVWF   r0x0e
                      00122 ; ;ic:11:       iTemp5 [k11 lr7:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] = iTemp5 [k11 lr7:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] + 0x1 {const-unsigned-char literal}
0000A0 2A00           00123         INCF    r0x0b, F
0000A2 E300           00124         BNC     _00126_DS_
0000A4 4A00           00125         INFSNZ  r0x0c, F
0000A6 2A00           00126         INCF    r0x0d, F
                      00127 ; ;ic:12:       if iTemp6 [k12 lr10:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ] != 0 goto _whilecontinue_0($1)
0000A8                00128 _00126_DS_:
0000A8 5000           00129         MOVF    r0x0e, W
0000AA E100           00130         BNZ     _00105_DS_
                      00131 ; ;ic:13:       iTemp0 [k2 lr3:30 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_front_1_28}[r0x00 r0x01 r0x02 ] = iTemp5 [k11 lr7:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] - 0x1 {const-unsigned-char literal}
                      00132 ;       .line   39; string/strncat.c    front--;
0000AC 5000           00133         MOVF    r0x0b, W
0000AE 0FFF           00134         ADDLW   0xff
0000B0 6E00           00135         MOVWF   r0x00
0000B2 0EFF           00136         MOVLW   0xff
0000B4 2000           00137         ADDWFC  r0x0c, W
0000B6 6E00           00138         MOVWF   r0x01
0000B8 0EFF           00139         MOVLW   0xff
0000BA 2000           00140         ADDWFC  r0x0d, W
0000BC 6E00           00141         MOVWF   r0x02
                      00142 ; ;ic:14:       iTemp14 [k20 lr14:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] := iTemp1 [k4 lr4:14 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_back_1_28}[r0x03 r0x04 r0x05 ]
                      00143 ; ;ic:15:       iTemp12 [k18 lr15:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] := iTemp0 [k2 lr3:30 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_front_1_28}[r0x00 r0x01 r0x02 ]
                      00144 ;       .line   40; string/strncat.c    while (count--)
0000BE C000 F000      00145         MOVFF   r0x00, r0x0b
0000C2 C000 F000      00146         MOVFF   r0x01, r0x0c
0000C6 C000 F000      00147         MOVFF   r0x02, r0x0d
                      00148 ; ;ic:16:       iTemp10 [k16 lr16:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] := iTemp2 [k6 lr5:16 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _strncat_count_1_28}[r0x06 r0x07 ]
                      00149 ; ;ic:18:  _whilecontinue_1($6) :
                      00150 ; ;ic:19:       iTemp9 [k15 lr19:21 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-int fixed}[r0x0e r0x0f ] := iTemp10 [k16 lr16:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ]
0000CA                00151 _00110_DS_:
0000CA C000 F000      00152         MOVFF   r0x06, r0x0e
0000CE C000 F000      00153         MOVFF   r0x07, r0x0f
                      00154 ; ;ic:20:       iTemp10 [k16 lr16:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] = iTemp10 [k16 lr16:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}[r0x06 r0x07 ] - 0x1 {const-unsigned-char literal}
0000D2 0EFF           00155         MOVLW   0xff
0000D4 2600           00156         ADDWF   r0x06, F
0000D6 2200           00157         ADDWFC  r0x07, F
                      00158 ; ;ic:21:       if iTemp9 [k15 lr19:21 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{unsigned-int fixed}[r0x0e r0x0f ] == 0 goto _whilebreak_1($8)
0000D8 5000           00159         MOVF    r0x0e, W
gpasm-0.14.1 (Aug 18 2017)   strncat.asm        8-18-2017  19:22:21          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000DA 1000           00160         IORWF   r0x0f, W
0000DC E000           00161         BZ      _00112_DS_
                      00162 ; ;ic:22:       iTemp15 [k21 lr22:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ] = @[iTemp14 [k20 lr14:27 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] + 0x0 {const-unsigned-char literal}]
                      00163 ;       .line   41; string/strncat.c    if (!(*front++ = *back++))
0000DE C000 FFE9      00164         MOVFF   r0x03, FSR0L
0000E2 C000 FFF3      00165         MOVFF   r0x04, PRODL
0000E6 5000           00166         MOVF    r0x05, W
0000E8 EC00 F000      00167         CALL    __gptrget1
0000EC 6E00           00168         MOVWF   r0x0e
                      00169 ; ;ic:23:       iTemp14 [k20 lr14:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] = iTemp14 [k20 lr14:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x03 r0x04 r0x05 ] + 0x1 {const-unsigned-char literal}
0000EE 2A00           00170         INCF    r0x03, F
0000F0 E300           00171         BNC     _00127_DS_
0000F2 4A00           00172         INFSNZ  r0x04, F
0000F4 2A00           00173         INCF    r0x05, F
                      00174 ; ;ic:24:       *(iTemp12 [k18 lr15:27 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ]) := iTemp15 [k21 lr22:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ]
0000F6                00175 _00127_DS_:
0000F6 C000 FFE5      00176         MOVFF   r0x0e, POSTDEC1
0000FA C000 FFE9      00177         MOVFF   r0x0b, FSR0L
0000FE C000 FFF3      00178         MOVFF   r0x0c, PRODL
000102 5000           00179         MOVF    r0x0d, W
000104 EC00 F000      00180         CALL    __gptrput1
                      00181 ; ;ic:25:       iTemp12 [k18 lr15:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] = iTemp12 [k18 lr15:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ] + 0x1 {const-unsigned-char literal}
000108 2A00           00182         INCF    r0x0b, F
00010A E300           00183         BNC     _00128_DS_
00010C 4A00           00184         INFSNZ  r0x0c, F
00010E 2A00           00185         INCF    r0x0d, F
                      00186 ; ;ic:26:       iTemp0 [k2 lr3:30 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_front_1_28}[r0x00 r0x01 r0x02 ] := iTemp12 [k18 lr15:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x0b r0x0c r0x0d ]
000110                00187 _00128_DS_:
000110 C000 F000      00188         MOVFF   r0x0b, r0x00
000114 C000 F000      00189         MOVFF   r0x0c, r0x01
000118 C000 F000      00190         MOVFF   r0x0d, r0x02
                      00191 ; ;ic:27:       if iTemp15 [k21 lr22:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x0e ] != 0 goto _whilecontinue_1($6)
00011C 5000           00192         MOVF    r0x0e, W
00011E E100           00193         BNZ     _00110_DS_
                      00194 ; ;ic:28:       ret iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_start_1_29}[r0x08 r0x09 r0x0a ]
                      00195 ;       .line   42; string/strncat.c    return start;
000120 C000 FFF4      00196         MOVFF   r0x0a, PRODH
000124 C000 FFF3      00197         MOVFF   r0x09, PRODL
000128 5000           00198         MOVF    r0x08, W
00012A D000           00199         BRA     _00113_DS_
                      00200 ; ;ic:29:  _whilebreak_1($8) :
                      00201 ; ;ic:30:       *(iTemp0 [k2 lr3:30 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_front_1_28}[r0x00 r0x01 r0x02 ]) := 0x0 {const-char literal}
00012C                00202 _00112_DS_:
                      00203 ;       .line   44; string/strncat.c    *front = '\0';
00012C 6AE5           00204         CLRF    POSTDEC1
00012E C000 FFE9      00205         MOVFF   r0x00, FSR0L
000132 C000 FFF3      00206         MOVFF   r0x01, PRODL
000136 5000           00207         MOVF    r0x02, W
000138 EC00 F000      00208         CALL    __gptrput1
                      00209 ; ;ic:31:       ret iTemp3 [k8 lr6:31 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _strncat_start_1_29}[r0x08 r0x09 r0x0a ]
                      00210 ;       .line   46; string/strncat.c    return start;
00013C C000 FFF4      00211         MOVFF   r0x0a, PRODH
000140 C000 FFF3      00212         MOVFF   r0x09, PRODL
gpasm-0.14.1 (Aug 18 2017)   strncat.asm        8-18-2017  19:22:21          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000144 5000           00213         MOVF    r0x08, W
                      00214 ; ;ic:32:  _return($9) :
                      00215 ; ;ic:33:       eproc _strncat [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* function ( char generic* fixed, char generic* fixed, unsigned-int fixed) fixed}
000146                00216 _00113_DS_:
000146 CFE4 F000      00217         MOVFF   PREINC1, r0x0f
00014A CFE4 F000      00218         MOVFF   PREINC1, r0x0e
00014E CFE4 F000      00219         MOVFF   PREINC1, r0x0d
000152 CFE4 F000      00220         MOVFF   PREINC1, r0x0c
000156 CFE4 F000      00221         MOVFF   PREINC1, r0x0b
00015A CFE4 F000      00222         MOVFF   PREINC1, r0x0a
00015E CFE4 F000      00223         MOVFF   PREINC1, r0x09
000162 CFE4 F000      00224         MOVFF   PREINC1, r0x08
000166 CFE4 F000      00225         MOVFF   PREINC1, r0x07
00016A CFE4 F000      00226         MOVFF   PREINC1, r0x06
00016E CFE4 F000      00227         MOVFF   PREINC1, r0x05
000172 CFE4 F000      00228         MOVFF   PREINC1, r0x04
000176 CFE4 F000      00229         MOVFF   PREINC1, r0x03
00017A CFE4 F000      00230         MOVFF   PREINC1, r0x02
00017E CFE4 F000      00231         MOVFF   PREINC1, r0x01
000182 CFE4 F000      00232         MOVFF   PREINC1, r0x00
000186 CFE4 FFD9      00233         MOVFF   PREINC1, FSR2L
00018A 0012           00234         RETURN  
                      00235 
                      00236 
                      00237 
                      00238 ; Statistics:
                      00239 ; code size:      396 (0x018c) bytes ( 0.30%)
                      00240 ;                 198 (0x00c6) words
                      00241 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00242 ; access size:     16 (0x0010) bytes
                      00243 
                      00244 
                      00245         end
gpasm-0.14.1 (Aug 18 2017)   strncat.asm        8-18-2017  19:22:21          PAGE  6


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00105_DS_                        00000090
_00110_DS_                        000000CA
_00112_DS_                        0000012C
_00113_DS_                        00000146
_00126_DS_                        000000A8
_00127_DS_                        000000F6
_00128_DS_                        00000110
__18F452                          00000001
__gptrget1                        00000000
__gptrput1                        00000000
_strncat                          00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

