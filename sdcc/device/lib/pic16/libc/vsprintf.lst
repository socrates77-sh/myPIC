gpasm-0.14.1 (Aug 18 2017)   vsprintf.asm       8-18-2017  19:21:46          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Aug 18 2017) (MINGW32)
                      00004 ; This file was generated Fri Aug 18 19:21:46 2017
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f452
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _vsprintf
                      00016 
                      00017 ;--------------------------------------------------------
                      00018 ; extern variables in this module
                      00019 ;--------------------------------------------------------
                      00020         extern  __gptrput1
                      00021         extern  _stdin
                      00022         extern  _stdout
                      00023         extern  _vfprintf
                      00024 
                      00025 ;--------------------------------------------------------
                      00026 ;       Equates to used internal registers
                      00027 ;--------------------------------------------------------
  00000FE8            00028 WREG    equ     0xfe8
  00000FE9            00029 FSR0L   equ     0xfe9
  00000FE1            00030 FSR1L   equ     0xfe1
  00000FD9            00031 FSR2L   equ     0xfd9
  00000FE5            00032 POSTDEC1        equ     0xfe5
  00000FE4            00033 PREINC1 equ     0xfe4
  00000FDB            00034 PLUSW2  equ     0xfdb
  00000FF3            00035 PRODL   equ     0xff3
                      00036 
                      00037 
                      00038 ; Internal registers
                      00039 .registers      udata_ovr       0x0000
000000                00040 r0x00   res     1
000001                00041 r0x01   res     1
000002                00042 r0x02   res     1
000003                00043 r0x03   res     1
000004                00044 r0x04   res     1
000005                00045 r0x05   res     1
000006                00046 r0x06   res     1
000007                00047 r0x07   res     1
000008                00048 r0x08   res     1
000009                00049 r0x09   res     1
00000A                00050 r0x0a   res     1
00000B                00051 r0x0b   res     1
                      00052 
                      00053 ;--------------------------------------------------------
gpasm-0.14.1 (Aug 18 2017)   vsprintf.asm       8-18-2017  19:21:46          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ; global & static initialisations
                      00055 ;--------------------------------------------------------
                      00056 ; I code from now on!
                      00057 ; ; Starting pCode block
                      00058 ; ;ic:1:  _entry($2) :
                      00059 ; ;ic:2:        proc _vsprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
                      00060 S_vsprintf__vsprintf    code
000000                00061 _vsprintf:
                      00062 ;       .line   33; stdio/vsprintf.c    vsprintf (char *ebuf, const char *fmt, va_list ap)
000000 CFD9 FFE5      00063         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00064         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00065         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00066         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00067         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00068         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00069         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00070         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00071         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00072         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00073         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00074         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00075         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00076         MOVFF   r0x0b, POSTDEC1
                      00077 ; ;ic:3: iTemp0 [k2 lr3:11 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vsprintf_ebuf_1_16}[r0x00 r0x01 r0x02 ] = recv _vsprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
000038 0E02           00078         MOVLW   0x02
00003A CFDB F000      00079         MOVFF   PLUSW2, r0x00
00003E 0E03           00080         MOVLW   0x03
000040 CFDB F000      00081         MOVFF   PLUSW2, r0x01
000044 0E04           00082         MOVLW   0x04
000046 CFDB F000      00083         MOVFF   PLUSW2, r0x02
                      00084 ; ;ic:4: iTemp1 [k4 lr4:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vsprintf_fmt_1_16}[r0x03 r0x04 r0x05 ] = recv _vsprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
00004A 0E05           00085         MOVLW   0x05
00004C CFDB F000      00086         MOVFF   PLUSW2, r0x03
000050 0E06           00087         MOVLW   0x06
000052 CFDB F000      00088         MOVFF   PLUSW2, r0x04
000056 0E07           00089         MOVLW   0x07
000058 CFDB F000      00090         MOVFF   PLUSW2, r0x05
                      00091 ; ;ic:5: iTemp2 [k6 lr5:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vsprintf_ap_1_16}[r0x06 r0x07 r0x08 ] = recv _vsprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
00005C 0E08           00092         MOVLW   0x08
00005E CFDB F000      00093         MOVFF   PLUSW2, r0x06
000062 0E09           00094         MOVLW   0x09
000064 CFDB F000      00095         MOVFF   PLUSW2, r0x07
000068 0E0A           00096         MOVLW   0x0a
00006A CFDB F000      00097         MOVFF   PLUSW2, r0x08
                      00098 ; ;ic:6:        iTemp4 [k11 lr6:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* generic* fixed}[r0x09 r0x0a r0x0b ] = (char generic* generic* fixed)iTemp0 [k2 lr3:11 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vsprintf_ebuf_1_16}[r0x00 r0x01 r0x02 ]
                      00099 ;       .line   37; stdio/vsprintf.c    i = vfprintf ((FILE *) ebuf, fmt, ap);
00006E 5000           00100         MOVF    r0x02, W
000070 6E00           00101         MOVWF   r0x0b
000072 5000           00102         MOVF    r0x01, W
000074 6E00           00103         MOVWF   r0x0a
000076 5000           00104         MOVF    r0x00, W
000078 6E00           00105         MOVWF   r0x09
                      00106 ; ;ic:7:        send iTemp4 [k11 lr6:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* generic* fixed}[r0x09 r0x0a r0x0b ]{argreg = 1}
gpasm-0.14.1 (Aug 18 2017)   vsprintf.asm       8-18-2017  19:21:46          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; ;ic:8:        send iTemp1 [k4 lr4:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{const-char generic* fixed}{ sir@ _vsprintf_fmt_1_16}[r0x03 r0x04 r0x05 ]{argreg = 2}
                      00108 ; ;ic:9:        send iTemp2 [k6 lr5:9 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char generic* fixed}{ sir@ _vsprintf_ap_1_16}[r0x06 r0x07 r0x08 ]{argreg = 3}
                      00109 ; ;ic:10:       iTemp3 [k8 lr10:13 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _vsprintf_i_1_17}[r0x03 r0x04 ] = call _vfprintf [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
00007A 5000           00110         MOVF    r0x08, W
00007C 6EE5           00111         MOVWF   POSTDEC1
00007E 5000           00112         MOVF    r0x07, W
000080 6EE5           00113         MOVWF   POSTDEC1
000082 5000           00114         MOVF    r0x06, W
000084 6EE5           00115         MOVWF   POSTDEC1
000086 5000           00116         MOVF    r0x05, W
000088 6EE5           00117         MOVWF   POSTDEC1
00008A 5000           00118         MOVF    r0x04, W
00008C 6EE5           00119         MOVWF   POSTDEC1
00008E 5000           00120         MOVF    r0x03, W
000090 6EE5           00121         MOVWF   POSTDEC1
000092 5000           00122         MOVF    r0x0b, W
000094 6EE5           00123         MOVWF   POSTDEC1
000096 5000           00124         MOVF    r0x0a, W
000098 6EE5           00125         MOVWF   POSTDEC1
00009A 5000           00126         MOVF    r0x09, W
00009C 6EE5           00127         MOVWF   POSTDEC1
00009E EC00 F000      00128         CALL    _vfprintf
0000A2 6E00           00129         MOVWF   r0x03
0000A4 CFF3 F000      00130         MOVFF   PRODL, r0x04
0000A8 0E09           00131         MOVLW   0x09
0000AA 26E1           00132         ADDWF   FSR1L, F
                      00133 ; ;ic:11:       iTemp6 [k16 lr11:12 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:11 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _vsprintf_ebuf_1_16}[r0x00 r0x01 r0x02 ] + iTemp3 [k8 lr10:13 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _vsprintf_i_1_17}[r0x03 r0x04 ]
                      00134 ;       .line   38; stdio/vsprintf.c    ebuf[i] = '\0';
0000AC 5000           00135         MOVF    r0x03, W
0000AE 2600           00136         ADDWF   r0x00, F
0000B0 5000           00137         MOVF    r0x04, W
0000B2 2200           00138         ADDWFC  r0x01, F
0000B4 6AE8           00139         CLRF    WREG
0000B6 2200           00140         ADDWFC  r0x02, F
                      00141 ; ;ic:12:       *(iTemp6 [k16 lr11:12 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ]) := 0x0 {const-char literal}
0000B8 6AE5           00142         CLRF    POSTDEC1
0000BA C000 FFE9      00143         MOVFF   r0x00, FSR0L
0000BE C000 FFF3      00144         MOVFF   r0x01, PRODL
0000C2 5000           00145         MOVF    r0x02, W
0000C4 EC00 F000      00146         CALL    __gptrput1
                      00147 ; ;ic:13:       ret iTemp3 [k8 lr10:13 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _vsprintf_i_1_17}[r0x03 r0x04 ]
                      00148 ;       .line   40; stdio/vsprintf.c    return i;
0000C8 C000 FFF3      00149         MOVFF   r0x04, PRODL
0000CC 5000           00150         MOVF    r0x03, W
                      00151 ; ;ic:14:  _return($1) :
                      00152 ; ;ic:15:       eproc _vsprintf [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( char generic* fixed, const-char generic* fixed, unsigned-char generic* fixed) fixed}
0000CE CFE4 F000      00153         MOVFF   PREINC1, r0x0b
0000D2 CFE4 F000      00154         MOVFF   PREINC1, r0x0a
0000D6 CFE4 F000      00155         MOVFF   PREINC1, r0x09
0000DA CFE4 F000      00156         MOVFF   PREINC1, r0x08
0000DE CFE4 F000      00157         MOVFF   PREINC1, r0x07
0000E2 CFE4 F000      00158         MOVFF   PREINC1, r0x06
0000E6 CFE4 F000      00159         MOVFF   PREINC1, r0x05
gpasm-0.14.1 (Aug 18 2017)   vsprintf.asm       8-18-2017  19:21:46          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000EA CFE4 F000      00160         MOVFF   PREINC1, r0x04
0000EE CFE4 F000      00161         MOVFF   PREINC1, r0x03
0000F2 CFE4 F000      00162         MOVFF   PREINC1, r0x02
0000F6 CFE4 F000      00163         MOVFF   PREINC1, r0x01
0000FA CFE4 F000      00164         MOVFF   PREINC1, r0x00
0000FE CFE4 FFD9      00165         MOVFF   PREINC1, FSR2L
000102 0012           00166         RETURN  
                      00167 
                      00168 
                      00169 
                      00170 ; Statistics:
                      00171 ; code size:      260 (0x0104) bytes ( 0.20%)
                      00172 ;                 130 (0x0082) words
                      00173 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00174 ; access size:     12 (0x000c) bytes
                      00175 
                      00176 
                      00177         end
gpasm-0.14.1 (Aug 18 2017)   vsprintf.asm       8-18-2017  19:21:46          PAGE  5


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODL                             00000FF3
WREG                              00000FE8
__18F452                          00000001
__gptrput1                        00000000
_stdin                            00000000
_stdout                           00000000
_vfprintf                         00000000
_vsprintf                         00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

